{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/core/modules/Input.ts","webpack:///./src/app/core/modules/Model.ts","webpack:///./src/app/core/modules/Output.ts","webpack:///./src/app/core/modules/Query.ts","webpack:///./src/app/core/modules/_parameterTypes.ts","webpack:///./src/app/core/modules/index.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/viewer.service.ts","webpack:///./src/app/mViewer/mobius-viewer.component.html","webpack:///./src/app/mViewer/mobius-viewer.component.scss","webpack:///./src/app/mViewer/mobius-viewer.component.ts","webpack:///./src/app/mViewer/mobius-viewer.module.ts","webpack:///./src/app/mViewer/viewers.config.ts","webpack:///./src/app/mViewer/viewers/console-viewer.component.ts","webpack:///./src/app/mViewer/viewers/index.ts","webpack:///./src/app/mViewer/viewers/procedure-help.component.ts","webpack:///./src/app/mViewer/viewers/viewer-text.component.ts","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.html","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.component.html","webpack:///./src/app/ngFlowchart-svg/flowchart.component.scss","webpack:///./src/app/ngFlowchart-svg/flowchart.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.module.ts","webpack:///./src/app/ngFlowchart-svg/index.ts","webpack:///./src/app/ngFlowchart-svg/node/node.actions.ts","webpack:///./src/app/ngFlowchart-svg/node/node.component.html","webpack:///./src/app/ngFlowchart-svg/node/node.component.scss","webpack:///./src/app/ngFlowchart-svg/node/node.component.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/directives/textarea/autogrow.directive.ts","webpack:///./src/app/shared/directives/textarea/index.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-gallery/simple-name.pipe.ts","webpack:///./src/app/views/view-gallery/view-gallery.component.html","webpack:///./src/app/views/view-gallery/view-gallery.component.scss","webpack:///./src/app/views/view-gallery/view-gallery.component.ts","webpack:///./src/app/views/view-gallery/view-gallery.config.ts","webpack:///./src/app/views/view-gallery/view-gallery.module.ts","webpack:///./src/app/views/view-publish/view-publish.component.html","webpack:///./src/app/views/view-publish/view-publish.component.scss","webpack:///./src/app/views/view-publish/view-publish.component.ts","webpack:///./src/app/views/view-publish/view-publish.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\">\\r\\n        <as-split-area size=\\\"50\\\" >\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"gallery\\\"' (click)='updateView(\\\"gallery\\\")'>Gallery</button>\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"publish\\\"' (click)='updateView(\\\"publish\\\")'>Publish</button>\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"flowchart\\\"' (click)='updateView(\\\"flowchart\\\")'>Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new (create)='updateFile($event)'></file-new>\\r\\n                    <file-save [file]='dataService.file'></file-save>\\r\\n                    <file-load (loaded)='updateFile($event)'></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute [flowchart]='dataService.flowchart'></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Reset Flowchart to Default\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>Reset</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <ng-container #vc></ng-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area size=\\\"50\\\">\\r\\n            <!-- mViewer panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <mviewer [data]='viewerData()' [helpView]='helpView'></mviewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n\\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n  .container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n  .container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n  .container .container__header .tab button:hover {\\n      color: blue; }\\n  .container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n  .container .container__header .dropmenu {\\n      display: inline-flex; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n  .content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n  ul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n  li.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n  li.link:hover {\\n  background-color: gray;\\n  color: white; }\\n  button.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n  button.btn:hover {\\n  color: blue; }\\n  .active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, ComponentFactoryResolver, ViewContainerRef,\r\n    ViewChild, EventEmitter, HostListener, OnInit } from '@angular/core';\r\nimport { ViewEditorComponent, ViewPublishComponent, ViewGalleryComponent } from '@views';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IView } from '../mViewer/view.interface';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\nimport { Observable } from 'rxjs';\r\n\r\n// @ts-ignore\r\nconsole.stdlog = console.log.bind(console);\r\n// @ts-ignore\r\nconsole.logs = [];\r\n// @ts-ignore\r\nconsole.log = function() {\r\n    // @ts-ignore\r\n    console.logs.push(Array.from(arguments));\r\n    // @ts-ignore\r\n    console.stdlog.apply(console, arguments);\r\n};\r\n/*\r\n\r\n*/\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html',\r\n    styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    private views = [];\r\n    private Viewers = {\r\n        'gallery': ViewGalleryComponent, // src/views/view-gallery/\r\n        'publish': ViewPublishComponent, // src/views/view-publish/\r\n        'flowchart': FlowchartComponent, // src/ngFlowchart-svg/\r\n        'editor': ViewEditorComponent    // src/views/view-editor/\r\n    };\r\n    activeView: string;\r\n    helpView: any;\r\n\r\n    constructor(private dataService: DataService, private injector: Injector, private r: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.activeView = 'gallery';\r\n        this.updateView('gallery');\r\n    }\r\n\r\n\r\n    updateFile(event: string) {\r\n        this.dataService.file = circularJSON.parse(event);\r\n        this.updateValue();\r\n    }\r\n\r\n    createView(view: string) {\r\n        const component = this.Viewers[view];\r\n        const factory = this.r.resolveComponentFactory(component);\r\n        const componentRef = factory.create(this.injector);\r\n        if (view === 'flowchart') {\r\n            componentRef.instance['switch'].subscribe(data => this.updateView(data));\r\n        } else if (view === 'editor') {\r\n            componentRef.instance['helpText'].subscribe(data => this.helpView = data);\r\n        } else if (view === 'gallery') {\r\n            componentRef.instance['switch'].subscribe(data => this.updateView(data));\r\n            // componentRef.instance['dataservice'] = this.dataService;\r\n        }\r\n        return componentRef;\r\n    }\r\n\r\n    updateView(view: string): void {\r\n        this.activeView = view;\r\n\r\n        if ( this.views[ view ] === undefined) {\r\n                this.views[ view ] = this.createView(view);\r\n        }\r\n        // this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ view ].hostView );\r\n    }\r\n\r\n    updateValue() {\r\n        for (const view in this.Viewers) {\r\n            if (!this.views[view]) { continue; }\r\n            const componentRef =    this.views[ view ];\r\n            if (view === 'flowchart') {\r\n                // componentRef.instance['data'] = this.dataService.flowchart;\r\n            } else if (view === 'editor') {\r\n                // componentRef.instance['flowchart'] = this.dataService.flowchart;\r\n                // componentRef.instance['node'] = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n            } else if (view === 'publish') {\r\n                // componentRef.instance['flowchart'] = this.dataService.flowchart;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        if (node.type === 'output') { return node.input.value; }\r\n        return node.output.value;\r\n    }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\n// import { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ViewPublishComponent, ViewPublishModule,\r\n         ViewEditorComponent, ViewEditorModule,\r\n         ViewGalleryComponent, ViewGalleryModule } from '@views';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { DataService } from '@services';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\nimport { MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n        declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        // FormsModule,\r\n        // AppRoutingModule,\r\n        // CoreModule,\r\n        ViewGalleryModule,\r\n        ViewEditorModule,\r\n        ViewPublishModule,\r\n        SharedModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n    ],\r\n    entryComponents: [\r\n        ViewEditorComponent,\r\n        ViewPublishComponent,\r\n        FlowchartComponent,\r\n        ViewGalleryComponent,\r\n    ],\r\n    providers: [ DataService ],\r\n    bootstrap: [ AppComponent ]\r\n})\r\n\r\nexport class AppModule {\r\n        constructor () { }\r\n}\r\n\r\n","/**\r\n * Declare a new constant for the input node\r\n * @summary Declare new constant\r\n *\r\n * @param {JSON} __constList__  List of constants to be added.\r\n * @param {string} const_name  Name of the constant.\r\n * @param {any} __input__  Value of the constant.\r\n *\r\n * @returns Void\r\n */\r\nexport function declare_constant(__constList__: JSON, const_name: string, __input__: any): void {\r\n    __constList__[const_name] = __input__;\r\n}\r\n","class model {\r\n    private _data;\r\n\r\n    constructor(data) {\r\n        this._data = [data];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Create a new model\r\n * @summary New model\r\n *\r\n * @returns {any[]} Empty new model\r\n */\r\nexport function __new__(): any[] {\r\n    return [];\r\n}\r\n\r\n/**\r\n * Merge two models, first model will be modified\r\n * @summary Merge two models\r\n *\r\n * @param {any[]} model1 First model to be merged, will be modified to become the merged model after execution of the function\r\n * @param {any[]} model2 Second model to be merged, unchanged after execution of the function\r\n *\r\n * @returns {any[]} Merged model\r\n */\r\nexport function __merge__(model1, model2): any[] {\r\n    for (const j of model2) {\r\n        let existing = false;\r\n        for (const i of model1) {\r\n            if (i.value === j.value) {\r\n                existing = true;\r\n            }\r\n        }\r\n        if (!existing) {\r\n            model1.push(j);\r\n        }\r\n    }\r\n    return model1;\r\n}\r\n\r\nexport function __preprocess__(__model__) {\r\n    return;\r\n}\r\n\r\nexport function __postprocess__(__model__) {\r\n    return;\r\n}\r\n\r\n/**\r\n * Register a value in the model\r\n * @summary Set a value\r\n *\r\n * @test test1\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {any} var_value  Value to be set.\r\n *\r\n * @returns {number[]} Index of the set value\r\n */\r\nexport function set(__model__: any[], var_value: any): number[] {\r\n    for (let i = 0; i < __model__.length; i++) {\r\n        if (__model__[i]['value'] === var_value) {\r\n            return [i];\r\n        }\r\n    }\r\n    const obj = {\r\n        'value': var_value,\r\n        'properties': {}\r\n    };\r\n    __model__.push(obj);\r\n    return [__model__.length - 1];\r\n}\r\n\r\n/**\r\n * Get a value from the model with a list of indices\r\n * @summary Get a specific value\r\n *\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number[]}}indices  List of indices of the values to be retrieved from the model.\r\n *\r\n * @returns Value\r\n */\r\nexport function get(__model__: JSON[], indices: number[]): any {\r\n    const result = [];\r\n\r\n    for (const i of indices) {\r\n        if (i > __model__.length || i < 0) {\r\n            continue;\r\n        }\r\n        result.push(__model__[i]);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Remove certain value from the model with a list of indices\r\n * @summary Remove a specific value\r\n *\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number[]} indices  List of indices of the values to be removed from the model.\r\n */\r\nexport function remove(__model__: JSON[], indices: number[]): void {\r\n    indices.sort((a, b) => b - a);\r\n    indices.map((index) => {\r\n        if (index > __model__.length) {\r\n            return;\r\n        }\r\n        __model__.splice(index, 1);\r\n    });\r\n}\r\n","\r\n/**\r\n * Return certain value from the model for the flowchart's end node\r\n * @summary Return a specific value\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number} index  Index of the value to be returned.\r\n * @returns {any} Value\r\n */\r\nexport function return_value(__model__: any[], index: number): any {\r\n    if (index > __model__.length) { return __model__; }\r\n    return __model__[index].value;\r\n}\r\n","\r\n/**\r\n * Assign properties to a certain value in the model\r\n * @summary Assign a property\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number[]} indices  Indices of the value to set properties with.\r\n * @param {string} statement  Properties to be added to the value.\r\n * @returns Void\r\n */\r\nexport function set(__model__: any[], indices: number[], statement: string): void {\r\n    let properties: any = statement.split('&');\r\n    properties = properties.map(prop => {\r\n        const property = prop.trim().substring(1).split('=');\r\n        property[0] =  property[0].trim();\r\n        property[1] =  property[1].trim();\r\n        property[1] =  property[1].substring(1, property[1].length - 1).trim();\r\n        return property;\r\n    });\r\n    for (const index of indices) {\r\n        if (index > __model__.length) {\r\n            return;\r\n        }\r\n        for (const property of properties) {\r\n            __model__[index]['properties'][property[0]] = property[1];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Get a list of indices of the values that have certain properties\r\n * @summary Get indices of values\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {string} statement  Properties to be added to the value.\r\n * @returns {number[]} List of indices\r\n */\r\nexport function get(__model__: JSON[], statement: string): number[] {\r\n    let property: any = statement.substring(1);\r\n    if (property.indexOf('==') !== -1) {\r\n        property = property.split('==');\r\n        property[0] =  property[0].trim();\r\n        property[1] =  property[1].trim();\r\n        property[1] =  property[1].substring(1, property[1].length - 1).trim();\r\n\r\n        const result = [];\r\n\r\n        for (let i = 0; i < __model__.length; i++) {\r\n            if (__model__[i]['properties'][property[0]] === property[1]) {\r\n                result.push(i);\r\n            }\r\n        }\r\n        return result;\r\n    } else if (property.indexOf('!=') !== -1) {\r\n        property = property.split('!=');\r\n        property[0] =  property[0].trim();\r\n        property[1] =  property[1].trim();\r\n        property[1] =  property[1].substring(1, property[1].length - 1).trim();\r\n\r\n        const result = [];\r\n\r\n        for (let i = 0; i < __model__.length; i++) {\r\n            if (__model__[i]['properties'][property[0]] !== property[1]) {\r\n                result.push(i);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","import {__new__, __merge__} from './Model';\r\n\r\nexport const _parameterTypes = {\r\n    constList: '__constList__',\r\n    model: '__model__',\r\n    input: '__input__',\r\n\r\n    new: 'Model.__new__',\r\n    newFn: __new__,\r\n\r\n    merge: 'Model.__merge__',\r\n    mergeFn: __merge__,\r\n\r\n    preprocess: 'Model.__preprocess__',\r\n    postprocess: 'Model.__postprocess__'\r\n};\r\n","import * as Model from './Model';\r\nexport {Model};\r\nimport * as Input from './Input';\r\nexport {Input};\r\nimport * as Query from './Query';\r\nexport {Query};\r\nimport * as Output from './Output';\r\nexport {Output};\r\n\r\nexport * from './_parameterTypes';\r\n","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private static _data: IMobius = {\r\n        name: 'default_file',\r\n        author: 'new_user',\r\n        last_updated: new Date(),\r\n        version: 1,\r\n        flowchart: FlowchartUtils.newflowchart()\r\n    };\r\n\r\n    private static _selected = 0;\r\n\r\n    get file() { return DataService._data; }\r\n    set file(data: IMobius) {\r\n            DataService._data = <IMobius>{\r\n                    name: data.name,\r\n                    author: data.author,\r\n                    flowchart: data.flowchart,\r\n                    last_updated: data.last_updated,\r\n                    version: data.version\r\n            };\r\n    }\r\n\r\n    get flowchart(): IFlowchart { return DataService._data.flowchart; }\r\n    get node(): INode { return DataService._data.flowchart.nodes[DataService._data.flowchart.meta.selected_nodes[0]]; }\r\n\r\n}\r\n","export * from './data.service';\r\nexport * from './viewer.service';\r\n","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}\r\n","module.exports = \"<div class='viewer-container'>  \\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"tab\\\">\\r\\n            <button class='btn-tab' \\r\\n            [class.active]='view.name == activeView.name'\\r\\n            *ngFor='let view of Viewers;' \\r\\n            (click)='updateView(view)'>\\r\\n            {{view.name}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class='content__panel'>\\r\\n        <ng-container #vc></ng-container>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".viewer-container {\\n  display: block;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.container__header {\\n  flex: 0 1 auto;\\n  height: 35px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 0px 0px 0px 15px;\\n  background-color: #ccc;\\n  border-bottom: 3px solid #eeeeee;\\n  line-height: 35px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  text-align: center; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  width: 97%;\\n  height: 93%;\\n  overflow: auto; }\\n\\nbutton.btn {\\n  margin: 10px;\\n  font-size: 14px;\\n  line-height: 18px;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  padding: 2px 10px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n/* tab styling */\\n\\n.tab {\\n  border: 2px;\\n  overflow: hidden;\\n  background-color: #ccc; }\\n\\n.tab button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: inherit;\\n  color: #505050;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 8px 10px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n.tab button:hover {\\n  color: blue; }\\n\\n.tab button.active {\\n  background-color: #ccc;\\n  color: #000096;\\n  font-weight: 600;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, Input,\r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy, OnInit, OnChanges } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IView } from './view.interface';\r\nimport { Viewers } from './viewers.config';\r\nimport { EventEmitter } from 'events';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'mviewer',\r\n    templateUrl:  'mobius-viewer.component.html',\r\n    styleUrls: ['mobius-viewer.component.scss']\r\n})\r\nexport class ViewerContainerComponent implements OnChanges, OnInit, OnDestroy {\r\n\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() data: any;\r\n    @Input() helpView: any;\r\n    currentHelpView: any;\r\n\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver) {\r\n\r\n    }\r\n\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n\r\n    ngOnInit() {\r\n        this.activeView = this.Viewers[0];\r\n        this.updateView( this.activeView );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        console.log('onDestroy');\r\n        for (const view of this.views) {\r\n            view.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.currentHelpView !== this.helpView) {\r\n            let view;\r\n            for (const v of this.Viewers) {\r\n                if (v.name === 'Help') { view = v; }\r\n            }\r\n            this.currentHelpView = this.helpView;\r\n            this.updateView(view);\r\n        } else { this.updateValue(); }\r\n    }\r\n\r\n    createView(view: IView) {\r\n        const component = view.component;\r\n        const factory = this.r.resolveComponentFactory(component);\r\n        const componentRef = factory.create(this.injector);\r\n        /*\r\n        if (view.name != 'Console'){\r\n            componentRef.instance[\"data\"] = this.data;\r\n        }\r\n        */\r\n        return componentRef;\r\n    }\r\n\r\n    updateView(view: IView): void {\r\n        this.activeView = view;\r\n\r\n        if ( this.views[ this.activeView.name ] === undefined) {\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        }\r\n\r\n        this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n\r\n    updateValue() {\r\n        try {\r\n            const componentRef =  this.views[ this.activeView.name ];\r\n            if (this.activeView.name === 'Help') {\r\n                componentRef.instance['output'] = this.currentHelpView;\r\n            } else if (this.activeView.name !== 'Console') {\r\n                componentRef.instance['data'] = this.data;\r\n            }\r\n        } catch (ex) {\r\n            // console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ViewerContainerComponent } from './mobius-viewer.component';\r\nimport { VIEWER_ARR } from './viewers.config';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ViewerContainerComponent,\r\n        ...VIEWER_ARR\r\n    ],\r\n    exports: [ ViewerContainerComponent ],\r\n    imports: [ CommonModule, FormsModule ],\r\n    entryComponents: [ ...VIEWER_ARR ],\r\n    providers: [ ]\r\n})\r\nexport class MobiusViewerModule {\r\n        constructor () { }\r\n}\r\n","import { IView } from './view.interface';\r\n// Step-1: Add new ViewerComponet here\r\nimport { TextViewerComponent } from './viewers';\r\nimport { ConsoleViewerComponent } from './viewers/console-viewer.component';\r\nimport { ProcedureHelpComponent } from './viewers/procedure-help.component';\r\n\r\nexport const VIEWER_ARR = [\r\n    TextViewerComponent,\r\n    ConsoleViewerComponent,\r\n    ProcedureHelpComponent,\r\n    // JSONViewerComponent,\r\n    // ThreeViewerComponent\r\n    // Step-2: Add Component here\r\n];\r\n\r\nexport const Viewers: IView[] = [\r\n    { name: 'Summary', icon: undefined, component: TextViewerComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    { name: 'Help', icon: undefined, component: ProcedureHelpComponent },\r\n    // { name: 'json-viewer', icon: undefined, component: JSONViewerComponent },\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    // { name: 'three-viewer', icon: undefined, component: ThreeViewerComponent }\r\n];\r\n\r\n","import { Component, Input, OnInit, DoCheck } from '@angular/core';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'console-viewer',\r\n  template: `<textarea>{{ text || \"\" }}</textarea>`,\r\n  styles: [`\r\n  :host{\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  textarea{\r\n    height: 99%;\r\n    width: 99%;\r\n    overflow: auto;\r\n    resize: none;\r\n    background-color: rgb(220,220,220);\r\n    text-color: rgb(80,80,80);\r\n    border: none;\r\n  }`]\r\n})\r\nexport class ConsoleViewerComponent implements OnInit, DoCheck {\r\n\r\n  text: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // @ts-ignore\r\n    this.text = console.logs.join('\\n---------------------------------------------------------\\n');\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // @ts-ignore\r\n    this.text = console.logs.join('\\n---------------------------------------------------------\\n');\r\n  }\r\n}\r\n","export * from './viewer-text.component';\r\n// export * from './template.component';\r\n","import { Component, Input } from '@angular/core';\r\nimport { ModuleDocAware } from '@shared/decorators';\r\n\r\n@ModuleDocAware\r\n@Component({\r\n  selector: 'procedure-help',\r\n  template: `\r\n  <div *ngIf='output'>\r\n    <h2>{{output.name}}</h2>\r\n    <h4>Module: <span>{{output.module}}</span></h4>\r\n    <h5><span>Description:</span></h5>\r\n    <p>{{output.description}}</p>\r\n    <h5 *ngIf='output.parameters?.length > 0'><span>Parameters: </span></h5>\r\n    <p class='paramP' *ngFor='let param of output.parameters'><span>{{param.name}} - </span>{{param.description}}</p>\r\n    <h5 *ngIf='output.returns'>Returns:</h5>\r\n    <p *ngIf='output.returns'>{{output.returns}}</p>\r\n  </div>\r\n\r\n\r\n  `,\r\n  styles: [`\r\n$prod-background-color: rgb(250,250,250);\r\n$background-color: rgb(220,220,220);\r\n$title-background: #ccc;\r\n$text-color: rgb(80,80,80);\r\n$selected-color: rgb(0,0,150);\r\n$function-text-color: rgb(190, 140, 30);\r\n$separator: rgb(239,239,239);\r\n\r\n:host{\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\ndiv{\r\n  width: 100%;\r\n  padding-left:10px;\r\n}\r\nh5{\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n}\r\np{\r\n  font-family: sans-serif;\r\n}\r\n.funcDesc{\r\n  font-weight: 600;\r\n}\r\n\r\n.paramP{\r\n  padding-left: 5px;\r\n\r\n}\r\n\r\nspan{\r\n  font-weight: 550;\r\n  font-style: italic;\r\n}\r\n\r\n`]\r\n})\r\nexport class ProcedureHelpComponent {\r\n    @Input() output;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        console.log(this.output)\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, DoCheck } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'text-viewer',\r\n  template: `<textarea>{{ output || \"no-value\" }}</textarea>`,\r\n  styles: [`\r\n  :host{\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  textarea{\r\n    height: 99%;\r\n    width: 99%;\r\n    overflow: auto;\r\n    resize: none;\r\n    background-color: rgb(220,220,220);\r\n    text-color: rgb(80,80,80);\r\n    border: none;\r\n    font-family: arial;\r\n  }`]\r\n})\r\nexport class TextViewerComponent implements OnInit, DoCheck {\r\n    @Input() data;\r\n    output: string;\r\n\r\n    constructor() {\r\n      // console.log(`Text Viewer Created`);\r\n    }\r\n\r\n   ngOnInit() {\r\n    if (typeof this.data === 'number' || this.data === undefined) {\r\n      this.output = this.data;\r\n    } else if (typeof this.data === 'string') {\r\n      this.output = '\"' + this.data + '\"';\r\n    } else if (this.data.constructor === [].constructor) {\r\n      this.output = JSON.stringify(this.data);\r\n    } else if (this.data.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.data);\r\n    } else {\r\n      console.log('Unknown output type:', this.data);\r\n      this.output = this.data;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ngDoCheck() {\r\n    if (typeof this.data === 'number' || this.data === undefined) {\r\n      this.output = this.data;\r\n    } else if (typeof this.data === 'string') {\r\n      this.output = '\"' + this.data + '\"';\r\n    } else if (this.data.constructor === [].constructor) {\r\n      this.output = JSON.stringify(this.data);\r\n    } else if (this.data.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.data);\r\n    } else {\r\n      console.log('Unknown output type:', this.data);\r\n      this.output = this.data;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 8) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 16) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 22)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 12)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styles: [`\r\n    .edge{\r\n        fill: none;\r\n        stroke: rgb(80, 80, 80);\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        stroke-width: 2px;\r\n        opacity: 1;\r\n        pointer-events: stroke;\r\n        marker-end: url(#arrow);\r\n    }\r\n    .inviEdge{\r\n        fill: none;\r\n        stroke: gray;\r\n        stroke-width: 30px;\r\n        opacity: 0;\r\n        pointer-events: stroke;\r\n    }\r\n    .selected{\r\n        stroke: rgb(0, 0, 150);\r\n        opacity: 1;\r\n        marker-end: url(#arrow_selected);\r\n\r\n    }\r\n  `]\r\n})\r\nexport class EdgeComponent {\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.edge.selected) {\r\n            this.selected.emit(event.ctrlKey);\r\n        } else {\r\n            if (event.ctrlKey) { this.selected.emit('ctrl'); } else { this.selected.emit('single'); }\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge() {\r\n        this.delete.emit();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id = 'flowchart-main-container' class='container'>\\r\\n\\r\\n    <!-- svg component -->\\r\\n    <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" viewBox=\\\"0 0 1500 1500\\\" \\r\\n    (mousedown)='panStart($event)'\\r\\n    (mousemove)='handleMouseMove($event)'  \\r\\n    (mouseup)='handleMouseUp($event)'\\r\\n    (mouseenter)='activateKeyEvent()'\\r\\n    (mouseleave)='deactivateKeyEvent()'\\r\\n    (wheel)='scale($event)'\\r\\n    >\\r\\n        <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n        <defs>\\r\\n            <!-- grid pattern -->\\r\\n            <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n              <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n            </pattern>\\r\\n            <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n              <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n              <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n            </pattern>\\r\\n\\r\\n            <!-- arrow head -->\\r\\n            <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n              <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(80, 80, 80)\\\" fill=\\\"transparent\\\" />\\r\\n            </marker>\\r\\n            <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(0, 0, 150)\\\" fill=\\\"transparent\\\"  />\\r\\n            </marker>\\r\\n        </defs>\\r\\n\\r\\n        <!-- svg frame-->\\r\\n        <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                  \\r\\n\\r\\n        <!-- wires => edge.component -->\\r\\n        <g edge *ngFor=\\\"let edge of dataService.flowchart.edges; let edge_index = index\\\" \\r\\n        [edge]='edge'\\r\\n        [inputOffset]='inputOffset'\\r\\n        [outputOffset]='outputOffset'\\r\\n        (selected)='selectEdge($event, edge_index)'\\r\\n        />\\r\\n\\r\\n        <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n        <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n\\r\\n        <!-- nodes => node.component -->\\r\\n        <g node *ngFor=\\\"let node of dataService.flowchart.nodes; let node_index = index\\\" \\r\\n        id='flw_node_{{node_index}}'\\r\\n        [node]='node' \\r\\n        [selected]='isSelected(node_index)'\\r\\n        [inputOffset]='inputOffset'\\r\\n        [outputOffset]='outputOffset'\\r\\n        (action)='nodeAction($event, node_index)'\\r\\n        />\\r\\n    </svg>\\r\\n\\r\\n    <!-- 3 top left buttons of the svg: add Node, delete Node and delete Wire -->\\r\\n    <div class='button-row'>\\r\\n        <button mat-icon-button disableRipple='true' (click)='addNode()' title=\\\"Add Node\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button disableRipple='true' (click)='deleteSelectedNodes()' title=\\\"Delete Selected Node\\\">\\r\\n        <mat-icon>remove</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button disableRipple='true' (click)='deleteSelectedEdges()' title=\\\"Delete Selected Wires\\\">\\r\\n        <mat-icon>link_off</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <!-- focus on flowchart button on the top right of the svg -->\\r\\n    <button class='resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n        <mat-icon>control_camera</mat-icon>\\r\\n    </button>\\r\\n    \\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".reset {\\n  margin: 0px;\\n  padding: 0px; }\\n\\n.default {\\n  font-size: 12px;\\n  color: #8AA8C0;\\n  line-height: 150px;\\n  text-align: center; }\\n\\n.viewer {\\n  /*     width: 100%; \\r\\noverflow: auto;\\r\\n\\r\\npadding: 0px;\\r\\nmargin: 0px;\\r\\n\\r\\n.header{\\r\\n\\r\\n    display: flex; \\r\\n    flex-direction: row; \\r\\n    justify-content: space-between;\\r\\n\\r\\n    position: relative;\\r\\n    font-size: 14px; \\r\\n    font-weight: 600; \\r\\n    line-height: $header-height;\\r\\n    text-transform: uppercase;\\r\\n    letter-spacing: 1.5px;\\r\\n    height: $header-height;\\r\\n\\r\\n    color: #ADADAD;\\r\\n\\r\\n    .btn-group{\\r\\n        height: $header-height; \\r\\n\\r\\n        button{\\r\\n            width: 0.9*$header-height; \\r\\n            height: 0.9*$header-height; \\r\\n            margin: 0px;\\r\\n            border: 1px solid #B4B1B1;\\r\\n            box-shadow: none;\\r\\n\\r\\n            &:focus{\\r\\n                \\r\\n            }\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n.container{\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    &:focus{\\r\\n        \\r\\n    }\\r\\n} */ }\\n\\n.viewer .container {\\n    display: flex;\\n    flex-direction: row;\\n    height: 100%; }\\n\\n.viewer .container .sidebar {\\n      z-index: 100; }\\n\\n.viewer .container .view-container {\\n      box-sizing: border-box;\\n      height: 100%;\\n      width: 100%;\\n      padding-bottom: 30px;\\n      overflow: auto; }\\n\\n.container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.container .svgCanvas .temp-wire {\\n    stroke: #505050;\\n    stroke-width: 2px;\\n    stroke-dasharray: 10 15;\\n    opacity: 0.5; }\\n\\n.transform--container {\\n  position: absolute;\\n  width: 100%;\\n  transition: -webkit-transform 0.1s;\\n  transition: transform 0.1s;\\n  transition: transform 0.1s, -webkit-transform 0.1s; }\\n\\nsplit-area {\\n  overflow: auto !important; }\\n\\ninput {\\n  border: none; }\\n\\ninput:focus {\\n  border-bottom: 1px dashed gray; }\\n\\n#flowchart__name {\\n  margin: 0 auto;\\n  font-size: 14px;\\n  line-height: 28px;\\n  font-weight: bold;\\n  color: #8AA8C0; }\\n\\n.button-row {\\n  position: absolute;\\n  top: 0px;\\n  left: 10px; }\\n\\n.button-row button {\\n    color: #505050;\\n    width: 28px; }\\n\\n.resetViewer-button {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #505050; }\\n\\n.viewer {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  background-image: repeating-linear-gradient(0deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px), repeating-linear-gradient(-90deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px);\\n  background-size: 71px 71px;\\n  background-color: white;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  padding-bottom: 30px; }\\n\\n.viewer .container {\\n    position: absolute;\\n    height: 100%;\\n    overflow: hidden; }\\n\\n.viewer .container .disabled {\\n      color: #8AA8C0; }\\n\\n.viewer .container .disabled:hover {\\n        color: #8AA8C0 !important; }\\n\\n.viewer .container .sidebar {\\n      font-size: 12px;\\n      background-color: #F1F1F1;\\n      color: #395D73;\\n      white-space: nowrap;\\n      overflow-x: hidden !important; }\\n\\n.viewer .container .sidebar section {\\n        padding-left: 15px;\\n        padding-bottom: 5px;\\n        padding-top: 5px;\\n        border-bottom: 1px solid #8AA8C0; }\\n\\n.viewer .container .sidebar section div {\\n          cursor: pointer; }\\n\\n.viewer .container .sidebar section div:hover {\\n            color: #F0BFA0; }\\n\\n.viewer .content-wrapper {\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .info-container {\\n    padding: 0px 30px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; }\\n\\n.viewer .info-container .info {\\n      display: flex;\\n      flex-direction: column; }\\n\\n.viewer .info-container .info .label {\\n        font-size: 12px;\\n        font-weight: 100;\\n        color: #F07A79; }\\n\\n.viewer .info-container .info .value {\\n        color: #395D73;\\n        font-size: 11px;\\n        font-weight: 600; }\\n\\n.viewer .info-container .info .action {\\n        cursor: pointer;\\n        font-size: 11px;\\n        color: #8AA8C0; }\\n\\n.viewer .graph-container {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .graph-container #graph-edges {\\n      background-color: transparent;\\n      z-index: 1000; }\\n\\n.viewer .graph-container #graph-edges #temporary-edge .hidden {\\n        display: none; }\\n\\n.viewer .graph-container #graph-nodes {\\n      background-color: transparent;\\n      overflow: hidden;\\n      z-index: 1000; }\\n\\n.viewer .info-container {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n\\n.viewer .info-container .label, .viewer .info-container .value {\\n      margin-right: 5px;\\n      font-weight: normal !important; }\\n\\n.viewer .node-container {\\n    position: relative; }\\n\\n.viewer .node-container .node {\\n      position: absolute;\\n      -webkit-transform-origin: top left;\\n              transform-origin: top left;\\n      z-index: 3;\\n      margin: 0px;\\n      color: #395D73; }\\n\\n.viewer .node-container .node.hidden {\\n        display: none; }\\n\\n.viewer .node-container .node .btn-container {\\n        position: absolute;\\n        right: -30px;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        height: 100px; }\\n\\n.viewer .node-container .node .btn-container .btn-group {\\n          position: relative;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n          background: none; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button {\\n            position: relative;\\n            width: 25px;\\n            height: 24px;\\n            cursor: pointer;\\n            font-size: 9px;\\n            text-align: center; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button .material-icons {\\n              font-size: 18px;\\n              line-height: 24px;\\n              color: #8AA8C0; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover {\\n              color: white; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover .mat-icon {\\n                color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        position: relative;\\n        min-height: 30px;\\n        min-width: 70px;\\n        width: auto;\\n        border: 1px solid #395D73;\\n        background-color: rgba(255, 255, 255, 0.7);\\n        cursor: move; }\\n\\n.viewer .node-container .node .node-body.disabled {\\n          opacity: 0.4; }\\n\\n.viewer .node-container .node .node-body.selected {\\n          border-color: green; }\\n\\n.viewer .node-container .node .node-body.library {\\n          border-color: #395D73;\\n          border-style: solid; }\\n\\n.viewer .node-container .node .node-body.error {\\n          background-color: #E94858; }\\n\\n.viewer .node-container .node .node-body.function {\\n          background-color: yellow;\\n          border: 1px dashed green; }\\n\\n.viewer .node-container .node .node-body .node-name {\\n          font-family: sans-serif;\\n          font-size: 12px;\\n          border-bottom: 1px solid #395D73;\\n          text-align: center;\\n          background-color: #F1F1F1; }\\n\\n.viewer .node-container .node .node-body .node-name input {\\n            background-color: inherit;\\n            border: 0px;\\n            color: #395D73;\\n            text-align: center; }\\n\\n.viewer .node-container .node .node-body .node-name.selected {\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input {\\n              color: white;\\n              font-weight: bold; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input:focus {\\n                color: #395D73;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container {\\n          display: flex;\\n          flex-direction: column;\\n          margin-top: 10px;\\n          margin-bottom: 10px; }\\n\\n.viewer .node-container .node .node-body .port-container .divider {\\n            height: 2px;\\n            width: 100%;\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .port-container .port {\\n            display: flex;\\n            flex-direction: row;\\n            margin: 5px 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.hidden {\\n              display: none; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip {\\n              width: 15px;\\n              height: 15px;\\n              border-radius: 50%;\\n              background-color: #F1F1F1;\\n              border: 1px solid #395D73;\\n              cursor: pointer; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.isFunction {\\n                border-style: dashed;\\n                background-color: gray;\\n                border-radius: 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.selected {\\n                border: 2px solid #8AA8C0;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip:hover {\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name {\\n              font-size: 12px;\\n              margin: 0px 5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name.isFunction {\\n                color: black;\\n                font-size: 9.6px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.input {\\n              justify-content: flex-start;\\n              margin-left: -7.5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.output {\\n              justify-content: flex-end;\\n              margin-right: -7.5px; }\\n\\n.viewer .node-container .node:active {\\n        cursor: none; }\\n\"","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n// todo: make internal to flowchart\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent } from 'rxjs';\r\nimport { DataService } from '@services';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n@Component({\r\n    selector: 'flowchart',\r\n    templateUrl: './flowchart.component.html',\r\n    styleUrls: ['./flowchart.component.scss']\r\n})\r\nexport class FlowchartComponent implements OnInit {\r\n\r\n    @Output() switch = new EventEmitter();\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    // general variable for mouse events\r\n    private isDown: number;\r\n    private startCoords = [];\r\n    private canvas: any;\r\n    private element: any;\r\n\r\n    // variable for flowchart zooming\r\n    private mousePos = [0, 0];\r\n    private zoom = 1;\r\n\r\n    // variable for edge\r\n    private edge: IEdge = { source: undefined, target: undefined, selected: false };\r\n    private selectedEdge = [];\r\n    private startType: string;\r\n\r\n    // variable for copied node\r\n    private copied: string;\r\n    private copySub: any;\r\n    private pasteSub: any;\r\n    private keydownSub: any;\r\n\r\n    // listener for events, only activated when the mouse is hovering over the svg component\r\n    private keydownListener = fromEvent(document, 'keydown');\r\n    private copyListener = fromEvent(document, 'copy');\r\n    private pasteListener = fromEvent(document, 'paste');\r\n    private listenerActive = false;\r\n\r\n    // position of the current canvas view relative to the full svg canvas\r\n    private offset;\r\n\r\n    // constants for offset positions of input/output port relative to the node's position\r\n    inputOffset = [50, -8];\r\n    outputOffset = [50, 88];\r\n\r\n    static enableNode(node: INode) {\r\n        for (const edge of node.input.edges) {\r\n            if (!edge.source.parentNode.enabled) { return; }\r\n        }\r\n        node.enabled = true;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartComponent.enableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n\r\n    static disableNode(node: INode) {\r\n        node.enabled = false;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartComponent.disableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas = <HTMLElement>document.getElementById('svg-canvas');\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        this.offset = [bRect.left, bRect.top];\r\n\r\n        // copy: copy node\r\n        this.copySub = this.copyListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n            if (node.type !== 'start' && node.type !== 'end') {\r\n                console.log('copied node:', node);\r\n                const cp = circularJSON.parse(circularJSON.stringify(node));\r\n                this.copied = circularJSON.stringify(cp);\r\n            }\r\n        });\r\n\r\n        // paste: paste copied node\r\n        this.pasteSub = this.pasteListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            if (this.copied) {\r\n                event.preventDefault();\r\n                const newNode = <INode>circularJSON.parse(this.copied);\r\n                const pt = this.canvas.createSVGPoint();\r\n                pt.x = 20;\r\n                pt.y = 100;\r\n\r\n                let svgP: any;\r\n                const isFirefox = typeof InstallTrigger !== 'undefined';\r\n                if (isFirefox) {\r\n                        const ctm = this.canvas.getScreenCTM();\r\n                        // const bRect = this.canvas.getBoundingClientRect();\r\n                        ctm.a = ctm.a * this.zoom;\r\n                        ctm.d = ctm.d * this.zoom;\r\n                        ctm.e = bRect.x;\r\n                        ctm.f = bRect.y;\r\n                        svgP = pt.matrixTransform(ctm.inverse());\r\n                } else {\r\n                        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                }\r\n\r\n                NodeUtils.updateNode(newNode, svgP);\r\n                this.dataService.flowchart.nodes.push(newNode);\r\n                console.log('pasting node:', newNode);\r\n            }\r\n        });\r\n\r\n        // delete: delete selected edge(s)\r\n        this.keydownSub = this.keydownListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            if ((<KeyboardEvent> val).key === 'Delete') {\r\n                this.deleteSelectedEdges();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /*\r\n    handle event received from node component\r\n    */\r\n    nodeAction(event, node_index): void {\r\n\r\n        switch (event.action) {\r\n\r\n            // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n            case ACTIONS.PROCEDURE:\r\n                this.switch.emit('editor');\r\n                this.deactivateKeyEvent();\r\n                break;\r\n\r\n            // select a node\r\n            case ACTIONS.SELECT:\r\n                this.dataService.flowchart.meta.selected_nodes = [ node_index ];\r\n                break;\r\n\r\n            // initiate dragging node\r\n            case ACTIONS.DRAGNODE:\r\n                this.element = this.dataService.flowchart.nodes[node_index];\r\n                const pt = this.canvas.createSVGPoint();\r\n\r\n                // get current mouse position in the page\r\n                pt.x = event.data.pageX;\r\n                pt.y = event.data.pageY;\r\n\r\n                // convert mouse position to svg position (special procedure for firefox)\r\n                let svgP: any;\r\n                const isFirefox = typeof InstallTrigger !== 'undefined';\r\n                if (isFirefox) {\r\n                    const ctm = this.canvas.getScreenCTM();\r\n                    const bRect = this.canvas.getBoundingClientRect();\r\n                    ctm.a = ctm.a * this.zoom;\r\n                    ctm.d = ctm.d * this.zoom;\r\n                    ctm.e = bRect.x;\r\n                    ctm.f = bRect.y;\r\n                    svgP = pt.matrixTransform(ctm.inverse());\r\n                } else {\r\n                    svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                }\r\n\r\n                // save the svg position as startCoords\r\n                this.startCoords = [\r\n                    svgP.x,\r\n                    svgP.y\r\n                ];\r\n                if (this.startCoords[0] === NaN) {\r\n                    this.startCoords = [0, 0];\r\n                }\r\n\r\n                // mark the dragging mode as dragNode\r\n                this.isDown = 2;\r\n                break;\r\n\r\n            // initiate dragging input/output port\r\n            case ACTIONS.DRAGPORT:\r\n                // create a new edge\r\n                this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n                // assign the port to the edge's input/output accordingly\r\n                if (event.type === 'input') {\r\n                    this.edge.target = event.data;\r\n                } else {\r\n                    this.edge.source = event.data;\r\n                }\r\n                this.startType = event.type;\r\n\r\n                // modify the temporary-edge's coordinate\r\n                this.element = <HTMLElement>document.getElementById('temporary-wire');\r\n                this.element.setAttribute('x1', event.position[0]);\r\n                this.element.setAttribute('y1', event.position[1]);\r\n                this.element.setAttribute('x2', event.position[0]);\r\n                this.element.setAttribute('y2', event.position[1]);\r\n                this.isDown = 3;\r\n                break;\r\n        }\r\n    }\r\n\r\n    // check if the node at node_index is selected\r\n    isSelected(node_index: number): boolean {\r\n        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;\r\n    }\r\n\r\n    // add a new node\r\n    addNode(): void {\r\n\r\n        // create a new node\r\n        const newNode = NodeUtils.getNewNode();\r\n\r\n        // the new node's position would be (20,100) relative to the current view\r\n        const pt = this.canvas.createSVGPoint();\r\n\r\n        pt.x = 20;\r\n        pt.y = 100;\r\n\r\n        // convert the position to svg position\r\n        let svgP: any;\r\n        const isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox) {\r\n            const ctm = this.canvas.getScreenCTM();\r\n            const bRect = this.canvas.getBoundingClientRect();\r\n            ctm.a = ctm.a * this.zoom;\r\n            ctm.d = ctm.d * this.zoom;\r\n            ctm.e = bRect.x;\r\n            ctm.f = bRect.y;\r\n            svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n            svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n        // assign the position to the new node and add it to the flowchart\r\n        newNode.position.x = svgP.x;\r\n        newNode.position.y = svgP.y;\r\n        this.dataService.flowchart.nodes.push(newNode);\r\n    }\r\n\r\n    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n    activateKeyEvent(): void {\r\n        this.listenerActive = true;\r\n    }\r\n\r\n    // deactivate the event listeners when the mouse exit the svg component\r\n    deactivateKeyEvent(): void {\r\n        this.listenerActive = false;\r\n    }\r\n\r\n    // delete selected node\r\n    deleteSelectedNodes() {\r\n\r\n        // for each of the selected node\r\n        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {\r\n            const node_index = this.dataService.flowchart.meta.selected_nodes.pop();\r\n            const node = this.dataService.flowchart.nodes[node_index];\r\n\r\n            // continue if the node is a start/end node\r\n            if (node.type === 'start' || node.type === 'end') { continue; }\r\n            let edge_index = 0;\r\n\r\n            // delete all the edges connected to the node\r\n            while (edge_index < this.dataService.flowchart.edges.length) {\r\n                const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {\r\n                    this.deleteEdge(edge_index, node.id);\r\n                    continue;\r\n                }\r\n                edge_index += 1;\r\n            }\r\n\r\n            // remove the node from the flowchart\r\n            this.dataService.flowchart.nodes.splice(Number(node_index), 1);\r\n        }\r\n    }\r\n\r\n    // delete an edge with a known index\r\n    deleteEdge(edge_index, deletedNode) {\r\n        const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n        // remove the edge from the target node's list of edges\r\n        for (const i in this.dataService.flowchart.edges) {\r\n            if (tbrEdge.target.edges[i] === tbrEdge) {\r\n                tbrEdge.target.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // remove the edge from the source node's list of edges\r\n        for (const i in tbrEdge.source.edges) {\r\n            if (tbrEdge.source.edges[i] === tbrEdge) {\r\n                tbrEdge.source.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (tbrEdge.target.parentNode.input.edges.length === 0 && deletedNode !== tbrEdge.target.parentNode.id) {\r\n            FlowchartComponent.disableNode(tbrEdge.target.parentNode);\r\n        } else {\r\n            FlowchartComponent.enableNode(tbrEdge.target.parentNode);\r\n        }\r\n\r\n        // remove the edge from the general list of edges\r\n        this.dataService.flowchart.edges.splice(edge_index, 1);\r\n        this.dataService.flowchart.ordered = false;\r\n    }\r\n\r\n\r\n    // delete all the selected edges\r\n    deleteSelectedEdges() {\r\n        this.selectedEdge.sort().reverse();\r\n        for (const edge_index of this.selectedEdge) {\r\n            this.deleteEdge(edge_index, undefined);\r\n        }\r\n        this.selectedEdge = [];\r\n    }\r\n\r\n    // select an edge\r\n    selectEdge(event, edge_index) {\r\n\r\n        // if ctrl is pressed, add the edge into the list of selected edges\r\n        if (event === 'ctrl') {\r\n            this.selectedEdge.push(edge_index);\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n            if (this.selectedEdge.length > 0) {\r\n                for (const e of this.selectedEdge) { this.dataService.flowchart.edges[e].selected = false; }\r\n            }\r\n            this.selectedEdge = [edge_index];\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else {\r\n            this.dataService.flowchart.edges[edge_index].selected = false;\r\n            for (let i = 0; i < this.selectedEdge.length; i ++) { if (this.selectedEdge[i] === edge_index) {\r\n                this.selectedEdge.splice(i, 1);\r\n                break;\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    // focus view onto the flowchart\r\n    focusFlowchart(): void {\r\n        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n        const frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,\r\n                                this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (node.position.x < frame[0]) {\r\n                frame[0] = node.position.x;\r\n            } else if (node.position.x > frame[2]) {\r\n                frame[2] = node.position.x;\r\n            }\r\n            if (node.position.y < frame[1]) {\r\n                frame[1] = node.position.y;\r\n            } else if (node.position.y > frame[3]) {\r\n                frame[3] = node.position.y;\r\n            }\r\n        }\r\n        frame[2] += 100;\r\n        frame[3] += 80;\r\n\r\n        // calculate the zoom to fit the whole flowchart\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const ctm = <SVGMatrix>this.canvas.getScreenCTM();\r\n        let zoom = bRect.width / (ctm.a * (frame[2] - frame[0]));\r\n        const heightZoom = bRect.height / (ctm.d * (frame[3] - frame[1]));\r\n        if (zoom > heightZoom) { zoom = heightZoom; }\r\n        if (zoom > 2.5) { zoom = 2.5; }\r\n\r\n        // calculate the difference between height and width, if height is bigger than width,\r\n        // centering the flowchart based on the difference\r\n        const height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;\r\n        if (height_width_diff > 0) {\r\n            frame[0] -= height_width_diff;\r\n        }\r\n\r\n        // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n        if (frame[0] < 0) { frame[0] = 0; }\r\n        if (frame[1] < 0) { frame[1] = 0; }\r\n\r\n        // transform\r\n        this.canvas.style.transition = 'transform 0ms ease-in';\r\n        this.canvas.style.transformOrigin = 'top left';\r\n        this.canvas.style.transform =\r\n        `matrix(${zoom},0,0,${zoom},${-frame[0] * ctm.a * zoom / this.zoom},${-frame[1] * ctm.a * zoom / this.zoom})`;\r\n        this.zoom = zoom;\r\n    }\r\n\r\n\r\n    // scale view on mouse wheel\r\n    scale(event: WheelEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // calculate new zoom value\r\n        const scaleFactor = 0.1;\r\n        let value: number = this.zoom    - (Math.sign(event.deltaY)) * scaleFactor;\r\n\r\n        // limit the zoom value to be between 1 and 2.5\r\n        if (value >= 1 && value <= 2.5) {\r\n            value = Number( (value).toPrecision(5) );\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        // if new zoom is bigger than current zoom, update the mouse position to current position\r\n        if (value > this.zoom) {\r\n            this.mousePos = [event.clientX - this.offset[0], event.clientY - this.offset[1]];\r\n        }\r\n\r\n        // find transformation matrix\r\n        const m = this.canvas.createSVGMatrix()\r\n        .translate(this.mousePos[0], this.mousePos[1])\r\n        .scale(value)\r\n        .translate(-this.mousePos[0], -this.mousePos[1]);\r\n        const transf = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n\r\n        // transform\r\n        this.canvas.style.transition = 'transform 50ms ease-in';\r\n        this.canvas.style.transformOrigin = `top left`;\r\n        this.canvas.style.transform = transf;\r\n        this.zoom = value;\r\n    }\r\n\r\n\r\n    // initiate dragging the view window\r\n    panStart(event: MouseEvent) {\r\n        event.preventDefault();\r\n\r\n        this.canvas.style.transition = 'transform 0ms linear';\r\n        this.canvas.style.transformOrigin = `top left`;\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n\r\n        // set start coords to current view window position\r\n        this.startCoords = [\r\n            event.clientX - (bRect.left - this.offset[0]),\r\n            event.clientY - (bRect.top - this.offset[1])\r\n        ];\r\n        // set drag mode to drag view\r\n        this.isDown = 1;\r\n    }\r\n\r\n    // handle mouse move for dragging view/node/port\r\n    handleMouseMove(event: MouseEvent) {\r\n        // return if no dragging initiated\r\n        if (!this.isDown) {\r\n            return;\r\n\r\n        // if drag view\r\n        } else if (this.isDown === 1) {\r\n            event.preventDefault();\r\n            const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n            let x = Number(event.clientX - this.startCoords[0]);\r\n            let y = Number(event.clientY - this.startCoords[1]);\r\n            const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n            if (x > 0 || bRect.width < boundingDiv.width) {\r\n                x = 0;\r\n            } else if (boundingDiv.width - x > bRect.width) {\r\n                x = boundingDiv.width - bRect.width;\r\n            }\r\n            if (y > 0 || bRect.height < boundingDiv.height) {\r\n                y = 0;\r\n            } else if (boundingDiv.height - y > bRect.height) {\r\n                y = boundingDiv.height - bRect.height;\r\n            }\r\n            this.canvas.style.transform = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';\r\n\r\n        // if drag node\r\n        } else if (this.isDown === 2) {\r\n\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            let svgP: any;\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                svgP = pt.matrixTransform(ctm.inverse());\r\n            } else {\r\n                svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n            }\r\n\r\n            const xDiff = this.startCoords[0] - svgP.x;\r\n            const yDiff = this.startCoords[1] - svgP.y;\r\n            this.startCoords[0] = svgP.x;\r\n            this.startCoords[1] = svgP.y;\r\n\r\n            this.element.position.x -= xDiff;\r\n            this.element.position.y -= yDiff;\r\n\r\n    // if drag port\r\n    } else if (this.isDown === 3) {\r\n            event.preventDefault();\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                const svgP = pt.matrixTransform(ctm.inverse());\r\n                this.element.setAttribute('x2', svgP.x);\r\n                this.element.setAttribute('y2', svgP.y);\r\n\r\n            } else {\r\n                const svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                this.element.setAttribute('x2', svgP.x);\r\n                this.element.setAttribute('y2', svgP.y);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleMouseUp(event) {\r\n        this.element = undefined;\r\n        // drop port --> create new edge if drop position is within 15px of an input/output port\r\n        if (this.isDown === 3) {\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n            let svgP: any;\r\n\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                svgP = pt.matrixTransform(ctm.inverse());\r\n            } else {\r\n                svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n            }\r\n\r\n            // reset temporary edge position to <(0,0),(0,0)>\r\n            const tempLine = <HTMLElement>document.getElementById('temporary-wire');\r\n            tempLine.setAttribute('x1', '0');\r\n            tempLine.setAttribute('y1', '0');\r\n            tempLine.setAttribute('x2', '0');\r\n            tempLine.setAttribute('y2', '0');\r\n\r\n            // go through all of the nodes' input/output ports\r\n            for (const n of this.dataService.flowchart.nodes) {\r\n                let pPos;\r\n\r\n                // find the node's corresponding port and its position\r\n                if (this.startType === 'input') {\r\n                    if (this.edge.target.parentNode === n || n.type === 'end') { continue; }\r\n                    this.edge.source = n.output;\r\n\r\n                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];\r\n                } else {\r\n                    if (this.edge.source.parentNode === n || n.type === 'start') { continue; }\r\n                    this.edge.target = n.input;\r\n\r\n                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];\r\n                }\r\n\r\n                // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n                if (Math.abs(pPos[0] - svgP.x) > 25 || Math.abs(pPos[1] - svgP.y) > 25 ) { continue; }\r\n\r\n                // if there is already an existing edge with the same source and target as the new edge, return\r\n                for (const edge of this.dataService.flowchart.edges) {\r\n                    if (edge.target === this.edge.target && edge.source === this.edge.source) {\r\n                        this.isDown = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                this.edge.target.edges.push(this.edge);\r\n                this.edge.source.edges.push(this.edge);\r\n                this.dataService.flowchart.edges.push(this.edge);\r\n                this.dataService.flowchart.ordered = false;\r\n                if (this.edge.source.parentNode.enabled) {\r\n                    FlowchartComponent.enableNode(this.edge.target.parentNode);\r\n                } else {\r\n                    FlowchartComponent.disableNode(this.edge.target.parentNode);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.isDown = 0;\r\n    }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\nimport { FlowchartComponent } from './flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FlowchartComponent,\r\n    NodeComponent,\r\n    EdgeComponent,\r\n  ],\r\n  exports: [ FlowchartComponent ],\r\n  imports: [ CommonModule,\r\n             FormsModule,\r\n             MatIconModule,\r\n             MatButtonModule ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class SVGFlowchartModule {\r\n    constructor () { }\r\n}\r\n","export * from './flowchart.module';\r\n","export enum ACTIONS {\r\n    SELECT,\r\n    DELETE,\r\n    COPY,\r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}\r\n","module.exports = \"<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [class.node--disabled]='!node.enabled'\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    (mousedown)='focusText($event)'>\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [class.node--disabled]='!node.enabled'\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n<!-- circles as draggable input/output ports of the node -->\\r\\n<svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/>\\r\\n\\r\\n<svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/>\\r\\n\\r\\n\"","module.exports = \"/*\\r\\n$color-main: #2D4885;\\r\\n$color-accent: #50ABB9;\\r\\n$color-muted: #88D4DD;\\r\\n$color-text-accent: #DC772F;\\r\\n*/\\n.node {\\n  fill: #fafafa;\\n  stroke-width: 2px;\\n  stroke: #505050;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n.node.node--disabled {\\n    stroke-opacity: 0.5;\\n    fill-opacity: 0.5; }\\n.node.node--selected {\\n    stroke: #000096; }\\n.node.node--error {\\n    stroke: red; }\\n.textdiv {\\n  text-align: center;\\n  width: 94px; }\\n.foreignObject {\\n  width: 100;\\n  height: 80; }\\ntextarea {\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 14px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #505050; }\\ntextarea.selected {\\n    color: #000096; }\\ntextarea.disabled {\\n    opacity: 0.5; }\\n.textarea_startend {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #505050;\\n  height: 20px;\\n  pointer-events: none; }\\n.inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n.outputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0, 0];\r\n    isDown = false;\r\n\r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position) {\r\n        this.node.position = position;\r\n    }\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event) {\r\n        this.action.emit({ action: ACTIONS.SELECT });\r\n    }\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean {\r\n        return !(this.node.type === 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean {\r\n        return !(this.node.type === 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event: MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event: MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        let data: any;\r\n        if (portType === 'input') {\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    focus on the description of the node when mouse down inside the node\r\n    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged\r\n    */\r\n    focusText(event: MouseEvent) {\r\n        document.getElementById(this.node.id).focus();\r\n    }\r\n\r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event) {\r\n        this.action.emit({action: ACTIONS.PROCEDURE});\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addInput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    constructor() {}\r\n\r\n    addNode(): void {  this.flowchart.nodes.push(NodeUtils.getNewNode()); }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addOutput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\n\r\nimport * as Modules from '@modules';\r\nimport { _parameterTypes } from '@modules';\r\n\r\nexport const mergeInputsFunc = `\r\nfunction mergeInputs(models){\r\n    let result = __modules__.${_parameterTypes.new}();\r\n    for (let model of models){\r\n        __modules__.${_parameterTypes.merge}(result, model);\r\n    }\r\n    return result;\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'execute',\r\n  /*\r\n  template: `<button class=\"btn--execute\"\r\n                    (click)=\"execute()\">\r\n                Execute\r\n             </button>`,\r\n    */\r\n   template: `<button class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n    </button>\r\n    `,\r\n  styles: [\r\n            `.btn--execute{\r\n                display: inline-block;\r\n                vertical-align: middle;\r\n                font-size: 14px;\r\n                line-height: 18px;\r\n                border: 3px solid #E0C229;\r\n                border-radius: 4px;\r\n                padding: 1px 10px;\r\n                background-color: #E0C229;\r\n                color: #494D59;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n              }\r\n              .btn{\r\n                vertical-align: middle;\r\n                background-color: transparent;\r\n                border: none;\r\n                color: rgb(80,80,80);\r\n              }\r\n              .btn:hover{\r\n                color: blue;\r\n              }`\r\n          ]\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    private globalVars: string;\r\n\r\n    async execute(): Promise<any> {\r\n        const p = new Promise(async (resolve) => {\r\n            this.globalVars = '';\r\n\r\n            // @ts-ignore\r\n            console.logs = [];\r\n\r\n            // reset input of all nodes except start\r\n            for (const node of this.flowchart.nodes) {\r\n                if (node.type !== 'start') {\r\n                    if (node.input.edges) {\r\n                        node.input.value = undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // order the flowchart\r\n            if (!this.flowchart.ordered) {\r\n                FlowchartUtils.orderNodes(this.flowchart);\r\n            }\r\n\r\n            // get the string of all imported functions\r\n            const funcStrings = {};\r\n            for (const func of this.flowchart.functions) {\r\n                funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n            }\r\n\r\n            // execute each node\r\n            for (const node of this.flowchart.nodes) {\r\n                if (!node.enabled) {\r\n                    node.output.value = undefined;\r\n                    continue;\r\n                }\r\n                await this.executeNode(node, funcStrings);\r\n            }\r\n            resolve('');\r\n        });\r\n        return p;\r\n\r\n\r\n        /*\r\n        this.globalVars = '';\r\n\r\n        // @ts-ignore\r\n        //console.logs = []\r\n\r\n        // reset input of all nodes except start\r\n        for (let node of this.flowchart.nodes){\r\n            if (node.type != 'start'){\r\n                if (node.input.edges){\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        // order the flowchart\r\n        if (!this.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        let funcStrings = {};\r\n        for (let func of this.flowchart.functions){\r\n            funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (let node of this.flowchart.nodes){\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            await this.executeNode(node, funcStrings);\r\n        }\r\n        */\r\n    }\r\n\r\n    async executeNode(node: INode, funcStrings) {\r\n        const params = {'currentProcedure': ['']};\r\n        try {\r\n            // get the code for the node\r\n            let fnString = await CodeUtils.getNodeCode(node, true);\r\n\r\n            // add the constants from the start node\r\n            fnString = this.globalVars + fnString;\r\n            params['model'] = node.input.value;\r\n\r\n            // add the imported functions code\r\n            let hasFunctions = false;\r\n            for (const funcName in funcStrings) {\r\n                if (funcStrings.hasOwnProperty(funcName)) {\r\n                    fnString = funcStrings[funcName] + fnString;\r\n                    hasFunctions = true;\r\n                }\r\n            }\r\n            if (hasFunctions) {\r\n                fnString = mergeInputsFunc + '\\n\\n' + fnString;\r\n            }\r\n\r\n            console.log(`______________________________________________________________\r\n            \\n/*    ${node.name.toUpperCase()}    */\r\n            \\n` + fnString + `--------------------------\\n`);\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n            const result = fn(Modules, params);\r\n            node.output.value = result;\r\n            if (node.type === 'start') {\r\n                for (const constant in params['constants']) {\r\n                    if (params['constants'].hasOwnProperty(constant)) {\r\n                        const constString = JSON.stringify(params['constants'][constant]);\r\n                        this.globalVars += `const ${constant} = ${constString};\\n`;\r\n                    }\r\n                }\r\n                this.globalVars += '\\n';\r\n            }\r\n        } catch (ex) {\r\n            node.hasError = true;\r\n            // console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            const prodWithError: string = params['currentProcedure'][0];\r\n            const markError = function(prod: IProcedure, id: string) {\r\n                if (prod['ID'] && id && prod['ID'] === id) {\r\n                    prod.hasError = true;\r\n                }\r\n                if (prod.hasOwnProperty('children')) {\r\n                    prod.children.map(function(p) {\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            };\r\n            if (prodWithError !== '') {\r\n                node.procedure.map(function(prod: IProcedure) {\r\n                    if (prod['ID'] === prodWithError) {\r\n                        prod.hasError = true;\r\n                    }\r\n                    if (prod.hasOwnProperty('children')) {\r\n                        prod.children.map(function(p) {\r\n                            markError(p, prodWithError);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            let error: Error;\r\n            if (ex.toString().indexOf('Unexpected identifier') > -1) {\r\n                error = new Error('Unexpected Identifier error. Did you declare everything?' +\r\n                    'Check that your strings are enclosed in quotes (\")');\r\n            } else if (ex.toString().indexOf('Unexpected token') > -1) {\r\n                error = new Error('Unexpected token error. Check for stray spaces or reserved keywords?');\r\n            } else {\r\n                 error = new Error(ex);\r\n            }\r\n            throw error;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class DownloadUtils {\r\n\r\n    static downloadFile(fileName: string, fileContent: Blob) {\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}\r\n","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" name=\"name\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent {\r\n\r\n    @Output() loaded = new EventEmitter();\r\n\r\n\r\n    sendloadfile() {\r\n        const selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        const stream = Observable.create(observer => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                // if (typeof reader.result === 'string') {}\r\n                const f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: f.name,\r\n                    author: f.author,\r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version\r\n                };\r\n                observer.next(file);\r\n                observer.complete();\r\n                };\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.loaded.emit(circularJSON.stringify(loadeddata));\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = '';\r\n    }\r\n\r\n\r\n    //   @ViewChild('fileInput') fileInput: ElementRef;\r\n    //   openPicker(): void{\r\n    //     let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\r\n    //     el.click();\r\n    //   }\r\n\r\n    //   loadFile(url ?:string): void{\r\n    //     let file = this.fileInput.nativeElement.files[0];\r\n    //     if (file) {\r\n    //         let reader = new FileReader();\r\n    //         reader.readAsText(file, \"UTF-8\");\r\n    //         let fs = this.flowchartService;\r\n    //         reader.onload = function (evt) {\r\n    //           let fileString: string = evt.target[\"result\"];\r\n    //           fs.loadFile(fileString);\r\n    //         }\r\n    //         reader.onerror = function (evt) {\r\n    //             console.log(\"Error reading file\");\r\n    //         }\r\n    //     }\r\n    // this.flowchartService.loadFile(url);\r\n}\r\n","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent {\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n    sendNewFile() {\r\n        const confirmed = confirm('Resetting would delete the current flowchart. Would you like to continue?');\r\n        if (!confirmed) { return; }\r\n        const file: IMobius = {\r\n            name: 'default_file.mob',\r\n            author: 'new_user',\r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 1\r\n        };\r\n        this.create.emit(circularJSON.stringify(file));\r\n        this.cdr.detectChanges();\r\n    }\r\n}\r\n","import { Component, Input} from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { DownloadUtils } from './download.utils';\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent {\r\n\r\n    @Input() file: IMobius;\r\n\r\n\r\n    // todo: save file\r\n    download() {\r\n        if (!this.file.flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(this.file.flowchart);\r\n        }\r\n        const savedfile = circularJSON.parse(circularJSON.stringify(this.file));\r\n        for (const node of savedfile.flowchart.nodes) {\r\n            if (node.input.hasOwnProperty('value')) {\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')) {\r\n                node.output.value = undefined;\r\n            }\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function:\r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        for (const prod of savedfile.flowchart.nodes[0].procedure) {\r\n            prod.args[prod.argCount - 1].value = undefined;\r\n        }\r\n\r\n\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (const edge of savedfile.flowchart.edges) {\r\n            edge.selected = false;\r\n        }\r\n\r\n        savedfile.name = savedfile.flowchart.name;\r\n\r\n        const fileString = circularJSON.stringify(savedfile);\r\n        const fname = `${savedfile.flowchart.name.replace(/\\ /g, '_')}.mob`;\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  template:  `<div class='panel__header'>\r\n                    <h3>{{node?.name}} // {{title}}</h3>\r\n              </div>`,\r\n  styles: [\r\n            `.panel__header{\r\n                font-weight: 600;\r\n                border: 2px solid #222;\r\n                border-radius: 4px;\r\n                padding: 5px;\r\n             }\r\n             h3{\r\n                margin: 0px;\r\n             }`\r\n          ]\r\n})\r\nexport class HeaderComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() title: string;\r\n\r\n    constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;'\r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\"\r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent {\r\n\r\n    _links = [\r\n      { path: '/about',\r\n        name: 'about'\r\n      },\r\n      { path: '/gallery',\r\n        name: 'gallery'\r\n      },\r\n      { path: '/publish',\r\n        name: 'publish'\r\n      },\r\n      { path: '/editor',\r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router) { }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n    constructor() {  }\r\n\r\n}\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n\\r\\n    <div class='parameter__name'>{{ port.name }}</div>\\r\\n\\r\\n    <!-- Slider, SimpleInput ... etc -->\\r\\n    <div class='parameter__mode' [ngSwitch]=\\\"port.meta.mode\\\">\\r\\n        \\r\\n        <!-- Simple Input Template -->\\r\\n        <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <!-- <input  placeholder='Enter Value: Defaults to {{port.default}}'> -->\\r\\n            <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n            <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </div>\\r\\n    \\r\\n        <!-- TODO1: SwitchCase for remaining PortTypes -->\\r\\n        <!-- TODO2: Connect values to port.value -->\\r\\n    \\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IPortInput, InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'input-port-viewer',\r\n  templateUrl: './input-port-viewer.component.html',\r\n  styleUrls: ['./input-port-viewer.component.scss']\r\n})\r\nexport class InputPortViewerComponent {\r\n\r\n    @Input() port: IPortInput;\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    onFileChange(event) {\r\n      this.port.value = event.target.files[0];\r\n    }\r\n\r\n}\r\n","module.exports = \"<h2>{{flowchart.name}}</h2>\\r\\n<p>{{flowchart.description}}</p>\\r\\n<hr>\\r\\n\\r\\n<!-- <p>Edit the parameters of your flowchart here. These parameters are visible in the viewer when you share your flowchart.</p> -->\\r\\n<procedure-input-viewer *ngFor=\\\"let prod of startNode.procedure\\\" [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent {\r\n  @Input() flowchart: IFlowchart;\r\n  @Input() startNode: INode;\r\n  @Input() endNode: INode;\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' disabled>\\r\\n        <!--\\r\\n        <select name={{prod.id}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\">\\r\\n            <option \\r\\n                *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n                [value]=\\\"PortTypes[ptype]\\\" \\r\\n                [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n        </select>\\r\\n        -->\\r\\n        <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n            <!--\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n                <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n            </div>\\r\\n        \\r\\n            -->\\r\\n\\r\\n            <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n            placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n            size={{prod.args[prod.argCount-1].value?.length||prod.args[prod.argCount-1].default.length}}>\\r\\n            \\r\\n            <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <mat-slider\\r\\n                    [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                    thumbLabel\\r\\n                    tickInterval=\\\"auto\\\"\\r\\n                    min={{prod.args[prod.argCount-1].min||0}}\\r\\n                    max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' size={{prod.args[prod.argCount-1].value?.length||1}} disabled>\\r\\n\\r\\n\\r\\n                <!--\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' name='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                -->\\r\\n            </ng-container>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='Enter URL: Defaults to {{prod.args[prod.argCount-1].default}}'>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  margin: 5px 0px 0px 5px;\\n  width: 100%; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  bottom: 0px;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid #efefef;\\n  border-left: 1px solid #efefef;\\n  width: 100%; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\ninput {\\n  color: #505050;\\n  background-color: gainsboro;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.parameter__name {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 100px; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class ProcedureInputViewerComponent {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].value = event.target.files[0];\r\n    }\r\n\r\n}\r\n","export { ModuleAware } from './module-aware.decorator';\r\nexport { ModuleDocAware } from './module-aware.decorator';\r\nexport { ProcedureTypesAware } from './prodtypes-aware.decorator';\r\nexport { ViewerTypesAware } from './viewertypes-aware.decorator';\r\nexport { PortTypesAware } from './porttypes-aware.decorator';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\n\r\nimport * as Modules from '@modules';\r\n\r\nconst doc = require('@assets/typedoc-json/doc.json');\r\n\r\nlet docs;\r\nconst module_list = [];\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    const fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n\r\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\\s,]+)/g);\r\n    if (result === null || result[0] === '') {\r\n         result = [];\r\n    }\r\n    const final_result = result.map(function(r) {\r\n        r = r.trim();\r\n        const r_value = r.split('=');\r\n\r\n        if (r_value.length === 1) {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0};\r\n        } else {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 };\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\nexport function ModuleAware(constructor: Function) {\r\n    if (module_list.length === 0) {\r\n        for ( const m_name in Modules ) {\r\n            if (m_name[0] === '_') { continue; }\r\n\r\n            const modObj = <IModule>{};\r\n            modObj.module = m_name;\r\n            modObj.functions = [];\r\n\r\n            for ( const fn_name of Object.keys(Modules[m_name])) {\r\n\r\n                const func = Modules[m_name][fn_name];\r\n\r\n                const fnObj = <IFunction>{};\r\n                fnObj.module = m_name;\r\n                fnObj.name = fn_name;\r\n                fnObj.argCount = func.length;\r\n                const args = extract_params(func);\r\n                fnObj.args = args[0];\r\n                fnObj.hasReturn = args[1];\r\n                modObj.functions.push(fnObj);\r\n            }\r\n            module_list.push(modObj);\r\n        }\r\n    }\r\n    constructor.prototype.Modules = module_list;\r\n}\r\n\r\nexport function ModuleDocAware(constructor: Function) {\r\n    if (!docs) {\r\n        docs = {};\r\n        for (const mod of doc.children) {\r\n            if (mod.name.substr(1, 1) === '_' || mod.name === '\"index\"') {\r\n                continue;\r\n            }\r\n            const modName = mod.name.substr(1, mod.name.length - 2);\r\n            const moduleDoc = {};\r\n            for (const func of mod.children) {\r\n                const fn = {};\r\n                fn['name'] = func.name;\r\n                fn['module'] = modName;\r\n                if (!func['signatures']) { continue; }\r\n                if (func['signatures'][0].comment) {\r\n                    const cmmt = func['signatures'][0].comment;\r\n                    fn['description'] = cmmt.shortText;\r\n                    if (cmmt.tags) {\r\n                        for (const fnTag of cmmt.tags) {\r\n                            if (fnTag.tag === 'summary') { fn['summary'] = fnTag.text; }\r\n                        }\r\n                    }\r\n                    fn['returns'] = cmmt.returns;\r\n                    if (fn['returns']) { fn['returns'] = fn['returns'].trim(); }\r\n                }\r\n                fn['parameters'] = [];\r\n                if (func['signatures'][0].parameters) {\r\n                    for (const param of func['signatures'][0].parameters) {\r\n                        let namecheck = true;\r\n                        for (const systemVarName in Modules._parameterTypes) {\r\n                            if (param.name === Modules._parameterTypes[systemVarName]) {\r\n                                namecheck = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!namecheck) { continue; }\r\n                        const pr = {};\r\n\r\n                        pr['name'] = param.name;\r\n                        if (param.comment) {\r\n                            pr['description'] = param.comment.shortText || param.comment.text;\r\n                        }\r\n                        if (param.type.type === 'array') {\r\n                            pr['type'] = `${param.type.elementType.name}[]`;\r\n                        } else if (param.type.type === 'intrinsic') {\r\n                            pr['type'] = param.type.name;\r\n                        } else if (param.type.type === 'reference') {\r\n                            pr['type'] = param.type.name;\r\n                        } else {\r\n                            /**\r\n                             * TODO: Update param type here\r\n                             */\r\n                            console.log('param type requires updating:', param.type);\r\n                            pr['type'] = param.type.type;\r\n                        }\r\n                        fn['parameters'].push(pr);\r\n                    }\r\n                }\r\n                moduleDoc[func.name] = fn;\r\n            }\r\n            docs[modName] = moduleDoc;\r\n        }\r\n    }\r\n    constructor.prototype.ModuleDoc = docs;\r\n}\r\n","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","export * from './mobfile-reader.directive';\r\n","/*\r\n *  Adding this to an HTML5 input element\r\n *  allows for the file being read to be converted into a Mobius\r\n *  Flowchart\r\n *\r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n  selector: '[mbFileReader]'\r\n})\r\nexport class MbFileReaderDirective {\r\n\r\n  @Input() data: any = {};\r\n  @Output() load = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('change')\r\n  onFileChange() {\r\n    const f = this.el.nativeElement.files[0];\r\n    if (f) {\r\n        const reader = new FileReader();\r\n        reader.readAsText(f, 'UTF-8');\r\n        const ins = this;\r\n        reader.onload = function (evt) {\r\n            const fileString: string = evt.target['result'];\r\n            ins.load_flowchart_from_string(fileString);\r\n        };\r\n        reader.onerror = function (evt) {\r\n            console.log('Error reading file');\r\n        };\r\n    }\r\n  }\r\n\r\n\r\n  //\r\n  // Input: string\r\n  // Output: MobiusFile DS\r\n  //\r\n  //\r\n  private load_flowchart_from_string(fileString: string): void {\r\n    const _this = this;\r\n    // let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n    // let flowchart: any; // IFlowchart;\r\n\r\n    try {\r\n      const data = CircularJSON.parse(fileString);\r\n      this.load.emit(data);\r\n      // this.data.flowchart = data.flowchart;\r\n      // this.data.modules = data.modules;\r\n      // this.data.language = data.language;\r\n\r\n      // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n      // TODO: this.update_modules();\r\n\r\n      // flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n      // TODO: select a node\r\n    } catch (err) {\r\n      console.error('Mob-file-reader error', err);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n    selector: '[autogrow]'\r\n})\r\nexport class AutogrowDirective {\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    @HostListener('keyup')\r\n    onKeyUp() {\r\n        this.el.nativeElement.style.height = '5px';\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight) + 'px';\r\n    }\r\n\r\n    @HostListener('keydown')\r\n    onKeyDown() {\r\n        this.el.nativeElement.style.height = '5px';\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight) + 'px';\r\n    }\r\n}\r\n","export * from './autogrow.directive';\r\n","import { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput, InputType } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Input } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { IEdge } from '@models/edge';\r\nimport { _parameterTypes, Model } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static async getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): Promise<string> {\r\n        if (prod.enabled === false) { return ''; }\r\n\r\n        prod.hasError = false;\r\n\r\n        const codeStr: string[] = [];\r\n        const args = prod.args;\r\n        const prefix = args.hasOwnProperty('0') && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        codeStr.push('');\r\n        if (addProdArr && prod.type !== ProcedureTypes.Else && prod.type !== ProcedureTypes.Elseif) {\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (args[0].value.indexOf('__params__') !== -1 || args[1].value.indexOf('__params__') !== -1) {\r\n                    throw new Error('Unexpected Identifier');\r\n                }\r\n                codeStr.push(`${prefix}${args[0].value} = ${args[1].value};`);\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`if (${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`else if(${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${args[1].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`while (${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                const argVals = [];\r\n                for (const arg of args.slice(1)) {\r\n                    if (arg.name === _parameterTypes.input) {\r\n                        let val = arg.value || arg.default;\r\n                        if (prod.meta.inputMode.toString() === InputType.URL.toString() ) {\r\n                            const p = new Promise((resolve) => {\r\n                                const request = new XMLHttpRequest();\r\n                                request.open('GET', arg.value || arg.default);\r\n                                request.onload = () => {\r\n                                    resolve(request.responseText);\r\n                                };\r\n                                request.send();\r\n                            });\r\n                            val = await p;\r\n                        } else if (prod.meta.inputMode.toString() === InputType.File.toString()) {\r\n                            const p = new Promise((resolve) => {\r\n                                const reader = new FileReader();\r\n                                reader.onload = function() {\r\n                                    resolve(reader.result);\r\n                                };\r\n                                reader.readAsText(arg.value || arg.default);\r\n                            });\r\n                            val = await p;\r\n                        } else {}\r\n                        argVals.push(val);\r\n                        continue;\r\n                    }\r\n                    if (arg.value && arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        argVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        argVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n                    if (arg.value && arg.value.substring(0, 1) === '@') {\r\n                        if (prod.meta.module.toUpperCase() === 'QUERY'\r\n                            && prod.meta.name.toUpperCase() === 'SET'\r\n                            && arg.name.toUpperCase() === 'STATEMENT') {\r\n                            argVals.push('\"' + arg.value.replace(/\"/g, '\\'') + '\"');\r\n                            continue;\r\n                        }\r\n                        argVals.push('__modules__.Query.get( __params__.model,\"' + arg.value.replace(/\"/g, '\\'') + '\" )');\r\n                        continue;\r\n                    }\r\n                    // else if (arg.name.indexOf('__') != -1) return '\"'+args[args.indexOf(arg)+1].value+'\"';\r\n                    argVals.push(arg.value);\r\n\r\n                }\r\n                const argValues = argVals.join(',');\r\n                await argValues;\r\n                const fnCall = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() === 'OUTPUT') {\r\n                    codeStr.push(`return ${fnCall};`);\r\n                } else if (args[0].name === '__none__') {\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                    if (prefix === 'let ') {\r\n                        existingVars.push(args[0].value);\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                // ('args: ',args)\r\n                const argsVals = args.slice(1).map((arg) => arg.value).join(',');\r\n                const fn = `${prod.meta.name}(__params__, ${argsVals} )`;\r\n                codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n        }\r\n        if (prod.children) {\r\n            for (const p of prod.children) {\r\n                codeStr.push(await CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n            }\r\n            codeStr.push(`}`);\r\n        }\r\n\r\n        if (prod.print) {\r\n            codeStr.push(`console.log('${prod.args[0].value}: '+ ${prod.args[0].value});`);\r\n            // codeStr.push(`wait(5000);`);\r\n        }\r\n        return codeStr.join('\\n');\r\n    }\r\n\r\n\r\n    static loadFile(f) {\r\n        const stream = Observable.create(observer => {\r\n          const request = new XMLHttpRequest();\r\n\r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const fl = circularJSON.parse(request.responseText);\r\n                  observer.next(fl);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n\r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n\r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata;\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any {\r\n        const result = _parameterTypes['newFn']();\r\n        for (const model of models) {\r\n            _parameterTypes['mergeFn'](result, model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    static getInputValue(inp: IPortInput, node: INode): Promise<string> {\r\n        let input: any;\r\n        if (node.type === 'start' || inp.edges.length === 0) {\r\n            input = _parameterTypes['newFn']();\r\n        } else {\r\n            input = CodeUtils.mergeInputs(inp.edges.map(edge => edge.source.value));\r\n            /*\r\n            if (typeof input === 'number' || input === undefined){\r\n                // do nothing\r\n            } else if (typeof input === 'string'){\r\n                input = '\"' + input + '\"';\r\n            } else if (input.constructor === [].constructor){\r\n                input = '[' + input + ']';\r\n            } else if (input.constructor === {}.constructor) {\r\n                input = JSON.stringify(input);\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static async getNodeCode(node: INode, addProdArr = false): Promise<string> {\r\n        node.hasError = false;\r\n        const codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr) {\r\n            const input = await CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type === 'start') {\r\n            codeStr.push('__params__.constants = {};\\n');\r\n        }\r\n\r\n        /*\r\n        codeStr.push(`\r\nfunction wait(ms){\r\n     start = new Date().getTime();\r\n     end = start;\r\n    while(end < start + ms) {\r\n        end = new Date().getTime();\r\n    }\r\n}\r\n        `)\r\n        */\r\n\r\n        codeStr.push(`__modules__.${_parameterTypes.preprocess}( __params__.model);`);\r\n        // procedure\r\n        for (const prod of node.procedure) {\r\n            codeStr.push(await CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        }\r\n        if (node.type === 'end' && node.procedure.length > 0) {\r\n            return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } else {\r\n            codeStr.push(`__modules__.${_parameterTypes.postprocess}( __params__.model);`);\r\n        }\r\n\r\n\r\n        return `\\n${codeStr.join('\\n')}\\n\\nreturn __params__.model;\\n`;\r\n\r\n\r\n        // return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        // return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n\r\n    static async getFunctionString(func: IFunction): Promise<string> {\r\n        let fullCode = '';\r\n        /*\r\n        let fnCode = `function ${func.name}(${func.args.map(arg=>{return arg.name}).join(',')})` +\r\n        `{\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":{}};\\n`;\r\n        */\r\n        let fnCode = `function ${func.name}(__mainParams__,${func.args.map(arg => arg.name).join(',')})` +\r\n        `{\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":__modules__.${_parameterTypes['new']}()};\\n`;\r\n\r\n        for (const node of func.flowchart.nodes) {\r\n            const code = '{' + await CodeUtils.getNodeCode(node, false) + '}';\r\n            fullCode += `function ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')})` + code + `\\n\\n`;\r\n            if (node.type === 'start') {\r\n                // fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`;\r\n            } else if (node.input.edges.length === 1) {\r\n                fnCode += `__params__.model = JSON.parse(JSON.stringify(result_${node.input.edges[0].source.parentNode.id}));\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')});\\n`;\r\n            } else {\r\n                fnCode += `merged = mergeInputs([${node.input.edges.map((edge) => 'result_' + edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `__params__.model = merged;\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')});\\n`;\r\n            }\r\n            /*\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `let result_${node.id} = ${node.id}(result_${node.input.edges[0].source.parentNode.id});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeResults([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(merged);\\n`\r\n\r\n\r\n            */\r\n            if (node.type === 'end') {\r\n                fnCode += `\\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\\n`;\r\n                fnCode += `return result_${node.id};\\n`;\r\n            }\r\n            // fnCode += `console.log(result_${node.id});\\n`;\r\n        }\r\n        fnCode += '}\\n\\n';\r\n        fullCode += fnCode;\r\n        // console.log(fullCode)\r\n        return fullCode;\r\n    }\r\n\r\n}\r\n","export class ExecuteUtils {\r\n\r\n}\r\n","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';\r\n","import { IFlowchart } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { NgModuleFactoryLoader } from '@angular/core';\r\n\r\nexport class FlowchartUtils {\r\n\r\n    public static newflowchart(): IFlowchart {\r\n        const flw: IFlowchart = {\r\n            name: 'new_flowchart',\r\n            description: '',\r\n            language: 'js',\r\n            meta: {\r\n                selected_nodes: [0]\r\n            },\r\n            nodes: [  NodeUtils.getStartNode(), NodeUtils.getEndNode()  ],\r\n            edges: [],\r\n            functions: [],\r\n            ordered: false\r\n        };\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean) {\r\n        if (node.hasExecuted) {\r\n            return;\r\n        } else if (node.type === 'start' ) {\r\n            nodeOrder.push(node);\r\n        } else {\r\n            for (const edge of node.input.edges) {\r\n                if (!edge.source.parentNode.hasExecuted) {\r\n                    return;\r\n                }\r\n            }\r\n            nodeOrder.push(node);\r\n        }\r\n        node.hasExecuted = true;\r\n        node.enabled = enabled;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart) {\r\n        let startNode;\r\n        for (const node of flw.nodes) {\r\n            if (node.type === 'start') {\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        const nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length) {\r\n            for (const node of flw.nodes) {\r\n                if (node.type !== 'start' && node.input.edges.length === 0) {\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart } from './flowchart.interface';\r\nexport { FlowchartUtils } from './flowchart.utils';\r\n","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';\r\n","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { PortType, InputType, OutputType, PortUtils } from '@models/port';\r\nimport { not } from '@angular/compiler/src/output/output_ast';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { templateJitUrl } from '@angular/compiler';\r\n\r\nexport abstract class NodeUtils {\r\n\r\n    static getNewNode(): INode {\r\n        const node: INode = <INode>{\r\n            name: 'Node',\r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0},\r\n            enabled: false,\r\n            type: '',\r\n            procedure: [],\r\n            state: {\r\n                procedure: [],\r\n                input_port: undefined,\r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        };\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n\r\n        return node;\r\n    }\r\n\r\n    static getStartNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        node.enabled = true;\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        node.position = {x: 400, y: 0};\r\n        return node;\r\n    }\r\n\r\n    static getEndNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        node.position = {x: 400, y: 400};\r\n        return node;\r\n    }\r\n\r\n\r\n    static deselect_procedure(node: INode) {\r\n        for (const prod of node.state.procedure) {\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeSelected(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]) {\r\n        for (const pr of prods) {\r\n            if (!pr.selected) {\r\n                if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n                continue;\r\n            }\r\n            let i = 0;\r\n            while (i < tempList.length) {\r\n                if (tempList[i] === pr) {\r\n                    prodList.push(pr);\r\n                    tempList.splice(i, 1);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean) {\r\n        if (!procedure) {\r\n            return;\r\n        }\r\n        if (ctrl) {\r\n            let selIndex = 0;\r\n            let selected = false;\r\n            while (selIndex < node.state.procedure.length) {\r\n                if (node.state.procedure[selIndex] === procedure) {\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1);\r\n                    procedure.selected = false;\r\n                    break;\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected) {\r\n                procedure.selected = true;\r\n                node.state.procedure.push(procedure);\r\n                const tempArray = node.state.procedure.splice(0, node.state.procedure.length);\r\n                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure);\r\n                console.log(node.state.procedure);\r\n            }\r\n        } else {\r\n            const sel = procedure.selected;\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure) {\r\n                node.state.procedure = [];\r\n            } else {\r\n                node.state.procedure = [procedure];\r\n                procedure.selected = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure) {\r\n        if (node.state.procedure[0]) {\r\n            if (node.state.procedure[0].children) {\r\n                node.state.procedure[0].children.push(prod);\r\n                prod.parent = node.state.procedure[0];\r\n            } else {\r\n                let list;\r\n                if (node.state.procedure[0].parent) {\r\n                    prod.parent = node.state.procedure[0].parent;\r\n                    list = prod.parent.children;\r\n                } else {\r\n                    list = node.procedure;\r\n                }\r\n                for (const index in list) {\r\n                    if (list[index].selected) {\r\n                        list.splice(parseInt(index, 10) + 1, 0, prod);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            node.procedure.push(prod);\r\n        }\r\n\r\n    }\r\n\r\n    static add_procedure(node: INode, type: ProcedureTypes, data: IFunction ) {\r\n        const prod: IProcedure = <IProcedure>{};\r\n        prod.type = type;\r\n\r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n        // select the procedure\r\n        NodeUtils.select_procedure(node, prod, false);\r\n\r\n        switch (prod.type) {\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [\r\n                    {name: 'var_name', value: undefined, default: undefined},\r\n                    {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'i', value: undefined, default: undefined}, {name: 'arr', value: undefined, default: []} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if (!data) { throw Error('No function data'); }\r\n\r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput, description: undefined};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined};\r\n                }\r\n\r\n                // --UNSTABLE--\r\n                // changing the value of the last argument of all functions in input node to be undefined\r\n                if (node.type === 'start') {\r\n                    data.args[data.argCount - 1].value = undefined;\r\n                }\r\n\r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput, description: undefined};\r\n                prod.argCount = data.argCount + 1;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, ...data.args];\r\n                break;\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode: INode, newPos): INode {\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x;\r\n        newNode.position.y = newPos.y;\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any {\r\n        if (prod.hasOwnProperty('children')) {\r\n            prod.children.map((child: IProcedure) => {\r\n                NodeUtils.updateID(child);\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        return prod;\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ) {\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false);\r\n    }\r\n\r\n}\r\n","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';\r\n","import { IPortOutput, IPortInput } from './port.interface';\r\nimport { PortType, OutputType, InputType } from './types';\r\nimport { IdGenerator } from '@shared/utils';\r\n\r\nexport class PortUtils {\r\n\r\n    static getNewInput(): IPortInput {\r\n        const inp: IPortInput = <IPortInput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'input',\r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    }\r\n\r\n    static getNewOutput(): IPortOutput {\r\n        const oup: IPortOutput = <IPortOutput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'output',\r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text,\r\n            }\r\n        };\r\n        return oup;\r\n    }\r\n\r\n}\r\n","export enum PortType {\r\n    Input,\r\n    Output\r\n}\r\n\r\nexport enum InputType {\r\n    SimpleInput,\r\n    Slider,\r\n    Checkbox,\r\n    URL,\r\n    File\r\n}\r\n\r\nexport enum OutputType {\r\n    Text,\r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';\r\n","export enum ProcedureTypes {\r\n    Variable,\r\n    If,\r\n    Elseif,\r\n    Else,\r\n    Foreach,\r\n    While,\r\n    Break,\r\n    Continue,\r\n    Function,\r\n    Imported\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\n\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\nimport { SVGFlowchartModule } from '../../app/ngFlowchart-svg';\r\nimport { AngularSplitModule } from 'angular-split';\r\n\r\nimport { MbFileReaderDirective } from './directives/filesys';\r\nimport { ExecuteComponent } from './components/execute/execute.component';\r\nimport { PageNotFoundComponent } from './components/not-found/not-found.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AddOutputComponent } from './components/add-components/add_output.component';\r\nimport { AddNodeComponent } from './components/add-components/add_node.component';\r\nimport { AddInputComponent } from './components/add-components/add_input.component';\r\nimport { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';\r\nimport { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';\r\nimport { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\n\r\nimport { MobiusViewerModule } from '../mViewer/mobius-viewer.module';\r\nimport { AutogrowDirective } from './directives/textarea';\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            HeaderComponent,\r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n        ],\r\n    imports: [\r\n            CommonModule,\r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            SVGFlowchartModule,\r\n            MobiusViewerModule,\r\n            AngularSplitModule,\r\n            FormsModule,\r\n            MatIconModule,\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [\r\n            FormsModule,\r\n            SVGFlowchartModule,\r\n            MobiusViewerModule,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            HeaderComponent,\r\n            AddNodeComponent,\r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            ParameterViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule) {\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}\r\n","export abstract class IdGenerator {\r\n\r\n  private static s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  static getId(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  static getNodeID(): string {\r\n    return 'node_' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n\r\n  static getProdID() {\r\n    return 'prod-' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n}\r\n","export * from './GUID';\r\n","// export * from './view-about/view-about.module';\r\nexport * from './view-gallery/view-gallery.component';\r\nexport * from './view-gallery/view-gallery.module';\r\nexport * from './view-publish/view-publish.module';\r\nexport * from './view-publish/view-publish.component';\r\nexport * from './view-editor/view-editor.module';\r\nexport * from './view-editor/view-editor.component';\r\n","module.exports = \"<div class='flowchart-info'>\\r\\n    <input [(ngModel)]='flowchart.name' size={{flowchart.name?.length||1}}>\\r\\n    <textarea autogrow [(ngModel)]='flowchart.description' placeholder=\\\"flowchart description\\\"></textarea>\\r\\n</div>\\r\\n<hr>\\r\\n<div class='container--input'>\\r\\n    <procedure-input-editor *ngFor=\\\"let prod of node.procedure\\\" [prod]=\\\"prod\\\" ></procedure-input-editor>\\r\\n</div>\\r\\n\\r\\n<!--\\r\\n<section *ngIf=\\\"node.type != 'end'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'inputs'\\\"></panel-header>\\r\\n    <div class='container--input'>\\r\\n        <input-port-editor [port]=\\\"node?.input\\\" ></input-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n<section *ngIf=\\\"node.type != 'start'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'output'\\\"></panel-header>\\r\\n    <div class='container--output'>\\r\\n        <output-port-editor [port]=\\\"node?.output\\\" ></output-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n-->\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 10px;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: -ms-grid;\\n  display: grid;\\n  padding-left: 10px;\\n  margin: 5px 0px;\\n  width: 100%; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding: 5px;\\n  margin-left: 3px;\\n  font-weight: 600;\\n  font-style: italic;\\n  min-width: 40px;\\n  max-width: 300px;\\n  font-size: 12px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\ntextarea {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding-left: 5px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 10px 0px 5px 3px;\\n  height: 18px;\\n  width: 90%;\\n  resize: none; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid gainsboro; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent {\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n    /*\r\n    deletePort(port, index){\r\n      const porttype = port.type;\r\n\r\n      if(porttype == PortType.Input && this.node.input[index] !== undefined){\r\n          this.node.input.splice(index, 1);\r\n      }\r\n      else if(porttype == PortType.Output && this.node.output[index] !== undefined){\r\n          this.node.output.splice(index, 1);\r\n      }\r\n\r\n    }\r\n    */\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container container--parameter' *ngIf='prod.meta.module==\\\"Input\\\"'>\\r\\n    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' size='15' disabled>\\r\\n\\r\\n    <select name={{prod.ID}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n        (input)='updateInputSize($event)' size={{prod.args[prod.argCount-1].default.length||13}}>\\r\\n\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].min' placeholder='Min'\\r\\n            (input)='updateInputSize($event)' size={{prod.args[prod.argCount-1].min?.length||1}}>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].max' placeholder='Max'\\r\\n            (input)='updateInputSize($event)' size={{prod.args[prod.argCount-1].max?.length||1}}>\\r\\n            <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                tickInterval=\\\"auto\\\"\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n            (input)='updateInputSize($event)' size={{prod.args[prod.argCount-1].default?.length||1}} disabled>\\r\\n\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </ng-container>\\r\\n    <div>\\r\\n        <input class='inp--desc' placeholder='Constant Description' [(ngModel)]='prod.meta.description'\\r\\n        (input)='updateInputSize($event)' size={{prod.meta.description?.length||20}}>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<div class='container container--parameter' *ngIf='prod.meta.module==\\\"Output\\\"'>\\r\\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\\r\\n    (input)='updateInputSize($event)' size={{prod.meta.description?.length||20}}>\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #505050;\\n  vertical-align: bottom;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  width: 100%; }\\n\\nselect {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: 1px solid #505050; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.slider-val {\\n  color: #505050;\\n  resize: horizontal;\\n  size: 2;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: 20px; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.div--slider {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.inp--desc {\\n  font-size: 12px;\\n  padding-top: 5px;\\n  max-width: 700px; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nconst keys = Object.keys(InputType);\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '14px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class ProcedureInputEditorComponent implements AfterViewInit {\r\n\r\n    @Input() prod: IProcedure;\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        console.log(this.prod);\r\n    }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].default = event.target.files[0];\r\n    }\r\n\r\n    updateInputSize(event) {\r\n        const val = event.target.value || event.target.placeholder;\r\n        event.target.style.width = ctx.measureText(val).width + 10 + 'px';\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <input class='input--arg'\\r\\n                [(ngModel)]='data.args[1].value'\\r\\n                name='data.args[1].name'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                size = {{data.args[1].name.length}}\\r\\n                (input)='updateInputSize($event)'>  \\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='function-text'>\\r\\n                If\\r\\n            </div>\\r\\n            ( <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].name.length}}\\r\\n                    (input)='updateInputSize($event)'>  \\r\\n                    )\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='function-text'>\\r\\n                Else if\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        ( <input class='input--arg'\\r\\n                (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                size={{data.args[0].name.length}}\\r\\n                (input)='updateInputSize($event)'>  \\r\\n                )\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='function-text'>\\r\\n                Else\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <!-- FOREACH Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n                <div class='function-text'>\\r\\n                    For\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].name.length}}\\r\\n                    (input)='updateInputSize($event)'>  \\r\\n                <div class='function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    name='data.args[1].name'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    size={{data.args[1].name.length}}\\r\\n                    (input)='updateInputSize($event)'>  \\r\\n                    \\r\\n        </div>\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='function-text'>\\r\\n                While\\r\\n            </div>\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].name.length}}\\r\\n                    (input)='updateInputSize($event)'>  \\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.meta.module.toUpperCase() !='OUTPUT' && data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'>{{data.meta.module}}.{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <!--\\r\\n                <input *ngIf=\\\"p.name.toUpperCase() !== '__MODEL__'; else text_template\\\" \\r\\n                \\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)' \\r\\n                [(ngModel)]='p.value' \\r\\n                placeholder={{p.name}}>    \\r\\n                \\r\\n                <ng-template #text_template>\\r\\n                    model,\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n                <input *ngIf=\\\"p.name.indexOf('__') == -1\\\" \\r\\n                        class='input--arg' \\r\\n                        (cut)='stopProp($event)' \\r\\n                        (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.name.length}}\\r\\n                        (input)='updateInputSize($event)'>    \\r\\n                \\r\\n                <!--\\r\\n\\r\\n                <ng-template #model_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == model; else params_template\\\">\\r\\n                        model,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                <ng-template #params_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == constList;\\\">\\r\\n                        const_list,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <input class='input--var'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <div class='function-text'>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                        (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.name.length}}\\r\\n                        (input)='updateInputSize($event)'>    \\r\\n            </ng-container>\\r\\n            \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- delete button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n        </button>\\r\\n        <!-- Disable button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>tv_off</mat-icon>\\r\\n        </button>\\r\\n        <!-- Print button-->\\r\\n        <button *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>print</mat-icon>\\r\\n        </button>\\r\\n        <!-- help button-->\\r\\n        <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\" (click)='emitHelpText(undefined)'>\\r\\n            <mat-icon class='icon'>help</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- list of child procedures (if the procedure has children) -->\\r\\n    <div *ngIf=\\\"data?.children\\\" class='container--nested'>\\r\\n        <procedure-item \\r\\n            *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)='selectChild($event, line)'\\r\\n            (delete)='deleteChild(idx)'\\r\\n            (helpText)='emitHelpText($event)'></procedure-item>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  margin: 8px 0px 2px 10px;\\n  padding: 2px 0px 2px 2px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  color: #505050;\\n  min-height: 22px;\\n  opacity: 1; }\\n\\n.container--line.disabled {\\n    opacity: 0.5; }\\n\\n.container--line.selected {\\n    border: 1px solid #000096;\\n    background-color: gainsboro; }\\n\\n.container--line.error {\\n    border: 1px solid red; }\\n\\n.container--item {\\n  margin: none;\\n  padding: none;\\n  border: none; }\\n\\n.btn {\\n  height: 24px;\\n  width: 24px;\\n  float: right;\\n  background-color: transparent;\\n  border: none;\\n  display: none;\\n  color: #777; }\\n\\n.btn.highlighted {\\n    background-color: #ff9696; }\\n\\n.container--item:hover .btn {\\n  display: block; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 20px; }\\n\\n.line--item {\\n  display: inline-block;\\n  color: #505050; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.input--var {\\n  width: 70px;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-right: 5px; }\\n\\n.input--arg {\\n  resize: horizontal;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: auto;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px; }\\n\\ninput:focus {\\n  border: 1px solid #000096; }\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: normal;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 600; }\\n\"","import { Component, Input, Output,  EventEmitter, OnInit, OnDestroy} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ProcedureTypesAware, ModuleDocAware } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '14px Arial';\r\n\r\n@ProcedureTypesAware\r\n@ModuleDocAware\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html',\r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent {\r\n    @Input() data: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n    @Output() helpText = new EventEmitter();\r\n\r\n    private model = _parameterTypes.model;\r\n    private constList = _parameterTypes.constList;\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    // delete this procedure\r\n    emitDelete(): void {\r\n        this.delete.emit();\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event, procedure: IProcedure) {\r\n        event.stopPropagation();\r\n        this.select.emit({'ctrl': event.ctrlKey, 'prod': procedure});\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void {\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure) {\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markPrint() {\r\n        this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled() {\r\n        this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    canBePrinted() {\r\n        return (this.data.argCount > 0 && this.data.args[0].name === 'var_name');\r\n    }\r\n\r\n    haveHelpText() {\r\n        return (this.data.type === ProcedureTypes.Function || this.data.type ===  ProcedureTypes.Imported);\r\n    }\r\n\r\n    emitHelpText($event) {\r\n        if ($event) {\r\n            this.helpText.emit($event);\r\n            return;\r\n        }\r\n        try {\r\n            // @ts-ignore\r\n            this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n        } catch (ex) {\r\n            this.helpText.emit('error');\r\n        }\r\n\r\n    }\r\n\r\n    // stopPropagation to prevent cut/paste with input box focused\r\n    stopProp(event): void {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    // modify input: replace space \" \" with underscore \"_\"\r\n    varMod(event) {\r\n        if (!event) { return event; }\r\n        let str = event.trim();\r\n        str = str.replace(/ /g, '_');\r\n        return str;\r\n    }\r\n\r\n\r\n    updateInputSize(event) {\r\n        const val = event.target.value || event.target.placeholder;\r\n        event.target.style.width = ctx.measureText(val).width + 10 + 'px';\r\n    }\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"nodeType == ''\\\">\\r\\n    <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n    <ul class='toolset__basic'>\\r\\n        <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n            <li *ngIf='type.toUpperCase() !== \\\"FUNCTION\\\" && type.toUpperCase() !== \\\"IMPORTED\\\"'\\r\\n            class='tooltip'\\r\\n            (click)='add(ProcedureTypes[type])'> \\r\\n                {{type}}\\r\\n                <!--\\r\\n                <span class=\\\"tooltiptext\\\">\\r\\n                    <p class='funcDesc'>{{type}}</p>\\r\\n                </span>\\r\\n                -->\\r\\n            </li>\\r\\n        </ng-container>\\r\\n    </ul>\\r\\n    \\r\\n\\r\\n    <!-- functions from core.modules -->\\r\\n    <ng-container *ngFor='let mod of Modules' >\\r\\n\\r\\n        <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n        *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'\\r\\n        (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <ng-container *ngFor='let fn of mod.functions'>\\r\\n                    <div class='tooltip' *ngIf='fn.name.substring(0,1)!=\\\"_\\\"'>\\r\\n                        <li \\r\\n                        (click)='add_function(fn)'> \\r\\n                            {{fn.name}} \\r\\n                        </li>\\r\\n                        <span class=\\\"tooltiptext\\\" *ngIf='ModuleDoc[mod.module] && ModuleDoc[mod.module][fn.name]'>\\r\\n                            <p class='funcDesc'>{{ModuleDoc[mod.module][fn.name].summary||ModuleDoc[mod.module][fn.name].description}}</p>\\r\\n                            <p *ngIf='ModuleDoc[mod.module][fn.name].parameters?.length > 0'><span>Parameters: </span></p>\\r\\n                            <p class='paramP' *ngFor='let param of ModuleDoc[mod.module][fn.name].parameters'><span>{{param.name}} - </span> {{param.description}}</p>\\r\\n                            <p *ngIf='ModuleDoc[mod.module][fn.name].returns'><span>Returns: </span> {{ModuleDoc[mod.module][fn.name].returns}}</p>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- imported functions -->\\r\\n    <ng-container>\\r\\n        <button id='imported' class=\\\"accordion\\\" \\r\\n        (click)='toggleAccordion(\\\"imported\\\")' >Imported</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <div class='tooltip' *ngFor='let fn of functions'>\\r\\n                    <li (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                        <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                            <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                        </button>\\r\\n                    </li>\\r\\n                    <span class=\\\"tooltiptext\\\">\\r\\n                        <p class='funcDesc'>{{fn.doc.description}}</p>\\r\\n                        <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>\\r\\n                        <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>\\r\\n                        <p *ngIf='fn.doc.returns'><span>Returns: </span> {{fn.doc.returns}}</p>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </ul>\\r\\n            <br>\\r\\n            <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n            <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</ng-container>\\r\\n\\r\\n<!-- functions for input nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'start'\\\">\\r\\n    \\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"INPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- functions for output nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'end'\\\">\\r\\n    <div class='toolset__functions' *ngIf=\\\"hasProd===false\\\">\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"OUTPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  width: 100%;\\n  background-color: #efefef; }\\n\\nul {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  padding-left: 15px; }\\n\\nul li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    color: #505050;\\n    font-size: 12px;\\n    line-height: 18px; }\\n\\n.remove-btn {\\n  background-color: transparent;\\n  border: none;\\n  height: 13px;\\n  float: right; }\\n\\n.remove-btn .remove-icon {\\n    font-size: 11px;\\n    height: 11px;\\n    color: #505050; }\\n\\n.add-btn {\\n  background-color: transparent;\\n  border: none;\\n  float: left;\\n  padding: 6px;\\n  transition: 0.4s; }\\n\\n.add-btn :hover {\\n    background-color: gainsboro; }\\n\\n.add-btn .add-icon {\\n    float: left;\\n    color: #505050; }\\n\\n.accordion {\\n  background-color: gainsboro;\\n  color: #505050;\\n  cursor: pointer;\\n  width: 100%;\\n  padding: 8px 8px 8px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550; }\\n\\n.active, .accordion:hover {\\n  background-color: #ccc; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px 10px 0px 0px;\\n  display: none;\\n  background-color: #efefef;\\n  overflow: hidden; }\\n\\n.tooltip {\\n  display: block; }\\n\\n/* Tooltip text */\\n\\n.tooltip .tooltiptext {\\n  min-width: 50px;\\n  max-width: 500px;\\n  background-color: #efefef;\\n  border: 1px solid #ccc;\\n  color: #505050;\\n  pointer-events: none;\\n  padding: 0px 10px 0px 10px;\\n  opacity: 0;\\n  position: absolute;\\n  z-index: 1; }\\n\\n.tooltip .tooltiptext p {\\n    font-family: sans-serif; }\\n\\n.tooltip .tooltiptext p.funcDesc {\\n      font-weight: 600; }\\n\\n.tooltip .tooltiptext p.paramP {\\n      padding-left: 5px; }\\n\\n.tooltip .tooltiptext p.paramP ::before {\\n        display: inline-block;\\n        content: '';\\n        border-radius: 0.25rem;\\n        height: 0.25rem;\\n        width: 0.25rem;\\n        margin: 0rem 0.3rem 0.15rem 0rem;\\n        background-color: #505050; }\\n\\n.tooltip .tooltiptext p span {\\n      font-style: italic; }\\n\\n/* Show the tooltip text when you mouse over the tooltip container */\\n\\n.tooltip:hover .tooltiptext {\\n  transition-delay: 1s;\\n  transition-duration: 0.3s;\\n  opacity: 1; }\\n\"","import { Component, Output, EventEmitter, Input} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IModule } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\nimport { ModuleAware, ModuleDocAware } from '@shared/decorators';\r\n\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\n\r\n@ModuleAware\r\n@ModuleDocAware\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss']\r\n})\r\nexport class ToolsetComponent {\r\n\r\n    @Output() select = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    @Input() functions: IFunction[];\r\n    @Input() nodeType: string;\r\n    @Input() hasProd: boolean;\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {}\r\n\r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes): void {\r\n        this.select.emit( { type: type, data: undefined } );\r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData) {\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n\r\n        this.select.emit( { type: ProcedureTypes.Function, data: fnData } );\r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData) {\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value};\r\n            });\r\n        this.select.emit( { type: ProcedureTypes.Imported, data: fnData } );\r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData) {\r\n        this.delete.emit(fnData);\r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event) {\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function() {\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n\r\n                // create function and documentation of the function\r\n                const funcs = [];\r\n                const documentation = {\r\n                    name: fl.name,\r\n                    module: 'Imported',\r\n                    description: fl.description,\r\n                    summary: fl.description,\r\n                    parameters: [],\r\n                    returns: undefined\r\n                };\r\n                const func: IFunction = <IFunction>{\r\n                    flowchart: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: fl.name,\r\n                    module: 'Imported',\r\n                    doc: documentation\r\n                };\r\n\r\n                // go through the nodes\r\n                func.argCount = fl.nodes[0].procedure.length;\r\n                func.args = fl.nodes[0].procedure.map(prod => {\r\n                    documentation.parameters.push({\r\n                        name: prod.args[prod.argCount - 2].value.substring(1, prod.args[prod.argCount - 2].value.length - 1),\r\n                        description: prod.meta.description\r\n                    });\r\n                    return <IArgument>{\r\n                        name: prod.args[prod.argCount - 2].value.substring(1, prod.args[prod.argCount - 2].value.length - 1),\r\n                        default: prod.args[prod.argCount - 1].default,\r\n                        value: undefined,\r\n                        min: undefined,\r\n                        max: undefined\r\n                    };\r\n                });\r\n                if (!func.argCount) {\r\n                    resolve('error');\r\n                }\r\n\r\n                for (const node of fl.nodes) {\r\n                    if (node.type === 'end') {\r\n                        if (node.procedure.length > 0) {documentation.returns = node.procedure[0].meta.description; }\r\n                    }\r\n                }\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (const i of fl.functions) {\r\n                    funcs.push(i);\r\n                }\r\n                resolve(funcs);\r\n            };\r\n            reader.onerror = function() {\r\n                resolve('error');\r\n            };\r\n            reader.readAsText(event.target.files[0]);\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = '';\r\n        if (fnc === 'error') {\r\n            console.warn('Error reading file');\r\n            return;\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    toggleAccordion(id: string) {\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        const panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<h2>{{dataService.node?.name}}</h2>\\r\\n\\r\\n<div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'\\r\\n(copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\\r\\n\\r\\n    <div class='container__content'>\\r\\n        <!-- toolset on the left side -->\\r\\n        <div class=\\\"container--toolset\\\">\\r\\n            <toolset [functions]='dataService.flowchart.functions' \\r\\n            [nodeType]='dataService.node.type' \\r\\n            [hasProd]='dataService.node.procedure.length>0' \\r\\n            (delete)='deleteFunction($event)' \\r\\n            (select)='add($event)' \\r\\n            (imported)='importFunction($event)'></toolset>\\r\\n        </div>\\r\\n\\r\\n        <!-- procedure editor on the right side -->\\r\\n        <div id='procedure' class=\\\"container--procedure\\\">\\r\\n            <!-- parameter-editor only for start node -->\\r\\n            <parameter-editor *ngIf=\\\"dataService.node.type == 'start' || dataService.node.type == 'end'\\\" [flowchart]='dataService.flowchart' [node]='dataService.node'></parameter-editor>\\r\\n\\r\\n            <!-- list of procedure items for all nodes -->\\r\\n            <procedure-item \\r\\n            *ngFor=\\\"let line of dataService.node?.procedure; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)=\\\"selectProcedure($event,line)\\\"\\r\\n            (delete)=\\\"deleteChild(idx)\\\"\\r\\n            (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            <br>\\r\\n            <br>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".container--editor {\\n  display: block;\\n  height: 95%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 98%; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  width: 100%;\\n  font-size: 12px;\\n  line-height: 14px;\\n  font-weight: 600;\\n  padding-left: 15px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 95%;\\n  overflow: inherit; }\\n\\n.container--toolset {\\n  display: inline-flex;\\n  width: 20%; }\\n\\n.container--procedure {\\n  display: block;\\n  width: 80%;\\n  bottom: 10px;\\n  background-color: #fafafa;\\n  padding: none; }\\n\\nhr {\\n  border-top: 2px solid #efefef;\\n  width: 100%; }\\n\\n/*\\r\\n$header-height: 45px;\\r\\n\\r\\n.container{\\r\\n    position: relative;\\r\\n    overflow: auto;\\r\\n    margin: 10px 10px;\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n        \\r\\n    h1, h2, h3, h4, h5, h6, p{\\r\\n        margin: 0px;\\r\\n        padding: 0px;\\r\\n    }\\r\\n\\r\\n    .container__header{\\r\\n        flex: 0 1 auto;\\r\\n        min-height: $header-height;\\r\\n\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        justify-content: space-between;\\r\\n\\r\\n        padding: 0px 0px 0px 15px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n        \\r\\n        line-height: $header-height;\\r\\n        text-transform: uppercase;\\r\\n    \\r\\n        font-size: 18px;\\r\\n        font-weight: 600;\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    .container__content{\\r\\n        flex-grow: 1;\\r\\n        height: 0px;\\r\\n        border: 2px solid #3F4651;\\r\\n        overflow: auto;\\r\\n\\r\\n        split{\\r\\n            height: 100%;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .container__footer{\\r\\n        text-align: center;\\r\\n        font-size: 12px;\\r\\n        line-height: 18px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.content__panel{\\r\\n    height: 100%; \\r\\n    overflow: auto;\\r\\n\\r\\n    //padding: 10px 15px;\\r\\n}\\r\\n*/\\n\"","import { Component, Input, EventEmitter, Output} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent {\r\n    /*\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() node: INode;\r\n    */\r\n\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    @Output() helpText = new EventEmitter();\r\n    copiedProd: IProcedure[];\r\n\r\n    private copyCheck = false;\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n      NodeUtils.add_procedure(this.dataService.node, data.type, data.data);\r\n    }\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void {\r\n      this.dataService.node.procedure.splice(index, 1);\r\n      NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event, line): void {\r\n      NodeUtils.select_procedure(this.dataService.node, event.prod, event.ctrl || false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd() {\r\n      if (!this.copyCheck) { return; }\r\n      console.log('copying', this.dataService.node.state.procedure);\r\n      this.copiedProd = this.dataService.node.state.procedure;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd(event) {\r\n      if (!this.copyCheck || document.activeElement.nodeName === 'INPUT') { return; }\r\n      console.log('cutting', this.dataService.node.state.procedure);\r\n      this.copiedProd = this.dataService.node.state.procedure;\r\n      let parentArray;\r\n      for (const prod of this.copiedProd) {\r\n        if (prod.parent) {\r\n          parentArray = prod.parent.children;\r\n        } else { parentArray = this.dataService.node.procedure; }\r\n\r\n        for (let i = 0; i < parentArray.length; i++ ) {\r\n          if (parentArray[i] === prod) {\r\n            parentArray.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd(event) {\r\n      if (this.copyCheck && this.copiedProd && document.activeElement.nodeName.toUpperCase() !== 'INPUT') {\r\n        const pastingPlace = this.dataService.node.state.procedure[0];\r\n        if (pastingPlace === undefined) {\r\n          for (let i = 0; i < this.copiedProd.length; i++) {\r\n            console.log('pasting', this.copiedProd[i].ID);\r\n            NodeUtils.paste_procedure(this.dataService.node, this.copiedProd[i]);\r\n            this.dataService.node.state.procedure[0].selected = false;\r\n            this.dataService.node.state.procedure = [];\r\n          }\r\n        } else if (pastingPlace.children) {\r\n          for (let i = 0; i < this.copiedProd.length; i++) {\r\n            console.log('pasting', this.copiedProd[i].ID);\r\n            NodeUtils.paste_procedure(this.dataService.node, this.copiedProd[i]);\r\n            this.dataService.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true;\r\n            this.dataService.node.state.procedure = [pastingPlace];\r\n          }\r\n\r\n        } else {\r\n          for (let i = this.copiedProd.length - 1; i >= 0; i --) {\r\n            console.log('pasting', this.copiedProd[i].ID);\r\n            NodeUtils.paste_procedure(this.dataService.node, this.copiedProd[i]);\r\n            this.dataService.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true;\r\n            this.dataService.node.state.procedure = [pastingPlace];\r\n          }\r\n        }\r\n        // this.copiedProd = undefined;\r\n      }\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void {\r\n      this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void {\r\n      this.copyCheck = false;\r\n    }\r\n\r\n    // import a flowchart as function\r\n    importFunction(event) {\r\n      for (const func of event) {\r\n        this.dataService.flowchart.functions.push(func);\r\n      }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event) {\r\n        for (let i = 0; i < this.dataService.flowchart.functions.length; i++) {\r\n            if (this.dataService.flowchart.functions[i] === event) {\r\n                this.dataService.flowchart.functions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    emitHelpText(event) {\r\n      this.helpText.emit(event);\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { ProcedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { MatSliderModule, MatIconModule, MatExpansionModule, MatButtonModule, MatSelectModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    ProcedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Shortens a name to a certain length and appends \"...\" infront of it\r\n * Usage:\r\n *   value | length:number\r\n * Example:\r\n *   {{ \"some_very_long_string\" | length:7 }}\r\n *   formats to: some_ve...\r\n*/\r\n@Pipe({name: 'simplename'})\r\nexport class SimpleNamePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    if (value.endsWith('.mob')) {\r\n        value = value.substr(0, value.length - 4);\r\n    }\r\n    value = value.split('_').join(' ');\r\n    value = value.split('-').join(' ');\r\n    return value;\r\n  }\r\n}\r\n","module.exports = \"<h2>Möbius Gallery</h2>\\r\\n<hr>\\r\\n<h4>Displaying {{ (allFiles | async)?.length}} projects</h4>\\r\\n<div class=\\\"container__element container__element--project-container\\\">\\r\\n    <div class=\\\"project-container__project\\\" *ngFor=\\\"let f of  (allFiles | async)\\\">\\r\\n        <div class=\\\"project__content\\\" (click)='loadFile(f)'>\\r\\n            {{ f.name | simplename }}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"container__element container__element--header\\\">\\r\\n        Möbius Gallery\\r\\n        <navigation></navigation>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container__element container__element--subheader\\\">\\r\\n        Displaying {{ (allFiles | async)?.length}} projects\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"container__element container__element--project-container\\\">\\r\\n        <div class=\\\"project-container__project\\\" *ngFor=\\\"let f of  (allFiles | async)\\\">\\r\\n            <div class=\\\"project__content\\\" (click)='loadFile(f)'>\\r\\n                {{ f.name | simplename }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n-->\\r\\n<!--\\r\\n<a href=\\\"https://github.com/design-automation/mobius-cesium\\\">\\r\\n    <img style=\\\"position: absolute; top: 0; right: 0; border: 0;\\\" src=\\\"https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png\\\" alt=\\\"Fork me on GitHub\\\">\\r\\n</a>\\r\\n-->\"","module.exports = \".container__element {\\n  padding: 0px 10% 0px 10%; }\\n\\n.container__element--project-container {\\n  font-size: 26px;\\n  line-height: 32px;\\n  font-weight: 300;\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  overflow: auto; }\\n\\n.project-container__project {\\n  position: relative;\\n  width: 25%;\\n  height: 150px;\\n  min-width: 200px; }\\n\\n.project-container__project .project__content {\\n    height: 90%;\\n    width: 90%;\\n    font-size: 12px;\\n    line-height: 24px;\\n    color: #000;\\n    overflow: hidden;\\n    border-radius: 4px;\\n    vertical-align: middle;\\n    overflow-wrap: break-word;\\n    word-wrap: break-word;\\n    word-break: break-word;\\n    border: 1px solid #bbb;\\n    border-radius: 2px; }\\n\\n.project-container__project .project__content a {\\n      display: block;\\n      height: 100%;\\n      margin: 10px;\\n      text-decoration: none;\\n      text-align: center;\\n      text-transform: uppercase;\\n      color: inherit;\\n      font-weight: 600; }\\n\\n.project-container__project .project__content a:visited {\\n        color: inherit; }\\n\\n.project-container__project .project__content:hover {\\n      border-color: #222; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 19px; }\\n\\nh4 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from './view-gallery.config';\r\nimport { Observable } from 'rxjs';\r\nimport { IMobius } from '@models/mobius';\r\n// import {Router} from '@angular/router';\r\n\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'view-gallery',\r\n  templateUrl: './view-gallery.component.html',\r\n  styleUrls: ['./view-gallery.component.scss']\r\n})\r\nexport class ViewGalleryComponent {\r\n\r\n    private allFiles: Observable<any>;\r\n    @Output() switch = new EventEmitter();\r\n\r\n    constructor(private http: HttpClient, private dataService: DataService) {\r\n        this.allFiles = this.getFilesFromURL();\r\n    }\r\n\r\n    getFilesFromURL(): Observable<any> {\r\n        return this.http.get(Constants.GALLERY_URL, {responseType: 'json'});\r\n    }\r\n\r\n    loadFile(fl) {\r\n        const stream = Observable.create(observer => {\r\n            const request = new XMLHttpRequest();\r\n\r\n            request.open('GET', fl.download_url);\r\n            request.onload = () => {\r\n                if (request.status === 200) {\r\n                    const f = circularJSON.parse(request.responseText);\r\n                    const file: IMobius = {\r\n                        name: f.name,\r\n                        author: f.author,\r\n                        flowchart: f.flowchart,\r\n                        last_updated: f.last_updated,\r\n                        version: f.version\r\n                    };\r\n                    observer.next(file);\r\n                    observer.complete();\r\n                } else {\r\n                    observer.error('error happened');\r\n                }\r\n            };\r\n\r\n            request.onerror = () => {\r\n            observer.error('error happened');\r\n            };\r\n            request.send();\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            this.switch.emit('publish');\r\n        });\r\n    }\r\n\r\n}\r\n","export class Constants {\r\n    public static get GALLERY_URL(): string {\r\n        // return 'https://api.github.com/repos/design-automation/mobius-gallery/contents/examples?ref=master';\r\n        return 'https://api.github.com/repos/design-automation/mobius-core/contents/src/assets/gallery?ref=master';\r\n    }\r\n\r\n    public static get FILE_URL(): string {\r\n        return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewGalleryRoutingModule } from './view-gallery-routing.module';\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\nimport { SimpleNamePipe } from './simple-name.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewGalleryComponent,\r\n    SimpleNamePipe\r\n  ],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    // ViewGalleryRoutingModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewGalleryModule {\r\n    constructor () { }\r\n}\r\n","module.exports = \"<parameter-viewer [flowchart]='dataService.flowchart' [startNode]='dataService.flowchart.nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n\\r\\n<!--\\r\\n<div class='container'>\\r\\n    <div class='container__content'>\\r\\n    \\r\\n        < !-- Side content__Panel: Split into three panes -- >\\r\\n        <as-split direction=\\\"vertical\\\">\\r\\n\\r\\n            <as-split-area size='20'>\\r\\n                <div class='content__panel'>\\r\\n                    <parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n                </div>\\r\\n            </as-split-area>\\r\\n            \\r\\n            < !-- \\r\\n            <as-split-area size='20'>\\r\\n                <div class='content__panel'>\\r\\n                        <flowchart [data]=\\\"flowchart\\\" (select)='selectNode($event)'></flowchart>\\r\\n                </div>\\r\\n            </as-split-area> \\r\\n            -- >\\r\\n        \\r\\n        </as-split>\\r\\n                    \\r\\n    </div>\\r\\n</div>\\r\\n-->\\r\\n<!--\\r\\n<div class='container'>\\r\\n\\r\\n    <div class='container__header'>\\r\\n        Mobius Viewer    \\r\\n        <navigation></navigation>\\r\\n        <execute [flowchart]='flowchart'></execute>\\r\\n    </div>\\r\\n\\r\\n    <div class='container__content'>\\r\\n        <file-new *ngIf='!flowchart'></file-new>\\r\\n\\r\\n        <as-split direction=\\\"horizontal\\\" *ngIf='flowchart'>\\r\\n            <as-split-area size=\\\"60\\\">\\r\\n\\r\\n                <div class='content__panel' *ngIf='flowchart.meta.selected_nodes[0] !== undefined'>\\r\\n                    <mviewer [node]='flowchart.nodes[flowchart.meta.selected_nodes[0]]'></mviewer>\\r\\n                </div>\\r\\n            </as-split-area>\\r\\n            \\r\\n            <as-split-area size=\\\"40\\\">\\r\\n    \\r\\n\\r\\n                <as-split direction=\\\"vertical\\\">\\r\\n    \\r\\n                        <as-split-area size='20'>\\r\\n                            <div class='content__panel'>\\r\\n                                <parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n                            </div>\\r\\n                        </as-split-area>\\r\\n                        \\r\\n                    \\r\\n                    </as-split>\\r\\n                    \\r\\n            </as-split-area>\\r\\n        </as-split>\\r\\n    </div>\\r\\n\\r\\n    <div class='container__footer'>\\r\\n        Copyright © 2018 Design Automation Lab, NUS. All Rights Reserved.\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n</div>\\r\\n-->\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 45px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #3F4651;\\n    color: #E7BF00;\\n    line-height: 45px;\\n    text-transform: uppercase;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: none;\\n    overflow: auto; }\\n  .container .container__content split {\\n      height: 100%; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  height: 100%;\\n  overflow: auto;\\n  padding: 10px 15px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'view-publish',\r\n  templateUrl: './view-publish.component.html',\r\n  styleUrls: ['./view-publish.component.scss']\r\n})\r\nexport class ViewPublishComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    selectNode(node_index: number): void {\r\n      if ( typeof(node_index) === 'number' ) {\r\n          this.dataService.flowchart.meta.selected_nodes = [node_index];\r\n      }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (const node of this.dataService.flowchart.nodes) {\r\n        if (node.type === 'end') { return node; }\r\n      }\r\n    }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewPublishRoutingModule } from './view-publish-routing.module';\r\nimport { ViewPublishComponent } from './view-publish.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewPublishComponent\r\n  ],\r\n  exports: [\r\n    ViewPublishComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewPublishModule {\r\n    constructor () { }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}