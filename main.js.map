{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/core/modules/_parameterTypes.ts","webpack:///./src/app/core/modules/console.ts","webpack:///./src/app/core/modules/index.ts","webpack:///./src/app/core/modules/input.ts","webpack:///./src/app/core/modules/model.ts","webpack:///./src/app/core/modules/output.ts","webpack:///./src/app/core/modules/query.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/viewer.service.ts","webpack:///./src/app/mViewer/mobius-viewer.component.html","webpack:///./src/app/mViewer/mobius-viewer.component.scss","webpack:///./src/app/mViewer/mobius-viewer.component.ts","webpack:///./src/app/mViewer/mobius-viewer.module.ts","webpack:///./src/app/mViewer/viewers.config.ts","webpack:///./src/app/mViewer/viewers/console-viewer.component.ts","webpack:///./src/app/mViewer/viewers/index.ts","webpack:///./src/app/mViewer/viewers/viewer-text.component.ts","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.html","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.component.html","webpack:///./src/app/ngFlowchart-svg/flowchart.component.scss","webpack:///./src/app/ngFlowchart-svg/flowchart.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.module.ts","webpack:///./src/app/ngFlowchart-svg/index.ts","webpack:///./src/app/ngFlowchart-svg/node/node.actions.ts","webpack:///./src/app/ngFlowchart-svg/node/node.component.html","webpack:///./src/app/ngFlowchart-svg/node/node.component.scss","webpack:///./src/app/ngFlowchart-svg/node/node.component.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/directives/textarea/autogrow.directive.ts","webpack:///./src/app/shared/directives/textarea/index.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-publish/view-publish.component.html","webpack:///./src/app/views/view-publish/view-publish.component.scss","webpack:///./src/app/views/view-publish/view-publish.component.ts","webpack:///./src/app/views/view-publish/view-publish.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\">\\r\\n        <as-split-area size=\\\"50\\\">\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"publish\\\"' (click)='updateView(\\\"publish\\\")'>Publish</button>\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"flowchart\\\"' (click)='updateView(\\\"flowchart\\\")'>Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new (create)='updateFile($event)'></file-new>\\r\\n                    <file-save [file]='file'></file-save>\\r\\n                    <file-load (loaded)='updateFile($event)'></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute [flowchart]='flowchart'></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Reset Flowchart to Default\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>Reset</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <ng-container #vc></ng-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area size=\\\"50\\\">\\r\\n            <!-- mViewer panel -->\\r\\n            <div class='content__panel' >\\r\\n                <mviewer [node]='flowchart.nodes[flowchart.meta.selected_nodes[0]]'></mviewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n\\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n  .container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n  .container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n  .container .container__header .tab button:hover {\\n      color: blue; }\\n  .container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n  .container .container__header .dropmenu {\\n      display: inline-flex; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n  ul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n  li.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n  li.link:hover {\\n  background-color: gray;\\n  color: white; }\\n  button.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n  button.btn:hover {\\n  color: blue; }\\n  .active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, ComponentFactoryResolver, ViewContainerRef, ViewChild, EventEmitter, HostListener } from '@angular/core';\r\nimport { ViewEditorComponent, ViewPublishComponent } from '@views';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IView } from '../mViewer/view.interface';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html', \r\n  styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent{\r\n\r\n  file: IMobius;\r\n  flowchart: IFlowchart; \r\n\r\n  @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n  private views = [];\r\n  private Viewers = {\r\n    \"editor\":ViewEditorComponent,   // src/views/editor/\r\n    \"publish\":ViewPublishComponent, // src/views/publish/\r\n    \"flowchart\":FlowchartComponent  // src/ngFlowchart-svg/\r\n                    };\r\n  activeView: string;\r\n\r\n  constructor(private dataService: DataService, private injector: Injector, private r: ComponentFactoryResolver){\r\n    this.file = dataService.file;\r\n    this.flowchart = dataService.flowchart;\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.activeView = \"flowchart\";\r\n    this.updateView(\"flowchart\");\r\n     \r\n  }\r\n\r\n\r\n  updateFile(event: string){\r\n    this.dataService.file = circularJSON.parse(event);\r\n    this.file = this.dataService.file;\r\n    this.flowchart = this.dataService.flowchart;\r\n    this.updateValue();\r\n  }\r\n\r\n  createView(view: string){\r\n    let component = this.Viewers[view];\r\n    let factory = this.r.resolveComponentFactory(component);\r\n    let componentRef = factory.create(this.injector);\r\n    if (view == \"flowchart\"){\r\n      componentRef.instance[\"data\"] = this.flowchart;\r\n      componentRef.instance[\"switch\"].subscribe(data => this.updateView(data))\r\n  } else if(view == \"editor\"){\r\n      componentRef.instance[\"flowchart\"] = this.flowchart;\r\n      componentRef.instance[\"node\"] = this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];\r\n    } else if(view == \"publish\"){\r\n      componentRef.instance[\"flowchart\"] = this.flowchart;\r\n    }\r\n    return componentRef;\r\n  }\r\n\r\n  updateView(view: string): void{\r\n    this.activeView = view;\r\n\r\n    if( this.views[ view ] == undefined){\r\n        this.views[ view ] = this.createView(view);\r\n    } else this.updateValue();\r\n\r\n    this.vc.detach();\r\n    this.vc.insert( this.views[ view ].hostView );\r\n  }\r\n\r\n  updateValue(){\r\n    for (let view in this.Viewers){\r\n      if (!this.views[view]) continue;\r\n      let componentRef =  this.views[ view ]; \r\n      if (view == \"flowchart\"){\r\n        componentRef.instance[\"data\"] = this.flowchart;\r\n      } else if(view == \"editor\"){\r\n        componentRef.instance[\"flowchart\"] = this.flowchart;\r\n        componentRef.instance[\"node\"] = this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];\r\n      } else if(view == \"publish\"){\r\n        componentRef.instance[\"flowchart\"] = this.flowchart;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\n//import { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ViewEditorModule } from '@views';\r\nimport { ViewEditorComponent } from '@views';\r\nimport { ViewPublishModule } from '@views';\r\nimport { ViewPublishComponent } from '@views';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { DataService } from '@services';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\nimport { MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule, \r\n    //FormsModule,\r\n    //AppRoutingModule,\r\n    //CoreModule,\r\n    ViewEditorModule,\r\n    ViewPublishModule,\r\n    SharedModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n  ],\r\n  entryComponents: [ \r\n    ViewEditorComponent,\r\n    ViewPublishComponent,\r\n    FlowchartComponent,\r\n  ],\r\n  providers: [ DataService ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\n\r\nexport class AppModule {\r\n    constructor () { }\r\n}\r\n\r\n","export const _parameterTypes = {\r\n    constList: \"__constList__\",\r\n    model: \"__model__\",\r\n    input: \"__input__\"\r\n};\r\n","export module Console{\r\n    export function log(val: any): void{\r\n        \r\n        console.log('============================\\nConsole Log:\\n',val)\r\n    }\r\n}","export * from './model';\r\nexport * from './input';\r\nexport * from './output';\r\nexport * from './query';\r\nexport * from './console';\r\nexport * from './_parameterTypes';","export module Input{\r\n    export function declare_constant(__constList__: JSON, const_name: string, __input__: any): void{\r\n        __constList__[const_name] = __input__;\r\n    }\r\n}","export module Model{\r\n    export function set(__model__: any[], var_value: any): number[]{\r\n        for (let i = 0; i < __model__.length; i++){\r\n            if (__model__[i][\"value\"] == var_value){\r\n                return [i]\r\n            }\r\n        }\r\n        var obj = {  \r\n            \"value\": var_value,\r\n            \"properties\":{}\r\n         };\r\n        __model__.push(obj);\r\n        return [__model__.length-1];\r\n    }\r\n\r\n    export function get(__model__: JSON[], indices: number[]): any{\r\n        let result = [];\r\n        \r\n        for (let i of indices){\r\n            if (i > __model__.length || i < 0){\r\n                continue\r\n            }\r\n            result.push(__model__[i]);\r\n        }\r\n        return result\r\n    }\r\n\r\n    export function remove(__model__: JSON[], indices: number[]): void{\r\n        indices.sort((a,b)=>{return b-a})\r\n        indices.map((index)=>{\r\n            if (index > __model__.length) {\r\n                return;\r\n            } \r\n            __model__.splice(index,1);\r\n        });\r\n    }\r\n\r\n}","export module Output{\r\n    export function return_value(__model__: any[], index: number): any{\r\n        if (index > __model__.length) return __model__;\r\n        return __model__[index].value;\r\n    }\r\n}","export module Query{\r\n    export function set(__model__: any[], indices: number[], statement: string): void{\r\n        let properties: any = statement.split('&');\r\n        properties = properties.map(prop => {\r\n            let property = prop.trim().substring(1).split('=');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n            return property\r\n        });\r\n        for (let index of indices){\r\n            if (index > __model__.length) {\r\n                return\r\n            } \r\n            for (let property of properties){\r\n                __model__[index][\"properties\"][property[0]] = property[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    export function get(__model__: JSON[], statement: string): any{\r\n        let property: any = statement.substring(1);\r\n        if (property.indexOf('==') != -1){\r\n            property = property.split('==');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] == property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        } else if (property.indexOf('!=') != -1) {\r\n            property = property.split('!=');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] != property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        /*\r\n        } else if (property.indexOf('>=') != -1) {\r\n            property = property.split('>=');\r\n            property[1] =  property[1].substring(1,property[1].length-1)\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] >= property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        } else if (property.indexOf('<=') != -1) {\r\n            property = property.split('<=');\r\n            property[1] =  property[1].substring(1,property[1].length-1)\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] <= property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        */\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node'; \r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  private static _data: IMobius = {\r\n    name: \"default_file\",\r\n    author: \"new_user\", \r\n    last_updated: new Date(),\r\n    version: 1,\r\n    flowchart: FlowchartUtils.newflowchart()\r\n  }; \r\n\r\n  private static _selected: number = 0;\r\n\r\n    get file(){ return DataService._data; }\r\n    set file(data: IMobius){ \r\n        DataService._data = <IMobius>{\r\n            name: data.name, \r\n            author: data.author, \r\n            flowchart: data.flowchart, \r\n            last_updated: data.last_updated, \r\n            version: data.version\r\n        };\r\n    }\r\n\r\n    get flowchart(): IFlowchart{ return DataService._data.flowchart; }\r\n    get node(): INode{ return DataService._data.flowchart.nodes[DataService._selected] };\r\n}","export * from './data.service';\r\nexport * from './viewer.service';","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}","module.exports = \"<div class='viewer-container'>  \\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"tab\\\">\\r\\n            <button class='btn-tab' \\r\\n            [class.active]='view.name == activeView.name'\\r\\n            *ngFor='let view of Viewers;' \\r\\n            (click)='updateView(view)'>\\r\\n            {{view.name}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-container #vc></ng-container>\\r\\n</div>\"","module.exports = \".viewer-container {\\n  height: 100%; }\\n\\n.container__header {\\n  flex: 0 1 auto;\\n  min-height: 35px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 0px 0px 0px 15px;\\n  background-color: #ccc;\\n  border-bottom: 3px solid #eeeeee;\\n  line-height: 35px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  text-align: center; }\\n\\nbutton.btn {\\n  margin: 10px;\\n  font-size: 14px;\\n  line-height: 18px;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  padding: 2px 10px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n/* tab styling */\\n\\n.tab {\\n  border: 2px;\\n  overflow: hidden;\\n  background-color: #ccc; }\\n\\n.tab button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: inherit;\\n  color: #505050;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 8px 10px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n.tab button:hover {\\n  color: blue; }\\n\\n.tab button.active {\\n  background-color: #ccc;\\n  color: #000096;\\n  font-weight: 600;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, Input, \r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IView } from './view.interface';\r\nimport { Viewers } from './viewers.config';\r\n\r\n@Component({\r\n    selector: 'mviewer',\r\n    templateUrl:  'mobius-viewer.component.html',    \r\n    styleUrls: ['mobius-viewer.component.scss']\r\n})\r\nexport class ViewerContainerComponent implements OnDestroy {\r\n\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() node: INode;\r\n\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver) {}\r\n\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n\r\n    ngOnInit(){\r\n        this.activeView = this.Viewers[0];\r\n        this.updateView( this.activeView );\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        console.log('onDestroy')\r\n        for (let view of this.views){\r\n            view.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(){\r\n        this.updateValue();\r\n    }\r\n\r\n    createView(view: IView){\r\n        let component = view.component;\r\n        let factory = this.r.resolveComponentFactory(component);\r\n        let componentRef = factory.create(this.injector);\r\n        componentRef.instance[\"node\"] = this.node;\r\n        return componentRef;\r\n    }\r\n\r\n    updateView(view: IView): void{\r\n        this.activeView = view;\r\n\r\n        if( this.views[ this.activeView.name ] == undefined){\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        }\r\n\r\n        this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n\r\n    updateValue(){\r\n        try{\r\n            let componentRef =  this.views[ this.activeView.name ]; \r\n            componentRef.instance[\"node\"] = this.node;\r\n        }\r\n        catch(ex){\r\n            console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ViewerContainerComponent } from './mobius-viewer.component';\r\nimport { VIEWER_ARR } from './viewers.config';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewerContainerComponent,\r\n    ...VIEWER_ARR\r\n  ],\r\n  exports: [ ViewerContainerComponent ],\r\n  imports: [ CommonModule, FormsModule ],\r\n  entryComponents: [ ...VIEWER_ARR ],\r\n  providers: [ ]\r\n})\r\nexport class MobiusViewerModule {\r\n    constructor () { }\r\n}\r\n","import { IView } from './view.interface'; \r\n// Step-1: Add new ViewerComponet here\r\nimport { TextViewerComponent } from './viewers';\r\nimport { ConsoleViewerComponent } from './viewers/console-viewer.component';\r\n\r\nexport const VIEWER_ARR = [\r\n    TextViewerComponent, \r\n    ConsoleViewerComponent, \r\n    //JSONViewerComponent, \r\n    //ThreeViewerComponent\r\n    // Step-2: Add Component here\r\n];\r\n\r\nexport const Viewers: IView[] = [\r\n    { name: 'Summary', icon: undefined, component: TextViewerComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    // { name: 'json-viewer', icon: undefined, component: JSONViewerComponent },\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    // { name: 'three-viewer', icon: undefined, component: ThreeViewerComponent }\r\n];\r\n\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'console-viewer',\r\n  template: `<h3></h3>\r\n             <div>{{ consoleText || \"\" }}</div>`,\r\n  styles: []\r\n})\r\nexport class ConsoleViewerComponent{\r\n    @Input() node; \r\n    consoleText: string;\r\n    constructor(){ \r\n      console.log(`Console Viewer Created`); \r\n      this.consoleText = console.log.bind(console);\r\n  }\r\n}","export * from './viewer-text.component';\r\n//export * from './template.component';\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'text-viewer',\r\n  template: `<br><div>{{ output || \"no-value\" }}</div>`,\r\n  styles: []\r\n})\r\nexport class TextViewerComponent{\r\n    @Input() node; \r\n    output : string;\r\n\r\n    constructor(){ \r\n      console.log(`Text Viewer Created`); \r\n    }\r\n\r\n   ngOnInit() {\r\n    if (! this.node) {\r\n      this.output = \"no-value\";\r\n    } else if (typeof this.node.output.value === 'number' || this.node.output.value === undefined){\r\n      this.output = this.node.output.value;\r\n    } else if (typeof this.node.output.value === 'string'){\r\n      this.output = '\"' + this.node.output.value + '\"';\r\n    } else if (this.node.output.value.constructor === [].constructor){\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else {\r\n      console.log('Unknown output type:', this.node.output.value);\r\n      this.output = this.node.output.value;\r\n    }\r\n  \r\n\t}\r\n\r\n\r\n\tngDoCheck(){\r\n    if (! this.node) {\r\n      this.output = \"no-value\";\r\n    } else if (typeof this.node.output.value === 'number' || this.node.output.value === undefined){\r\n      this.output = this.node.output.value;\r\n    } else if (typeof this.node.output.value === 'string'){\r\n      this.output = '\"' + this.node.output.value + '\"';\r\n    } else if (this.node.output.value.constructor === [].constructor){\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else {\r\n      console.log('Unknown output type:', this.node.output.value);\r\n      this.output = this.node.output.value;\r\n    }\r\n\t}\r\n\r\n\r\n\r\n}","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 9) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 29) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 24)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 29) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 10)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styles: [`\r\n    .edge{\r\n        fill: none;\r\n        stroke: rgb(80, 80, 80);\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        stroke-width: 2px;\r\n        opacity: 1;\r\n        pointer-events: stroke;\r\n        marker-end: url(#arrow);\r\n    }  \r\n    .inviEdge{\r\n        fill: none;\r\n        stroke: gray;\r\n        stroke-width: 30px;\r\n        opacity: 0;\r\n        pointer-events: stroke;\r\n    }  \r\n    .selected{\r\n        stroke: rgb(0, 0, 150);\r\n        opacity: 1;\r\n        marker-end: url(#arrow_selected);\r\n\r\n    }\r\n  `]\r\n})\r\nexport class EdgeComponent{\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event){\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if(this.edge.selected){\r\n            this.selected.emit(event.ctrlKey);        \r\n        } else {\r\n            if (event.ctrlKey) this.selected.emit('ctrl');\r\n            else this.selected.emit('single');\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge(){ \r\n        this.delete.emit()\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id = 'flowchart-main-container' class='container'>\\r\\n\\r\\n      <!-- svg component -->\\r\\n      <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" viewBox=\\\"0 0 1500 1500\\\" \\r\\n      (mousedown)='panStart($event)'\\r\\n      (mousemove)='handleMouseMove($event)'  \\r\\n      (mouseup)='handleMouseUp($event)'\\r\\n      (mouseenter)='activateKeyEvent()'\\r\\n      (mouseleave)='deactivateKeyEvent()'\\r\\n      (wheel)='scale($event)'\\r\\n      >\\r\\n            <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n            <defs>\\r\\n                  <!-- grid pattern -->\\r\\n                  <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                    <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n                  </pattern>\\r\\n                  <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                    <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n                    <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n                  </pattern>\\r\\n\\r\\n                  <!-- arrow head -->\\r\\n                  <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                    <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(80, 80, 80)\\\" fill=\\\"transparent\\\" />\\r\\n                  </marker>\\r\\n                  <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                        <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(0, 0, 150)\\\" fill=\\\"transparent\\\"  />\\r\\n                  </marker>\\r\\n            </defs>\\r\\n\\r\\n            <!-- svg frame-->\\r\\n            <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                          \\r\\n\\r\\n            <!-- wires => edge.component -->\\r\\n            <g edge *ngFor=\\\"let edge of data.edges; let edge_index = index\\\" \\r\\n            [edge]='edge'\\r\\n            [inputOffset]='inputOffset'\\r\\n            [outputOffset]='outputOffset'\\r\\n            (selected)='selectEdge($event, edge_index)'\\r\\n            />\\r\\n\\r\\n            <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n            <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n\\r\\n            <!-- nodes => node.component -->\\r\\n            <g node *ngFor=\\\"let node of data.nodes; let node_index = index\\\" \\r\\n            id='flw_node_{{node_index}}'\\r\\n            [node]='node' \\r\\n            [selected]='isSelected(node_index)'\\r\\n            [inputOffset]='inputOffset'\\r\\n            [outputOffset]='outputOffset'\\r\\n            (action)='nodeAction($event, node_index)'\\r\\n            />\\r\\n      </svg>\\r\\n\\r\\n      <!-- 3 top left buttons of the svg: add Node, delete Node and delete Wire -->\\r\\n      <div class='button-row'>\\r\\n            <button mat-icon-button disableRipple='true' (click)='addNode()' title=\\\"Add Node\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button disableRipple='true' (click)='deleteSelectedNodes()' title=\\\"Delete Selected Node\\\">\\r\\n            <mat-icon>remove</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button disableRipple='true' (click)='deleteSelectedEdges()' title=\\\"Delete Selected Wires\\\">\\r\\n            <mat-icon>link_off</mat-icon>\\r\\n            </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- focus on flowchart button on the top right of the svg -->\\r\\n      <button class='resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n            <mat-icon>control_camera</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".reset {\\n  margin: 0px;\\n  padding: 0px; }\\n\\n.default {\\n  font-size: 12px;\\n  color: #8AA8C0;\\n  line-height: 150px;\\n  text-align: center; }\\n\\n.viewer {\\n  /* \\twidth: 100%; \\r\\noverflow: auto;\\r\\n\\r\\npadding: 0px;\\r\\nmargin: 0px;\\r\\n\\r\\n.header{\\r\\n\\r\\n\\tdisplay: flex; \\r\\n\\tflex-direction: row; \\r\\n\\tjustify-content: space-between;\\r\\n\\r\\n\\tposition: relative;\\r\\n\\tfont-size: 14px; \\r\\n\\tfont-weight: 600; \\r\\n\\tline-height: $header-height;\\r\\n\\ttext-transform: uppercase;\\r\\n\\tletter-spacing: 1.5px;\\r\\n\\theight: $header-height;\\r\\n\\r\\n\\tcolor: #ADADAD;\\r\\n\\r\\n\\t.btn-group{\\r\\n\\t\\theight: $header-height; \\r\\n\\r\\n\\t\\tbutton{\\r\\n\\t\\t\\twidth: 0.9*$header-height; \\r\\n\\t\\t\\theight: 0.9*$header-height; \\r\\n\\t\\t\\tmargin: 0px;\\r\\n\\t\\t\\tborder: 1px solid #B4B1B1;\\r\\n\\t\\t\\tbox-shadow: none;\\r\\n\\r\\n\\t\\t\\t&:focus{\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\n.container{\\r\\n}\\r\\n\\r\\nbutton{\\r\\n\\t&:focus{\\r\\n\\t\\t\\r\\n\\t}\\r\\n} */ }\\n\\n.viewer .container {\\n    display: flex;\\n    flex-direction: row;\\n    height: 100%; }\\n\\n.viewer .container .sidebar {\\n      z-index: 100; }\\n\\n.viewer .container .view-container {\\n      box-sizing: border-box;\\n      height: 100%;\\n      width: 100%;\\n      padding-bottom: 30px;\\n      overflow: auto; }\\n\\n.container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.container .svgCanvas .temp-wire {\\n    stroke: #505050;\\n    stroke-width: 2px;\\n    stroke-dasharray: 10 15;\\n    opacity: 0.5; }\\n\\n.transform--container {\\n  position: absolute;\\n  width: 100%;\\n  transition: -webkit-transform 0.1s;\\n  transition: transform 0.1s;\\n  transition: transform 0.1s, -webkit-transform 0.1s; }\\n\\nsplit-area {\\n  overflow: auto !important; }\\n\\ninput {\\n  border: none; }\\n\\ninput:focus {\\n  border-bottom: 1px dashed gray; }\\n\\n#flowchart__name {\\n  margin: 0 auto;\\n  font-size: 14px;\\n  line-height: 28px;\\n  font-weight: bold;\\n  color: #8AA8C0; }\\n\\n.button-row {\\n  position: absolute;\\n  top: 0px;\\n  left: 10px; }\\n\\n.button-row button {\\n    color: #505050;\\n    width: 28px; }\\n\\n.resetViewer-button {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #505050; }\\n\\n.viewer {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  background-image: repeating-linear-gradient(0deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px), repeating-linear-gradient(-90deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px);\\n  background-size: 71px 71px;\\n  background-color: white;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  padding-bottom: 30px; }\\n\\n.viewer .container {\\n    position: absolute;\\n    height: 100%;\\n    overflow: hidden; }\\n\\n.viewer .container .disabled {\\n      color: #8AA8C0; }\\n\\n.viewer .container .disabled:hover {\\n        color: #8AA8C0 !important; }\\n\\n.viewer .container .sidebar {\\n      font-size: 12px;\\n      background-color: #F1F1F1;\\n      color: #395D73;\\n      white-space: nowrap;\\n      overflow-x: hidden !important; }\\n\\n.viewer .container .sidebar section {\\n        padding-left: 15px;\\n        padding-bottom: 5px;\\n        padding-top: 5px;\\n        border-bottom: 1px solid #8AA8C0; }\\n\\n.viewer .container .sidebar section div {\\n          cursor: pointer; }\\n\\n.viewer .container .sidebar section div:hover {\\n            color: #F0BFA0; }\\n\\n.viewer .content-wrapper {\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .info-container {\\n    padding: 0px 30px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; }\\n\\n.viewer .info-container .info {\\n      display: flex;\\n      flex-direction: column; }\\n\\n.viewer .info-container .info .label {\\n        font-size: 12px;\\n        font-weight: 100;\\n        color: #F07A79; }\\n\\n.viewer .info-container .info .value {\\n        color: #395D73;\\n        font-size: 11px;\\n        font-weight: 600; }\\n\\n.viewer .info-container .info .action {\\n        cursor: pointer;\\n        font-size: 11px;\\n        color: #8AA8C0; }\\n\\n.viewer .graph-container {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .graph-container #graph-edges {\\n      background-color: transparent;\\n      z-index: 1000; }\\n\\n.viewer .graph-container #graph-edges #temporary-edge .hidden {\\n        display: none; }\\n\\n.viewer .graph-container #graph-nodes {\\n      background-color: transparent;\\n      overflow: hidden;\\n      z-index: 1000; }\\n\\n.viewer .info-container {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n\\n.viewer .info-container .label, .viewer .info-container .value {\\n      margin-right: 5px;\\n      font-weight: normal !important; }\\n\\n.viewer .node-container {\\n    position: relative; }\\n\\n.viewer .node-container .node {\\n      position: absolute;\\n      -webkit-transform-origin: top left;\\n              transform-origin: top left;\\n      z-index: 3;\\n      margin: 0px;\\n      color: #395D73; }\\n\\n.viewer .node-container .node.hidden {\\n        display: none; }\\n\\n.viewer .node-container .node .btn-container {\\n        position: absolute;\\n        right: -30px;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        height: 100px; }\\n\\n.viewer .node-container .node .btn-container .btn-group {\\n          position: relative;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n          background: none; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button {\\n            position: relative;\\n            width: 25px;\\n            height: 24px;\\n            cursor: pointer;\\n            font-size: 9px;\\n            text-align: center; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button .material-icons {\\n              font-size: 18px;\\n              line-height: 24px;\\n              color: #8AA8C0; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover {\\n              color: white; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover .mat-icon {\\n                color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        position: relative;\\n        min-height: 30px;\\n        min-width: 70px;\\n        width: auto;\\n        border: 1px solid #395D73;\\n        background-color: rgba(255, 255, 255, 0.7);\\n        cursor: move; }\\n\\n.viewer .node-container .node .node-body.disabled {\\n          opacity: 0.4; }\\n\\n.viewer .node-container .node .node-body.selected {\\n          border-color: green; }\\n\\n.viewer .node-container .node .node-body.library {\\n          border-color: #395D73;\\n          border-style: solid; }\\n\\n.viewer .node-container .node .node-body.error {\\n          background-color: #E94858; }\\n\\n.viewer .node-container .node .node-body.function {\\n          background-color: yellow;\\n          border: 1px dashed green; }\\n\\n.viewer .node-container .node .node-body .node-name {\\n          font-family: sans-serif;\\n          font-size: 12px;\\n          border-bottom: 1px solid #395D73;\\n          text-align: center;\\n          background-color: #F1F1F1; }\\n\\n.viewer .node-container .node .node-body .node-name input {\\n            background-color: inherit;\\n            border: 0px;\\n            color: #395D73;\\n            text-align: center; }\\n\\n.viewer .node-container .node .node-body .node-name.selected {\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input {\\n              color: white;\\n              font-weight: bold; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input:focus {\\n                color: #395D73;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container {\\n          display: flex;\\n          flex-direction: column;\\n          margin-top: 10px;\\n          margin-bottom: 10px; }\\n\\n.viewer .node-container .node .node-body .port-container .divider {\\n            height: 2px;\\n            width: 100%;\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .port-container .port {\\n            display: flex;\\n            flex-direction: row;\\n            margin: 5px 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.hidden {\\n              display: none; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip {\\n              width: 15px;\\n              height: 15px;\\n              border-radius: 50%;\\n              background-color: #F1F1F1;\\n              border: 1px solid #395D73;\\n              cursor: pointer; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.isFunction {\\n                border-style: dashed;\\n                background-color: gray;\\n                border-radius: 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.selected {\\n                border: 2px solid #8AA8C0;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip:hover {\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name {\\n              font-size: 12px;\\n              margin: 0px 5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name.isFunction {\\n                color: black;\\n                font-size: 9.6px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.input {\\n              justify-content: flex-start;\\n              margin-left: -7.5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.output {\\n              justify-content: flex-end;\\n              margin-right: -7.5px; }\\n\\n.viewer .node-container .node:active {\\n        cursor: none; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n// todo: make internal to flowchart\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent, Observable, Subscriber  } from 'rxjs';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n@Component({\r\n  selector: 'flowchart',\r\n  templateUrl: './flowchart.component.html',\r\n  styleUrls: ['./flowchart.component.scss']\r\n})\r\nexport class FlowchartComponent{\r\n\r\n  @Input() data: IFlowchart;\r\n  @Output() switch = new EventEmitter(); \r\n\r\n  // general variable for mouse events\r\n  private isDown: number;\r\n  private startCoords = [];\r\n  private canvas: any\r\n  private element: any;\r\n\r\n  // variable for flowchart zooming\r\n  private mousePos =[0,0];\r\n  private zoom: number = 1;\r\n\r\n  // variable for edge\r\n  private edge: IEdge  = { source: undefined, target: undefined, selected: false };\r\n  private selectedEdge = [];\r\n  private startType: string;\r\n\r\n  // variable for copied node\r\n  private copied: string;\r\n  private copySub: any;\r\n  private pasteSub: any;\r\n  private keydownSub: any;\r\n\r\n  // listener for events, only activated when the mouse is hovering over the svg component\r\n  private keydownListener = fromEvent(document, 'keydown');\r\n  private copyListener = fromEvent(document, 'copy');\r\n  private pasteListener = fromEvent(document, 'paste');\r\n\r\n  // position of the current canvas view relative to the full svg canvas\r\n  private offset;\r\n  \r\n  // constants for offset positions of input/output port relative to the node's position\r\n  inputOffset = [50, -8];\r\n  outputOffset = [50, 88];\r\n\r\n  ngOnInit(){ \r\n    this.canvas = <HTMLElement>document.getElementById(\"svg-canvas\");\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n    this.offset = [bRect.left, bRect.top]\r\n  }\r\n\r\n  /*\r\n  handle event received from node component\r\n  */\r\n  nodeAction(event, node_index): void{\r\n\r\n    switch(event.action){\r\n\r\n      // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n      case ACTIONS.PROCEDURE:\r\n        this.switch.emit(\"editor\");\r\n        this.deactivateKeyEvent();\r\n        break;\r\n\r\n      // select a node\r\n      case ACTIONS.SELECT:\r\n        this.data.meta.selected_nodes = [ node_index ];  \r\n        break;\r\n\r\n      // initiate dragging node\r\n      case ACTIONS.DRAGNODE:\r\n        this.element = this.data.nodes[node_index];\r\n        var pt = this.canvas.createSVGPoint();\r\n\r\n        // get current mouse position in the page\r\n        pt.x = event.data.pageX;\r\n        pt.y = event.data.pageY;\r\n\r\n        // convert mouse position to svg position (special procedure for firefox)\r\n        let svgP: any;\r\n        var isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox){\r\n          let ctm = this.canvas.getScreenCTM()\r\n          let bRect = this.canvas.getBoundingClientRect()\r\n          ctm.a = ctm.a * this.zoom\r\n          ctm.d = ctm.d * this.zoom\r\n          ctm.e = bRect.x\r\n          ctm.f = bRect.y\r\n          svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n          svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n  \r\n        // save the svg position as startCoords\r\n        this.startCoords = [\r\n          svgP.x,\r\n          svgP.y\r\n        ];\r\n        if (this.startCoords[0] == NaN){\r\n          this.startCoords = [0,0];\r\n        }\r\n\r\n        // mark the dragging mode as dragNode\r\n        this.isDown = 2;\r\n        break;\r\n\r\n      // initiate dragging input/output port\r\n      case ACTIONS.DRAGPORT:\r\n        // create a new edge\r\n        this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n        // assign the port to the edge's input/output accordingly\r\n        if (event.type == 'input'){\r\n          this.edge.target = event.data;\r\n        } else {\r\n          this.edge.source = event.data;\r\n        }\r\n        this.startType = event.type;\r\n\r\n        // modify the temporary-edge's coordinate\r\n        this.element = <HTMLElement>document.getElementById(\"temporary-wire\");\r\n        this.element.setAttribute('x1', event.position[0]);\r\n        this.element.setAttribute('y1', event.position[1]);\r\n        this.element.setAttribute('x2', event.position[0]);\r\n        this.element.setAttribute('y2', event.position[1]);\r\n        this.isDown = 3;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // check if the node at node_index is selected \r\n  isSelected(node_index: number): boolean{\r\n    return this.data.meta.selected_nodes.indexOf(node_index) > -1;\r\n  }\r\n\r\n  // add a new node\r\n  addNode(): void{  \r\n\r\n    // create a new node\r\n    var newNode = NodeUtils.getNewNode();\r\n\r\n    // the new node's position would be (20,100) relative to the current view\r\n    var pt = this.canvas.createSVGPoint();\r\n\r\n    pt.x = 20;\r\n    pt.y = 100;\r\n\r\n    // convert the position to svg position\r\n    let svgP: any;\r\n    var isFirefox = typeof InstallTrigger !== 'undefined';\r\n    if (isFirefox){\r\n      let ctm = this.canvas.getScreenCTM()\r\n      let bRect = this.canvas.getBoundingClientRect()\r\n      ctm.a = ctm.a * this.zoom\r\n      ctm.d = ctm.d * this.zoom\r\n      ctm.e = bRect.x\r\n      ctm.f = bRect.y\r\n      svgP = pt.matrixTransform(ctm.inverse());\r\n    } else {\r\n      svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n    }\r\n\r\n    // assign the position to the new node and add it to the flowchart\r\n    newNode.position.x = svgP.x\r\n    newNode.position.y = svgP.y\r\n    this.data.nodes.push(newNode); \r\n  }\r\n\r\n  // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n  activateKeyEvent(): void{\r\n\r\n    // copy: copy node\r\n    this.copySub = this.copyListener.subscribe(val => {\r\n      const node = this.data.nodes[this.data.meta.selected_nodes[0]];\r\n      if (node.type != 'start' && node.type != 'end'){\r\n        console.log('copied node:', node);\r\n        let cp = circularJSON.parse(circularJSON.stringify(node));\r\n        this.copied = circularJSON.stringify(cp);\r\n      }\r\n    })\r\n\r\n    // paste: paste copied node\r\n    this.pasteSub = this.pasteListener.subscribe(val =>{\r\n      if (this.copied){\r\n        event.preventDefault();\r\n        let newNode = <INode>circularJSON.parse(this.copied);\r\n        var pt = this.canvas.createSVGPoint();\r\n        pt.x = 20;\r\n        pt.y = 100;\r\n\r\n        let svgP: any;\r\n        var isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox){\r\n          let ctm = this.canvas.getScreenCTM()\r\n          let bRect = this.canvas.getBoundingClientRect()\r\n          ctm.a = ctm.a * this.zoom\r\n          ctm.d = ctm.d * this.zoom\r\n          ctm.e = bRect.x\r\n          ctm.f = bRect.y\r\n          svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n          svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n        NodeUtils.updateNode(newNode, svgP);\r\n        this.data.nodes.push(newNode);\r\n        console.log('pasting node:', newNode);\r\n      }\r\n    })\r\n\r\n    // delete: delete selected edge(s)\r\n    this.keydownSub = this.keydownListener.subscribe(val =>{\r\n      if ((<KeyboardEvent> val).key == 'Delete'){\r\n        this.deleteSelectedEdges();\r\n      }\r\n    })\r\n  }\r\n\r\n  // deactivate the event listeners when the mouse exit the svg component\r\n  deactivateKeyEvent(): void{\r\n    this.copySub.unsubscribe();\r\n    this.pasteSub.unsubscribe();\r\n    this.keydownSub.unsubscribe();\r\n  }\r\n\r\n  // delete selected node\r\n  deleteSelectedNodes(){\r\n\r\n    // for each of the selected node\r\n    while (this.data.meta.selected_nodes.length > 0){\r\n      let node_index = this.data.meta.selected_nodes.pop();\r\n      let node = this.data.nodes[node_index];\r\n\r\n      // continue if the node is a start/end node\r\n      if (node.type == \"start\" || node.type == \"end\") continue;\r\n      var edge_index = 0;\r\n\r\n      // delete all the edges connected to the node\r\n      while (edge_index < this.data.edges.length){\r\n        let tbrEdge = this.data.edges[edge_index];\r\n        if (tbrEdge.target.parentNode == node || tbrEdge.source.parentNode == node){\r\n          this.deleteEdge(edge_index)\r\n          continue;\r\n        }\r\n        edge_index += 1;\r\n      }\r\n\r\n      // remove the node from the flowchart\r\n      this.data.nodes.splice(Number(node_index),1)\r\n    }\r\n  }\r\n\r\n  // delete an edge with a known index\r\n  deleteEdge(edge_index){\r\n    let tbrEdge = this.data.edges[edge_index];\r\n\r\n    // remove the edge from the target node's list of edges\r\n    for (let i in this.data.edges){\r\n      if (tbrEdge.target.edges[i] == tbrEdge){\r\n        tbrEdge.target.edges.splice(Number(i), 1); \r\n        break;\r\n      }\r\n    }\r\n\r\n    // remove the edge from the source node's list of edges\r\n    for (let i in tbrEdge.source.edges){\r\n      if (tbrEdge.source.edges[i] == tbrEdge){\r\n        tbrEdge.source.edges.splice(Number(i), 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // remove the edge from the general list of edges\r\n    this.data.edges.splice(edge_index, 1); \r\n    this.data.ordered = false\r\n  }\r\n\r\n\r\n  // delete all the selected edges\r\n  deleteSelectedEdges(){\r\n    this.selectedEdge.sort().reverse();\r\n    for (let edge_index of this.selectedEdge){\r\n      this.deleteEdge(edge_index)\r\n    }\r\n    this.selectedEdge = [];\r\n  }\r\n\r\n  // select an edge\r\n  selectEdge(event, edge_index){\r\n\r\n    // if ctrl is pressed, add the edge into the list of selected edges\r\n    if (event == 'ctrl'){\r\n      this.selectedEdge.push(edge_index);\r\n      this.data.edges[edge_index].selected = true;\r\n    } \r\n\r\n    else if (event == 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n      if (this.selectedEdge.length > 0){\r\n        for (let e of this.selectedEdge) this.data.edges[e].selected = false;\r\n      }\r\n      this.selectedEdge = [edge_index];\r\n      this.data.edges[edge_index].selected = true;\r\n    } \r\n    else {\r\n      this.data.edges[edge_index].selected = false;\r\n      for (let i = 0; i < this.selectedEdge.length; i ++) if (this.selectedEdge[i] == edge_index) {\r\n        this.selectedEdge.splice(i,1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // focus view onto the flowchart\r\n  focusFlowchart(): void{\r\n    // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n    let frame = [this.data.nodes[0].position.x, this.data.nodes[0].position.y, \r\n                this.data.nodes[0].position.x, this.data.nodes[0].position.y]\r\n    for (let node of this.data.nodes){\r\n      if (node.position.x < frame[0]){\r\n        frame[0] = node.position.x;\r\n      } else if (node.position.x > frame[2]){\r\n        frame[2] = node.position.x;\r\n      }\r\n      if (node.position.y < frame[1]){\r\n        frame[1] = node.position.y;\r\n      } else if (node.position.y > frame[3]){\r\n        frame[3] = node.position.y;\r\n      }\r\n    }\r\n    frame[2] += 100;\r\n    frame[3] += 80;\r\n    \r\n    // calculate the zoom to fit the whole flowchart\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n    let ctm = <SVGMatrix>this.canvas.getScreenCTM();\r\n    let zoom = bRect.width/(ctm.a * (frame[2] - frame[0]))\r\n    let heightZoom = bRect.height/(ctm.d * (frame[3] - frame[1]))\r\n    if (zoom > heightZoom) zoom = heightZoom;\r\n    if (zoom > 2.5) zoom = 2.5;\r\n\r\n    // calculate the difference between height and width, if height is bigger than width, centering the flowchart based on the difference\r\n    let height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;\r\n    if (height_width_diff > 0){\r\n      frame[0] -= height_width_diff\r\n    }\r\n\r\n    // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n    if (frame[0]<0) frame[0] = 0;\r\n    if (frame[1]<0) frame[1] = 0;\r\n\r\n    // transform\r\n    this.canvas.style.transition = 'transform 0ms ease-in';\r\n    this.canvas.style.transformOrigin = 'top left';\r\n    this.canvas.style.transform = `matrix(${zoom},0,0,${zoom},${-frame[0]*ctm.a*zoom/this.zoom},${-frame[1]*ctm.a*zoom/this.zoom})`;\r\n    this.zoom = zoom; \r\n  }\r\n\r\n\r\n  // scale view on mouse wheel\r\n  scale(event: WheelEvent): void{\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // calculate new zoom value\r\n    let scaleFactor: number = 0.1;\r\n    let value: number = this.zoom  - (Math.sign(event.deltaY))*scaleFactor;\r\n\r\n    // limit the zoom value to be between 1 and 2.5\r\n    if(value >= 1 && value <= 2.5){\r\n      value = Number( (value).toPrecision(5) )\r\n    } else {\r\n      return\r\n    }\r\n\r\n    // if new zoom is bigger than current zoom, update the mouse position to current position\r\n    if (value > this.zoom){\r\n      this.mousePos = [event.clientX - this.offset[0], event.clientY - this.offset[1]]\r\n    }\r\n\r\n    // find transformation matrix\r\n    var m = this.canvas.createSVGMatrix()\r\n    .translate(this.mousePos[0], this.mousePos[1])\r\n    .scale(value)\r\n    .translate(-this.mousePos[0], -this.mousePos[1]);\r\n    let transf = \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + m.e + \",\" + m.f + \")\"\r\n\r\n    // transform\r\n    this.canvas.style.transition = 'transform 50ms ease-in';\r\n    this.canvas.style.transformOrigin = `top left`;\r\n    this.canvas.style.transform = transf;\r\n    this.zoom = value;\r\n  }\r\n\r\n\r\n  // initiate dragging the view window\r\n  panStart(event:MouseEvent) {\r\n    event.preventDefault();\r\n\r\n    this.canvas.style.transition = 'transform 0ms linear';\r\n    this.canvas.style.transformOrigin = `top left`;\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n\r\n    // set start coords to current view window position\r\n    this.startCoords = [\r\n      event.clientX - (bRect.left - this.offset[0]),\r\n      event.clientY - (bRect.top - this.offset[1])\r\n    ];\r\n    // set drag mode to drag view\r\n    this.isDown = 1;\r\n  }\r\n\r\n  // handle mouse move for dragging view/node/port\r\n  handleMouseMove(event:MouseEvent){\r\n    // return if no dragging initiated\r\n    if (!this.isDown) {\r\n      return;\r\n\r\n    // if drag view\r\n    } else if(this.isDown == 1){\r\n      event.preventDefault();\r\n      let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n      var x = Number(event.clientX - this.startCoords[0]);\r\n      var y = Number(event.clientY - this.startCoords[1]);\r\n      let boundingDiv = <DOMRect>document.getElementById(\"flowchart-main-container\").getBoundingClientRect();\r\n      if (x > 0 || bRect.width < boundingDiv.width){\r\n        x = 0\r\n      } else if (boundingDiv.width - x > bRect.width){\r\n        x = boundingDiv.width - bRect.width\r\n      }\r\n      if (y > 0 || bRect.height < boundingDiv.height){\r\n        y = 0\r\n      } else if (boundingDiv.height - y > bRect.height){\r\n        y = boundingDiv.height - bRect.height\r\n      }\r\n      this.canvas.style.transform = \"matrix(\" + this.zoom + \",0,0,\"+ this.zoom+\",\"+ x+\",\"+y+\")\";\r\n\r\n    // if drag node\r\n    } else if(this.isDown == 2){\r\n\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n\r\n      let svgP: any;\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        svgP = pt.matrixTransform(ctm.inverse());\r\n      } else {\r\n        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n      }\r\n\r\n      const xDiff = this.startCoords[0] - svgP.x;\r\n      const yDiff = this.startCoords[1] - svgP.y;\r\n      this.startCoords[0] = svgP.x;\r\n      this.startCoords[1] = svgP.y;\r\n\r\n      this.element.position.x -= xDiff;\r\n      this.element.position.y -= yDiff;\r\n\r\n  // if drag port\r\n  } else if (this.isDown == 3){\r\n      event.preventDefault();\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n\r\n\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        const svgP = pt.matrixTransform(ctm.inverse());\r\n        this.element.setAttribute('x2', svgP.x);\r\n        this.element.setAttribute('y2', svgP.y);\r\n\r\n      } else {\r\n        const svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        this.element.setAttribute('x2', svgP.x);\r\n        this.element.setAttribute('y2', svgP.y);\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  handleMouseUp(event){\r\n    this.element = undefined;\r\n    // drop port --> create new edge if drop position is within 15px of an input/output port\r\n    if (this.isDown == 3){\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n      let svgP: any;\r\n\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        svgP = pt.matrixTransform(ctm.inverse());\r\n      } else {\r\n        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n      }\r\n\r\n      // reset temporary edge position to <(0,0),(0,0)>\r\n      let tempLine = <HTMLElement>document.getElementById(\"temporary-wire\");\r\n      tempLine.setAttribute('x1', '0');\r\n      tempLine.setAttribute('y1', '0');\r\n      tempLine.setAttribute('x2', '0');\r\n      tempLine.setAttribute('y2', '0');\r\n\r\n      // go through all of the nodes' input/output ports\r\n      for (let n of this.data.nodes){\r\n        var pPos;\r\n\r\n        // find the node's corresponding port and its position\r\n        if (this.startType == 'input'){\r\n          if (this.edge.target.parentNode == n || n.type == 'end') continue;\r\n          this.edge.source = n.output;\r\n\r\n          pPos = [n.position.x+this.outputOffset[0], n.position.y+this.outputOffset[1]];\r\n        } else {\r\n          if (this.edge.source.parentNode == n || n.type == 'start') continue;\r\n          this.edge.target = n.input;\r\n\r\n          pPos = [n.position.x+this.inputOffset[0], n.position.y+this.inputOffset[1]];\r\n        }\r\n\r\n        // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n        if (Math.abs(pPos[0]-svgP.x) > 25 || Math.abs(pPos[1]-svgP.y) > 25 ) continue;\r\n\r\n        // if there is already an existing edge with the same source and target as the new edge, return\r\n        for (let edge of this.data.edges){\r\n          if (edge.target == this.edge.target && edge.source == this.edge.source){\r\n            this.isDown = 0;\r\n            return;\r\n          }\r\n        }\r\n        this.edge.target.edges.push(this.edge);\r\n        this.edge.source.edges.push(this.edge);\r\n        this.data.edges.push(this.edge);\r\n        this.data.ordered = false;  \r\n        break;\r\n      }\r\n    }\r\n    this.isDown = 0;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\nimport { FlowchartComponent } from './flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FlowchartComponent, \r\n    NodeComponent, \r\n    EdgeComponent,\r\n  ],\r\n  exports: [ FlowchartComponent ],\r\n  imports: [ CommonModule,\r\n             FormsModule, \r\n             MatIconModule,\r\n             MatButtonModule ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class SVGFlowchartModule {\r\n    constructor () { }\r\n}\r\n","export * from './flowchart.module';","export enum ACTIONS{\r\n    SELECT, \r\n    DELETE, \r\n    COPY, \r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}","module.exports = \"<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    (mousedown)='focusText($event)'>\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n<!-- circles as draggable input/output ports of the node -->\\r\\n<svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/>\\r\\n\\r\\n<svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/>\\r\\n\\r\\n\"","module.exports = \"/*\\r\\n$color-main: #2D4885;\\r\\n$color-accent: #50ABB9;\\r\\n$color-muted: #88D4DD;\\r\\n$color-text-accent: #DC772F;\\r\\n*/\\n.node {\\n  fill: #fafafa;\\n  stroke-width: 2px;\\n  stroke: #505050;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n.node.node--disabled {\\n    stroke: #505050;\\n    stroke-opacity: 0.5;\\n    fill-opacity: 0.5; }\\n.node.node--selected {\\n    stroke: #000096; }\\n.node.node--error {\\n    stroke: red; }\\n.textdiv {\\n  text-align: center;\\n  width: 94px; }\\n.foreignObject {\\n  width: 100;\\n  height: 80; }\\ntextarea {\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 14px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #505050; }\\ntextarea.selected {\\n    color: #000096; }\\n.textarea_startend {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #505050;\\n  height: 20px;\\n  pointer-events: none; }\\n.inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n.outputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions'\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent{\r\n    \r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0,0];    \r\n    isDown = false;\r\n    \r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position){ \r\n        this.node.position = position; \r\n    };\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event){\r\n        this.action.emit({ action: ACTIONS.SELECT });\r\n    };\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean{\r\n        return !(this.node.type == 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean{\r\n        return !(this.node.type == 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event:MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event:MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        var data: any;\r\n        if (portType == 'input'){\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    focus on the description of the node when mouse down inside the node\r\n    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged\r\n    */\r\n    focusText(event: MouseEvent){\r\n        document.getElementById(this.node.id).focus();\r\n    }\r\n    \r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event){\r\n        this.action.emit({action:ACTIONS.PROCEDURE})\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port'; \r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent{\r\n    \r\n    @Input() node: INode; \r\n    constructor(){}\r\n\r\n    addInput(): void{ \r\n      return\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);  \r\n      */\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent{\r\n    \r\n    @Input() flowchart: IFlowchart; \r\n    constructor(){}\r\n\r\n    addNode(): void{  this.flowchart.nodes.push(NodeUtils.getNewNode());}\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port'; \r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent{\r\n    \r\n    @Input() node: INode; \r\n    constructor(){}\r\n\r\n    addOutput(): void{  \r\n      return\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);  \r\n      */\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport * as Modules from '@modules';\r\n\r\n\r\n@Component({\r\n  selector: 'execute',\r\n  /*\r\n  template: `<button class=\"btn--execute\" \r\n                    (click)=\"execute()\">\r\n                Execute\r\n             </button>`,\r\n    */\r\n   template:`<button class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n    </button>\r\n    `,\r\n  styles: [ \r\n            `.btn--execute{ \r\n                display: inline-block;\r\n                vertical-align: middle;\r\n                font-size: 14px;\r\n                line-height: 18px;\r\n                border: 3px solid #E0C229;\r\n                border-radius: 4px;\r\n                padding: 1px 10px;\r\n                background-color: #E0C229; \r\n                color: #494D59;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n              }\r\n              .btn{\r\n                vertical-align: middle;\r\n                background-color: transparent; \r\n                border: none;\r\n                color: rgb(80,80,80);\r\n              }\r\n              .btn:hover{\r\n                color: blue;\r\n              }` \r\n          ]\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    private globalVars: string;\r\n\r\n    async execute() {\r\n        this.globalVars = '';\r\n        // reset input of all nodes except start\r\n        for (let node of this.flowchart.nodes){\r\n            if (node.type != 'start'){\r\n                if (node.input.edges){\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        // order the flowchart\r\n        if (!this.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        let funcStrings = {};\r\n        for (let func of this.flowchart.functions){\r\n            funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (let node of this.flowchart.nodes){\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            await this.executeNode(node, funcStrings);\r\n        }\r\n    }\r\n\r\n    async executeNode(node: INode, funcStrings){\r\n        let params = {\"currentProcedure\": ['']};\r\n        try{\r\n            // get the code for the node\r\n            var fnString = await CodeUtils.getNodeCode(node, true);\r\n\r\n            // add the constants from the start node\r\n            fnString = this.globalVars + fnString;\r\n            params[\"model\"] = node.input.value;\r\n\r\n            // add the imported functions code\r\n            var hasFunctions = false;\r\n            for (let funcName in funcStrings){\r\n                fnString = funcStrings[funcName] + fnString;\r\n                hasFunctions = true;\r\n            }\r\n            if (hasFunctions){\r\n                let mergeString = CodeUtils.mergeInputs.toString();\r\n                fnString = 'function mergeInputs' + mergeString.substring(9, mergeString.length) +'\\n\\n' + fnString;\r\n            }\r\n\r\n            console.log(`/*    ${node.name.toUpperCase()}    */\\n\\n`+fnString);\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n            let result = fn(Modules, params);\r\n            node.output.value = result;\r\n            if (node.type == 'start'){\r\n                for (let constant in params[\"constants\"]){\r\n                    this.globalVars += `const ${constant} = ${params[\"constants\"][constant]};\\n`;\r\n                }\r\n                this.globalVars += '\\n';\r\n            }\r\n        }\r\n        catch(ex){\r\n            node.hasError = true;\r\n            //console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            let prodWithError: string = params[\"currentProcedure\"][0]; \r\n            let markError = function(prod: IProcedure, id: string){\r\n                if(prod[\"ID\"] && id && prod[\"ID\"] == id){\r\n                    prod.hasError = true;\r\n                }\r\n                if(prod.hasOwnProperty('children')){\r\n                    prod.children.map(function(p){\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            }\r\n            if(prodWithError != ''){\r\n                node.procedure.map(function(prod: IProcedure){\r\n                    if(prod[\"ID\"] == prodWithError){\r\n                        prod.hasError = true;\r\n                    }\r\n                    if(prod.hasOwnProperty('children')){\r\n                        prod.children.map(function(p){\r\n                            markError(p, prodWithError);\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n            let error: Error;\r\n            if(ex.toString().indexOf(\"Unexpected identifier\") > -1){\r\n                error = new Error(\"Unexpected Identifier error. Did you declare everything? Check that your strings are enclosed in quotes (\\\")\");\r\n            }\r\n            else if(ex.toString().indexOf(\"Unexpected token\") > -1){\r\n                error = new Error(\"Unexpected token error. Check for stray spaces or reserved keywords?\");\r\n            }\r\n            else{\r\n                 error = new Error(ex);\r\n            }\r\n            throw error;\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class downloadUtils{\r\n    \r\n    static downloadFile(fileName: string, fileContent: Blob){\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" name=\"name\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [ \r\n            `            \r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent{\r\n\r\n    @Output() loaded = new EventEmitter();\r\n    \r\n    \r\n    sendloadfile(){\r\n        var selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        let stream = Observable.create(observer => {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                //if (typeof reader.result === 'string') {}\r\n                var f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: f.name,\r\n                    author: f.author, \r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version\r\n                }\r\n                observer.next(file);\r\n                observer.complete();\r\n                }\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.loaded.emit(circularJSON.stringify(loadeddata));\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = \"\";\r\n    }\r\n    \r\n\r\n    //   @ViewChild('fileInput') fileInput: ElementRef;\r\n    //   openPicker(): void{\r\n    //     let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\r\n    //     el.click();\r\n    //   }\r\n\r\n    //   loadFile(url ?:string): void{\r\n    //     let file = this.fileInput.nativeElement.files[0];\r\n    //     if (file) {\r\n    //         var reader = new FileReader();\r\n    //         reader.readAsText(file, \"UTF-8\");\r\n    //         let fs = this.flowchartService;\r\n    //         reader.onload = function (evt) {\r\n    //           let fileString: string = evt.target[\"result\"];\r\n    //           fs.loadFile(fileString);\r\n    //         }\r\n    //         reader.onerror = function (evt) {\r\n    //             console.log(\"Error reading file\");\r\n    //         }\r\n    //     }\r\n    // this.flowchartService.loadFile(url);\r\n}","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [ \r\n            `\r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent{\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private cdr: ChangeDetectorRef){}\r\n\r\n    sendNewFile(){\r\n        let confirmed = confirm(\"Resetting would delete the current flowchart. Would you like to continue?\");\r\n        if (!confirmed) return\r\n        const file: IMobius = {\r\n            name: \"default_file.mob\",\r\n            author: \"new_user\", \r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 1\r\n        }\r\n        this.create.emit(circularJSON.stringify(file));\r\n        this.cdr.detectChanges()\r\n    }\r\n}","import { Component, Input} from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { downloadUtils } from './download.utils'\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [ \r\n            `\r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent{\r\n\r\n    @Input() file: IMobius;\r\n\r\n\r\n    // todo: save file\r\n    download(){\r\n        if (!this.file.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.file.flowchart)\r\n        }\r\n        var savedfile = circularJSON.parse(circularJSON.stringify(this.file))\r\n        for (let node of savedfile.flowchart.nodes){\r\n            if (node.input.hasOwnProperty('value')){\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')){\r\n                node.output.value = undefined;\r\n            }\r\n            for (let prod of node.state.procedure){\r\n                prod.selected = false \r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function: \r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        for (let prod of savedfile.flowchart.nodes[0].procedure){\r\n            prod.args[prod.argCount-1].value = undefined;\r\n        }\r\n\r\n\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (let edge of savedfile.flowchart.edges){\r\n            edge.selected = false;\r\n        }\r\n        \r\n        savedfile.name = savedfile.flowchart.name;\r\n\r\n        const fileString = circularJSON.stringify(savedfile);\r\n        let fname: string = `${savedfile.flowchart.name.replace(/\\ /g,'_')}.mob`;\r\n        var blob = new Blob([fileString], {type: 'application/json'});\r\n        downloadUtils.downloadFile(fname, blob);\r\n\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  template:  `<div class='panel__header'> \r\n                    <h3>{{node?.name}} // {{title}}</h3>\r\n              </div>`,\r\n  styles: [ \r\n            `.panel__header{ \r\n                font-weight: 600;\r\n                border: 2px solid #222;\r\n                border-radius: 4px;\r\n                padding: 5px;\r\n             }\r\n             h3{\r\n                margin: 0px;\r\n             }`\r\n          ]\r\n})\r\nexport class HeaderComponent{\r\n\r\n    @Input() node: INode; \r\n    @Input() title: string;\r\n\r\n    constructor(){}\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;' \r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\" \r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent{\r\n\r\n    _links = [\r\n      { path: '/about', \r\n        name: 'about'\r\n      },\r\n      { path: '/gallery', \r\n        name: 'gallery'\r\n      },\r\n      { path: '/publish', \r\n        name: 'publish'\r\n      },\r\n      { path: '/editor', \r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router){ }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent{\r\n\r\n    constructor(){  }\r\n\r\n}\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n\\r\\n    <div class='parameter__name'>{{ port.name }}</div>\\r\\n\\r\\n    <!-- Slider, SimpleInput ... etc -->\\r\\n    <div class='parameter__mode' [ngSwitch]=\\\"port.meta.mode\\\">\\r\\n        \\r\\n        <!-- Simple Input Template -->\\r\\n        <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <!-- <input  placeholder='Enter Value: Defaults to {{port.default}}'> -->\\r\\n            <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n            <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </div>\\r\\n    \\r\\n        <!-- TODO1: SwitchCase for remaining PortTypes -->\\r\\n        <!-- TODO2: Connect values to port.value -->\\r\\n    \\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IPortInput, InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'input-port-viewer',\r\n  templateUrl: './input-port-viewer.component.html',\r\n  styleUrls: ['./input-port-viewer.component.scss']\r\n})\r\nexport class InputPortViewerComponent{\r\n\r\n    @Input() port: IPortInput;\r\n    PortTypes = InputType;\r\n    \r\n    constructor(){ }\r\n\r\n    onFileChange(event){\r\n      this.port.value = event.target.files[0];\r\n    }\r\n\r\n}","module.exports = \"<h2>{{flowchart.name}}</h2>\\r\\n<p>{{flowchart.description}}</p>\\r\\n<hr>\\r\\n\\r\\n<!-- <p>Edit the parameters of your flowchart here. These parameters are visible in the viewer when you share your flowchart.</p> -->\\r\\n<procedure-input-viewer *ngFor=\\\"let prod of startNode.procedure\\\" [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent{\r\n  @Input() flowchart: IFlowchart;\r\n  @Input() startNode: INode;\r\n  @Input() endNode: INode;\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' disabled>\\r\\n        <!--\\r\\n        <select name={{prod.id}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\">\\r\\n            <option \\r\\n                *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n                [value]=\\\"PortTypes[ptype]\\\" \\r\\n                [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n        </select>\\r\\n        -->\\r\\n        <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n            <!--\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n                <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n            </div>\\r\\n        \\r\\n            -->\\r\\n\\r\\n            <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n            placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n            size={{prod.args[prod.argCount-1].value?.length||prod.args[prod.argCount-1].default.length}}>\\r\\n            \\r\\n            <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <mat-slider\\r\\n                    [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                    thumbLabel\\r\\n                    tickInterval=\\\"auto\\\"\\r\\n                    min={{prod.args[prod.argCount-1].min||0}}\\r\\n                    max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' size={{prod.args[prod.argCount-1].value?.length||1}} disabled>\\r\\n\\r\\n\\r\\n                <!--\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' name='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                -->\\r\\n            </ng-container>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='Enter URL: Defaults to {{prod.args[prod.argCount-1].default}}'>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  margin: 5px 0px 0px 5px;\\n  width: 100%; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  bottom: 0px;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid #efefef;\\n  border-left: 1px solid #efefef;\\n  width: 100%; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\ninput {\\n  color: #505050;\\n  background-color: gainsboro;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.parameter__name {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 100px; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class procedureInputViewerComponent{\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n    \r\n    constructor(){ }\r\n\r\n    editOptions(): void{ }\r\n\r\n    onFileChange(event){\r\n      this.prod.args[this.prod.args.length -1] = event.target.files[0];\r\n    }\r\n\r\n}","export { ModuleAware } from \"./module-aware.decorator\";\r\nexport { ProcedureTypesAware } from \"./prodtypes-aware.decorator\";\r\nexport { ViewerTypesAware } from \"./viewertypes-aware.decorator\";\r\nexport { PortTypesAware } from \"./porttypes-aware.decorator\"; ","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    let fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n    \r\n    let result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).split(\",\")//.match( /([^\\s,]+)/g);\r\n    if(result === null || result[0]==\"\"){\r\n         result = [];\r\n    }\r\n    let final_result = result.map(function(r){ \r\n        r = r.trim();\r\n        let r_value = r.split(\"=\");\r\n\r\n        if (r_value.length == 1){\r\n            return { name: r_value[0].trim(), value: undefined, default: 0}\r\n        }\r\n        else{\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 }\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf(\"return\") === -1 || fnStr.indexOf(\"return;\") !== -1){\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\n\r\nexport function ModuleAware(constructor: Function) {\r\n    let module_list = [];\r\n    for( let m_name in Modules ){\r\n        if (m_name[0] == '_') continue;\r\n        \r\n        let modObj = <IModule>{};\r\n        modObj.module = m_name;\r\n        modObj.functions = [];\r\n        \r\n        for( let fn_name of Object.keys(Modules[m_name])){\r\n            \r\n            let func = Modules[m_name][fn_name];\r\n\r\n            let fnObj = <IFunction>{};\r\n            fnObj.module = m_name;\r\n            fnObj.name = fn_name;\r\n            fnObj.argCount = func.length;\r\n            let args = extract_params(func);\r\n            fnObj.args = args[0];\r\n            fnObj.hasReturn = args[1];\r\n            modObj.functions.push(fnObj);\r\n        }\r\n        module_list.push(modObj);\r\n    }\r\n\r\n    constructor.prototype.Modules = module_list;\r\n}","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}","export * from './mobfile-reader.directive'; ","/*\r\n *\tAdding this to an HTML5 input element\r\n *\tallows for the file being read to be converted into a Mobius \r\n *\tFlowchart\r\n * \r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n\tselector: \"[mbFileReader]\"\r\n})\r\nexport class MbFileReaderDirective { \r\n\r\n\t@Input() data: any = {};\r\n\t@Output() load = new EventEmitter();\r\n\r\n\tconstructor(private el: ElementRef){ }\r\n\r\n\t@HostListener(\"change\")\r\n\tonFileChange() {\r\n\t\tlet f = this.el.nativeElement.files[0];\r\n\t\tif (f) {\r\n\t\t    var reader = new FileReader();\r\n\t\t\t\treader.readAsText(f, \"UTF-8\");\r\n\t\t\t\tlet ins = this;\r\n\t\t    reader.onload = function (evt) {\r\n\t\t\t\t\t\tlet fileString: string = evt.target[\"result\"];\r\n\t\t        ins.load_flowchart_from_string(fileString);\r\n\t\t    }\r\n\t\t    reader.onerror = function (evt) {\r\n\t\t        console.log(\"Error reading file\");\r\n\t\t    }\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//\r\n\t// Input: string\r\n\t// Output: MobiusFile DS\r\n\t//  \r\n\t//\r\n\tprivate load_flowchart_from_string(fileString: string): void{\r\n\t  let _this = this;\r\n\t  let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n\t  let flowchart: any;// IFlowchart;\r\n\t  \r\n\t  try{\r\n\t\t\tlet data = CircularJSON.parse(fileString);\r\n\t\t\tthis.load.emit(data);\r\n\t\t\t// this.data.flowchart = data.flowchart; \r\n\t\t\t// this.data.modules = data.modules;\r\n\t\t\t// this.data.language = data.language;\r\n\r\n\t    // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n\t    //TODO: this.update_modules();\r\n\r\n\t    //flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n\t    // TODO: select a node\r\n\t  }\r\n\t  catch(err){\r\n\t    console.error(\"Mob-file-reader error\", err);\r\n\t  }\r\n\r\n\t}\r\n\r\n\r\n}","import { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n\tselector: \"[autogrow]\"\r\n})\r\nexport class autogrowDirective { \r\n\r\n    constructor(private el: ElementRef){ \r\n\t}\r\n    \r\n\t@HostListener(\"keyup\")\r\n\tonKeyUp() {\r\n        this.el.nativeElement.style.height = \"5px\";\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight)+\"px\";\r\n\t}\r\n\t\r\n\t@HostListener(\"keydown\")\r\n\tonKeyDown() {\r\n        this.el.nativeElement.style.height = \"5px\";\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight)+\"px\";\r\n\t}\r\n}","export * from './autogrow.directive';","import { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Input } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { IEdge } from '@models/edge';\r\nimport { _parameterTypes } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): string {\r\n        if(prod.enabled === false) return '';\r\n\r\n        prod.hasError = false;\r\n\r\n        const codeStr: string[] = [];\r\n        const args = prod.args;\r\n        const prefix = args.hasOwnProperty('0') && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        if (addProdArr && prod.type != ProcedureTypes.Else && prod.type != ProcedureTypes.Elseif){\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (args[0].value.indexOf('__params__') != -1 || args[1].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`${prefix}${args[0].value} = ${args[1].value};`);\r\n                if (prefix === 'let '){\r\n                    existingVars.push(args[0].value)\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`if (${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`else if(${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                //codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${args[1].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`while (${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n                \r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                const argValues = args.slice(1).map((arg)=>{\r\n                    // if __params__ is present in the value of the argument, throw unexpected identifier\r\n                    if (arg.name == _parameterTypes.input) { \r\n                        console.log(arg.value, arg.default);\r\n                        let val = arg.value || arg.default; return val; };\r\n                    if (arg.value && arg.value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                    if (arg.name == _parameterTypes.constList) return \"__params__.constants\";\r\n                    if (arg.name == _parameterTypes.model) return \"__params__.model\";\r\n                    if (arg.value && arg.value.substring(0,1) == '@') {\r\n                        if (prod.meta.module.toUpperCase() == 'QUERY' && prod.meta.name.toUpperCase() == 'SET' && arg.name.toUpperCase() == 'STATEMENT') \r\n                            return '\"'+arg.value.replace(/\"/g,\"'\")+'\"';\r\n                        return '__modules__.Query.get( __params__.model,\"'+arg.value.replace(/\"/g,\"'\")+'\" )';\r\n                    }\r\n                    //else if (arg.name.indexOf('__') != -1) return '\"'+args[args.indexOf(arg)+1].value+'\"';\r\n                    return arg.value;\r\n                }).join(',');\r\n                const fnCall: string = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() == 'OUTPUT'){\r\n                    codeStr.push(`return ${fnCall};`);\r\n                } else if (args[0].name == '__none__'){\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                    if (prefix === 'let '){\r\n                        existingVars.push(args[0].value)\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                //('args: ',args)\r\n                const argsVals = args.slice(1).map((arg)=>arg.value).join(',');\r\n                const fn: string = `${prod.meta.name}( ${argsVals} )`\r\n                codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                if (prefix === 'let '){\r\n                    existingVars.push(args[0].value)\r\n                }\r\n                break;\r\n\r\n        }\r\n        if(prod.print) {\r\n            codeStr.push(`console.log('${prod.args[0].value}:',${prod.args[0].value})`);\r\n        }\r\n        return codeStr.join('\\n');\r\n    }\r\n\r\n\r\n    static loadFile(f){\r\n        let stream = Observable.create(observer => {\r\n          let request = new XMLHttpRequest();\r\n          \r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const f = circularJSON.parse(request.responseText);\r\n                  observer.next(f);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n      \r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n        \r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any{\r\n        var result = [];\r\n        for (let model of models){\r\n            for (let j of model){\r\n                let existing = false;\r\n                for(let i of result){\r\n                    if (i.value == j.value){\r\n                        existing = true;\r\n                    }\r\n                }\r\n                if (!existing){\r\n                    result.push(j)\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static async getInputValue(inp: IPortInput, node: INode): Promise<string>{\r\n        var input: any;\r\n        if (node.type == 'start' || inp.edges.length == 0){\r\n            input = [];\r\n            /*\r\n            if (inp.meta.mode == InputType.URL){\r\n                const p = new Promise((resolve) => {\r\n                    let request = new XMLHttpRequest();\r\n                    request.open('GET', inp.value || inp.default);\r\n                    request.onload = () => {\r\n                        resolve(request.responseText);\r\n                    }\r\n                    request.send();\r\n                });\r\n                input = await p;\r\n            } else if (inp.meta.mode == InputType.File) {\r\n                const p = new Promise((resolve) => {\r\n                    let reader = new FileReader();\r\n                    reader.onload = function(){\r\n                        resolve(reader.result)\r\n                    }\r\n                    reader.readAsText(inp.value || inp.default)\r\n                });\r\n                input = await p;\r\n            } else {\r\n                input = inp.value || inp.default;\r\n            }\r\n            */\r\n        } else {\r\n            input = CodeUtils.mergeInputs(inp.edges.map(edge=>{ return edge.source.value}));\r\n            /*\r\n            if (typeof input === 'number' || input === undefined){\r\n                // do nothing\r\n            } else if (typeof input === 'string'){\r\n                input = '\"' + input + '\"';\r\n            } else if (input.constructor === [].constructor){\r\n                input = '[' + input + ']';\r\n            } else if (input.constructor === {}.constructor) {\r\n                input = JSON.stringify(input);\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static async getNodeCode(node: INode, addProdArr = false): Promise<string> {\r\n        node.hasError = false;\r\n        const codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr){\r\n            var input = await CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type =='start'){\r\n            codeStr.push('__params__.constants = {};\\n')\r\n        }\r\n        // procedure\r\n        for (let prod of node.procedure){\r\n            codeStr.push(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        };\r\n        if (node.type == 'end' && node.procedure.length > 0){\r\n            return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } \r\n        return `{\\n${codeStr.join('\\n')}\\nreturn __params__.model;\\n}`;\r\n        \r\n\r\n        //return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        //return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n    \r\n    static async getFunctionString(func: IFunction): Promise<string>{\r\n        let fullCode = '';\r\n        let fnCode = `function ${func.name}(${func.args.map(arg=>{return arg.name}).join(',')}){\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":{}};\\n`;\r\n        for (let node of func.module.nodes){\r\n            let code =  await CodeUtils.getNodeCode(node, false)\r\n            fullCode += `function ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')})` + code + `\\n\\n`;\r\n            if (node.type ==='start'){\r\n                //fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `__params__.model = JSON.parse(JSON.stringify(result_${node.input.edges[0].source.parentNode.id}));\\n`\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeInputs([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `__params__.model = merged;\\n`\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')});\\n`\r\n            }\r\n            /*\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `let result_${node.id} = ${node.id}(result_${node.input.edges[0].source.parentNode.id});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeResults([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(merged);\\n`\r\n\r\n\r\n            */\r\n            if (node.type === 'end'){\r\n                fnCode += `return result_${node.id};\\n`;\r\n            }\r\n            //fnCode += `console.log(result_${node.id});\\n`;\r\n        }\r\n        fnCode += '}\\n\\n'\r\n        fullCode += fnCode\r\n        //console.log(fullCode)\r\n        return fullCode\r\n    }\r\n\r\n}","export class ExecuteUtils{\r\n    \r\n}","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';","import { IFlowchart } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { NgModuleFactoryLoader } from '@angular/core';\r\n\r\nexport class FlowchartUtils{\r\n    \r\n    public static newflowchart(): IFlowchart{\r\n        const flw: IFlowchart = { \r\n            name: \"new_flowchart\",\r\n            description: '',\r\n            language: \"js\",\r\n            meta: {\r\n                selected_nodes: [0]\r\n            },\r\n            nodes: [  NodeUtils.getStartNode(), NodeUtils.getEndNode()  ],\r\n            edges: [],\r\n            functions: [],\r\n            ordered: false\r\n        }\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean){\r\n        if (node.hasExecuted){\r\n            return\r\n        } else if (node.type === 'start' ){\r\n            nodeOrder.push(node)\r\n        } else {\r\n            for (let edge of node.input.edges){\r\n                if (!edge.source.parentNode.hasExecuted){\r\n                    return\r\n                }\r\n            }\r\n            nodeOrder.push(node)\r\n        }\r\n        node.hasExecuted = true;\r\n        node.enabled = enabled\r\n        for (let edge of node.output.edges){\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart){\r\n        var startNode = undefined;\r\n        for (let node of flw.nodes){\r\n            if (node.type === 'start'){\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        var nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length){\r\n            for (let node of flw.nodes){\r\n                if (node.type != 'start' && node.input.edges.length == 0){\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart } from \"./flowchart.interface\";\r\nexport { FlowchartUtils } from \"./flowchart.utils\";","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { PortType, InputType, OutputType, PortUtils } from '@models/port';\r\nimport { not } from '@angular/compiler/src/output/output_ast';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { templateJitUrl } from '@angular/compiler';\r\n\r\nexport abstract class NodeUtils{\r\n\r\n    static getNewNode(): INode{\r\n        let node: INode = <INode>{\r\n            name: \"Node\", \r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0}, \r\n            enabled: true,\r\n            type: '',\r\n            procedure: [],\r\n            state: {\r\n                procedure: [], \r\n                input_port: undefined, \r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        }\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n        \r\n        return node;\r\n    };\r\n\r\n    static getStartNode(): INode{\r\n        let node = NodeUtils.getNewNode();\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        node.position= {x: 400, y: 0};\r\n        return node;\r\n    };\r\n\r\n    static getEndNode(): INode{\r\n        let node = NodeUtils.getNewNode();\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        node.position= {x: 400, y: 400};\r\n        return node;\r\n    };\r\n    \r\n\r\n    static deselect_procedure(node: INode){\r\n        for (let prod of node.state.procedure){\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeSelected(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]){\r\n        for (let pr of prods){\r\n            if (!pr.selected) {\r\n                if (pr.children) NodeUtils.rearrangeSelected(prodList, tempList, pr.children)\r\n                continue\r\n            };\r\n            var i = 0;\r\n            while (i < tempList.length){\r\n                if (tempList[i] === pr){\r\n                    prodList.push(pr)\r\n                    tempList.splice(i,1)\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) NodeUtils.rearrangeSelected(prodList, tempList, pr.children)\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean){\r\n        if (!procedure){\r\n            return\r\n        }\r\n        if (ctrl){\r\n            var selIndex = 0;\r\n            var selected = false;\r\n            while (selIndex < node.state.procedure.length){\r\n                if (node.state.procedure[selIndex] === procedure){\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1)\r\n                    procedure.selected = false;\r\n                    break\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected){\r\n                procedure.selected = true\r\n                node.state.procedure.push(procedure)\r\n                let tempArray = node.state.procedure.splice(0, node.state.procedure.length);\r\n                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure)\r\n                console.log(node.state.procedure)\r\n            }\r\n        } else {\r\n            let sel = procedure.selected\r\n            for (let prod of node.state.procedure){\r\n                prod.selected = false\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure){\r\n                node.state.procedure = []\r\n            } else {\r\n                node.state.procedure = [procedure]\r\n                procedure.selected = true\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure){\r\n        if (node.state.procedure[0]){\r\n            if (node.state.procedure[0].children){\r\n                node.state.procedure[0].children.push(prod);\r\n                prod.parent = node.state.procedure[0];\r\n            } else {\r\n                if (node.state.procedure[0].parent){\r\n                    prod.parent = node.state.procedure[0].parent;\r\n                    var list = prod.parent.children;\r\n                } else {\r\n                    var list = node.procedure;\r\n                }\r\n                for (let index in list){\r\n                    if (list[index].selected){\r\n                        list.splice(parseInt(index)+1, 0, prod);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            node.procedure.push(prod);\r\n        }\r\n\r\n    }\r\n    \r\n    static add_procedure(node: INode, type: ProcedureTypes, data: IFunction ){\r\n        let prod: IProcedure = <IProcedure>{};\r\n        prod.type= type;\r\n        \r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n        // select the procedure\r\n        NodeUtils.select_procedure(node, prod, false);\r\n\r\n        switch(prod.type){\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n            \r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2; \r\n                prod.args = [ {name: 'i', value: undefined, default: undefined}, {name: 'arr', value: undefined, default: []} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1; \r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.If: \r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if(!data) throw Error('No function data');\r\n                \r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn){\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined}\r\n                }\r\n\r\n                // --UNSTABLE--\r\n                // changing the value of the last argument of all functions in input node to be undefined\r\n                if (node.type == 'start'){\r\n                    data.args[data.argCount-1].value = undefined\r\n                }\r\n                \r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput};\r\n                prod.argCount = data.argCount + 1;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, ...data.args];\r\n                break;\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode:INode, newPos): INode{\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x\r\n        newNode.position.y = newPos.y\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any{\r\n        if (prod.hasOwnProperty('children')){\r\n            prod.children.map((child: IProcedure) => {\t\r\n                NodeUtils.updateID(child);\t\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        return prod\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ){\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false);\r\n    }\r\n\r\n}","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';","import { IPortOutput, IPortInput } from \"./port.interface\";\r\nimport { PortType, OutputType, InputType } from \"./types\";\r\nimport { IdGenerator } from \"@shared/utils\";\r\n\r\nexport class PortUtils{\r\n\r\n    static getNewInput(): IPortInput{\r\n        let inp: IPortInput = <IPortInput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'input', \r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    };\r\n\r\n    static getNewOutput(): IPortOutput{\r\n        let oup: IPortOutput = <IPortOutput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'output', \r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text, \r\n            }\r\n        }\r\n        return oup;\r\n    };\r\n\r\n}","export enum PortType{\r\n    Input, \r\n    Output\r\n}\r\n\r\nexport enum InputType{\r\n    SimpleInput, \r\n    Slider, \r\n    Checkbox,\r\n    URL, \r\n    File\r\n}\r\n\r\nexport enum OutputType{\r\n    Text, \r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';","export enum ProcedureTypes {\r\n    Variable, \r\n    If, \r\n    Elseif, \r\n    Else, \r\n    Foreach, \r\n    While, \r\n    Break, \r\n    Continue,\r\n    Function,\r\n    Imported\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n * \r\n */\r\n\r\nimport { NgModule, SkipSelf, Optional } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\nimport { SVGFlowchartModule } from '../../app/ngFlowchart-svg';\r\nimport { AngularSplitModule } from 'angular-split';\r\n\r\nimport { MbFileReaderDirective } from \"./directives/filesys\";\r\nimport { ExecuteComponent } from \"./components/execute/execute.component\";\r\nimport { PageNotFoundComponent } from \"./components/not-found/not-found.component\";\r\nimport { NavigationComponent } from \"./components/navigation/navigation.component\";\r\nimport { HeaderComponent } from \"./components/header/header.component\";\r\nimport { AddOutputComponent } from \"./components/add-components/add_output.component\";\r\nimport { AddNodeComponent } from \"./components/add-components/add_node.component\";\r\nimport { AddInputComponent } from \"./components/add-components/add_input.component\";\r\nimport { ParameterViewerComponent } from \"./components/parameter-viewer/parameter-viewer.component\";\r\nimport { InputPortViewerComponent } from \"./components/parameter-viewer/input-port-viewer/input-port-viewer.component\";\r\nimport { procedureInputViewerComponent } from \"./components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component\";\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\n\r\nimport { MobiusViewerModule } from '../mViewer/mobius-viewer.module';\r\nimport { autogrowDirective } from \"./directives/textarea\";\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective, \r\n            autogrowDirective, \r\n            ExecuteComponent, \r\n            PageNotFoundComponent, \r\n            NavigationComponent, \r\n            HeaderComponent, \r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            ParameterViewerComponent,  InputPortViewerComponent, procedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n        ],\r\n    imports: [ \r\n            CommonModule, \r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            SVGFlowchartModule, \r\n            MobiusViewerModule,\r\n            AngularSplitModule, \r\n            FormsModule,\r\n            MatIconModule,\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [  \r\n            FormsModule,\r\n            SVGFlowchartModule, \r\n            MobiusViewerModule,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective, \r\n            autogrowDirective, \r\n            ExecuteComponent, \r\n            PageNotFoundComponent, \r\n            NavigationComponent, \r\n            HeaderComponent, \r\n            AddNodeComponent, \r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            ParameterViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n    ]\r\n})\r\nexport class SharedModule{\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule){\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}","export abstract class IdGenerator{\r\n\t\r\n\tprivate static s4(): string{\r\n\t    return Math.floor((1 + Math.random()) * 0x10000)\r\n\t      .toString(16)\r\n\t      .substring(1);\r\n\t}\r\n\r\n\tstatic getId(): string{\r\n\t  return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n\t    this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n\t}\r\n\r\n\tstatic getNodeID():string{\r\n\t\treturn 'node_' + Math.random().toString(36).substr(2, 16);\r\n\t}\r\n\r\n\tstatic getProdID(){\r\n\t\treturn 'prod-' + Math.random().toString(36).substr(2, 16);\r\n\t}\r\n}","export * from './GUID'","//export * from './view-about/view-about.module';\r\n//export * from './view-gallery/view-gallery.module';\r\nexport * from './view-publish/view-publish.module';\r\nexport * from './view-publish/view-publish.component';\r\nexport * from './view-editor/view-editor.module';\r\nexport * from './view-editor/view-editor.component';","module.exports = \"<div class='flowchart-info'>\\r\\n\\t<input [(ngModel)]='flowchart.name' size={{flowchart.name?.length||1}}>\\r\\n\\t<textarea autogrow [(ngModel)]='flowchart.description' placeholder=\\\"flowchart description\\\"></textarea>\\r\\n</div>\\r\\n<hr>\\r\\n<div class='container--input'>\\r\\n\\t<procedure-input-editor *ngFor=\\\"let prod of node.procedure\\\" [prod]=\\\"prod\\\" ></procedure-input-editor>\\r\\n</div>\\r\\n\\t\\r\\n<!--\\r\\n<section *ngIf=\\\"node.type != 'end'\\\">\\r\\n\\t<panel-header [node]='node' [title]=\\\"'inputs'\\\"></panel-header>\\r\\n\\t<div class='container--input'>\\r\\n\\t\\t<input-port-editor [port]=\\\"node?.input\\\" ></input-port-editor>\\r\\n\\t</div>\\r\\n</section>\\r\\n<section *ngIf=\\\"node.type != 'start'\\\">\\r\\n\\t<panel-header [node]='node' [title]=\\\"'output'\\\"></panel-header>\\r\\n\\t<div class='container--output'>\\r\\n\\t\\t<output-port-editor [port]=\\\"node?.output\\\" ></output-port-editor>\\r\\n\\t</div>\\r\\n</section>\\r\\n-->\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 10px;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: -ms-grid;\\n  display: grid;\\n  padding-left: 10px;\\n  margin: 5px 0px;\\n  width: 100%; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding: 5px;\\n  margin-left: 3px;\\n  font-weight: 600;\\n  font-style: italic;\\n  min-width: 40px;\\n  max-width: 300px;\\n  font-size: 12px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\ntextarea {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding-left: 5px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 10px 0px 5px 3px;\\n  height: 18px;\\n  width: 90%;\\n  resize: none; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid gainsboro; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent{\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n    /*\r\n    deletePort(port, index){\r\n      const porttype = port.type;\r\n\r\n      if(porttype == PortType.Input && this.node.input[index] !== undefined){\r\n          this.node.input.splice(index, 1);\r\n      }\r\n      else if(porttype == PortType.Output && this.node.output[index] !== undefined){\r\n          this.node.output.splice(index, 1);\r\n      }\r\n\r\n    }\r\n    */\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' size='15' disabled>\\r\\n\\r\\n    <select name={{prod.ID}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' size={{prod.args[prod.argCount-1].default.length||13}}>\\r\\n\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].min' placeholder='Min' size={{prod.args[prod.argCount-1].min?.length||1}}>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].max' placeholder='Max' size={{prod.args[prod.argCount-1].max?.length||1}}>\\r\\n            <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                tickInterval=\\\"auto\\\"\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].default' size={{prod.args[prod.argCount-1].default?.length||1}} disabled>\\r\\n\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </ng-container>\\r\\n\\r\\n    \\r\\n    <!--\\r\\n    <div class='parameter__name' [ngSwitch]=\\\"prod.meta.mode\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default Value'>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].default' value='prod.args[prod.argCount-1].default' disabled>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"range\\\" >\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </div>\\r\\n\\r\\n    <select name={{prod.name}}_type *ngIf=\\\"prod.parentNode.type=='start'\\\"  [(ngModel)]=\\\"prod.meta.mode\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.mode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    -->\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #505050;\\n  vertical-align: bottom;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  width: 100%; }\\n\\nselect {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: 1px solid #505050; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.slider-val {\\n  color: #505050;\\n  resize: horizontal;\\n  size: 2;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: 20px; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.div--slider {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nconst keys = Object.keys(InputType);\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class procedureInputEditorComponent{\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n    \r\n    constructor(){ }\r\n\r\n    editOptions(): void{ }\r\n\r\n    onFileChange(event){\r\n      this.prod.args[this.prod.args.length -1] = event.target.files[0];\r\n    }\r\n\r\n}","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <input class='input--arg'\\r\\n                [(ngModel)]='data.args[1].value'\\r\\n                name='data.args[1].name'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                size=\\\"1\\\"\\r\\n                size={{data.args[1].value?.length||data.args[1].name.length}}>  \\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='function-text'>\\r\\n                If\\r\\n            </div>\\r\\n            ( <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                    )\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='function-text'>\\r\\n                Else if\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        ( <input class='input--arg'\\r\\n                (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                )\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='function-text'>\\r\\n                Else\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <!-- FOREACH Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n                <div class='function-text'>\\r\\n                    For\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                <div class='function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    name='data.args[1].name'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    size={{data.args[1].value?.length||data.args[1].name.length}}>  \\r\\n                    \\r\\n        </div>\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='function-text'>\\r\\n                While\\r\\n            </div>\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.meta.module.toUpperCase() !='OUTPUT' && data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'>{{data.meta.module}}.{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <!--\\r\\n                <input *ngIf=\\\"p.name.toUpperCase() !== '__MODEL__'; else text_template\\\" \\r\\n                \\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)' \\r\\n                [(ngModel)]='p.value' \\r\\n                placeholder={{p.name}}>    \\r\\n                \\r\\n                <ng-template #text_template>\\r\\n                    model,\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n                <input *ngIf=\\\"p.name.indexOf('__') == -1\\\" \\r\\n                        class='input--arg' \\r\\n                        (cut)='stopProp($event)' \\r\\n                        (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.value?.length||p.name.length}}>    \\r\\n                \\r\\n                <!--\\r\\n\\r\\n                <ng-template #model_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == model; else params_template\\\">\\r\\n                        model,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                <ng-template #params_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == constList;\\\">\\r\\n                        const_list,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <input class='input--var'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <div class='function-text'>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                        (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.value?.length||p.name.length}}>    \\r\\n            </ng-container>\\r\\n            \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- delete button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n        </button>\\r\\n        <!-- Disable button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>tv_off</mat-icon>\\r\\n        </button>\\r\\n        <!-- Print button-->\\r\\n        <button *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>print</mat-icon>\\r\\n        </button>\\r\\n        <!-- help button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>help</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- list of child procedures (if the procedure has children) -->\\r\\n    <div *ngIf=\\\"data?.children\\\" class='container--nested'>\\r\\n        <procedure-item \\r\\n            *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)='selectChild($event, line)'\\r\\n            (delete)='deleteChild(idx)'></procedure-item>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  margin: 8px 0px 8px 10px;\\n  padding: 2px 0px 2px 2px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  color: #505050;\\n  min-height: 22px;\\n  opacity: 1; }\\n\\n.container--line.disabled {\\n    opacity: 0.5; }\\n\\n.container--line.selected {\\n    border: 1px solid #000096;\\n    background-color: gainsboro; }\\n\\n.container--line.error {\\n    border: 1px solid red; }\\n\\n.container--item {\\n  margin: none;\\n  padding: none;\\n  border: none; }\\n\\n.btn {\\n  height: 24px;\\n  width: 24px;\\n  float: right;\\n  background-color: transparent;\\n  border: none;\\n  display: none;\\n  color: #777; }\\n\\n.btn.highlighted {\\n    background-color: #ff9696; }\\n\\n.container--item:hover .btn {\\n  display: block; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 20px; }\\n\\n.line--item {\\n  display: inline-block;\\n  color: #505050; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.input--var {\\n  width: 70px;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-right: 5px; }\\n\\n.input--arg {\\n  resize: horizontal;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: auto;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px; }\\n\\ninput:focus {\\n  border: 1px solid #000096; }\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: normal;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 600; }\\n\"","import { Component, Input, Output,  EventEmitter, OnInit, OnDestroy} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ProcedureTypesAware } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\n@ProcedureTypesAware\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html', \r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent{\r\n    @Input() data: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n\r\n    private model = _parameterTypes.model;\r\n    private constList = _parameterTypes.constList;\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    // delete this procedure\r\n    emitDelete(): void{\r\n        this.delete.emit();\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event, procedure: IProcedure){\r\n        event.stopPropagation();\r\n        this.select.emit({\"ctrl\":event.ctrlKey, \"prod\":procedure});\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void{\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure){\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markPrint(){\r\n        this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled(){\r\n        this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    canBePrinted(){\r\n        return (this.data.argCount > 0 && this.data.args[0].name == 'var_name')\r\n    }\r\n\r\n    // stopPropagation to prevent cut/paste with input box focused\r\n    stopProp(event):void{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    // modify input: replace space \" \" with underscore \"_\"\r\n    varMod(event){\r\n        if(!event) return event;\r\n        let str = event.trim();\r\n        str = str.replace(/ /g,\"_\");\r\n        return str;\r\n    }\r\n}","module.exports = \"<ng-container *ngIf=\\\"nodeType == ''\\\">\\r\\n    <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n    <ul class='toolset__basic'>\\r\\n        <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n            <li *ngIf='type.toUpperCase() !== \\\"FUNCTION\\\" && type.toUpperCase() !== \\\"IMPORTED\\\"'\\r\\n                (click)='add(ProcedureTypes[type])'> \\r\\n                {{type}}\\r\\n            </li>\\r\\n        </ng-container>\\r\\n    </ul>\\r\\n    \\r\\n    <!--\\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'>\\r\\n                <h3>{{ mod.module }}</h3>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class='toolset__functions'>\\r\\n        <section>\\r\\n            <h3>Imported</h3>\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of functions' (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                    <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                        <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </section>\\r\\n        <br>\\r\\n        <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n        <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\">\\r\\n            <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    -->\\r\\n\\r\\n    <!-- functions from core.modules -->\\r\\n    <ng-container *ngFor='let mod of Modules' >\\r\\n\\r\\n        <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n        *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'\\r\\n        (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- imported functions -->\\r\\n    <ng-container>\\r\\n        <button id='imported' class=\\\"accordion\\\" \\r\\n        (click)='toggleAccordion(\\\"imported\\\")' >Imported</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of functions' (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                    <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                        <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <br>\\r\\n            <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n            <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</ng-container>\\r\\n\\r\\n<!-- functions for input nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'start'\\\">\\r\\n    \\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"INPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- functions for output nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'end'\\\">\\r\\n    <div class='toolset__functions' *ngIf=\\\"hasProd===false\\\">\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"OUTPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  width: 100%;\\n  background-color: #efefef; }\\n\\nul {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  padding-left: 15px; }\\n\\nul li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    color: #505050;\\n    font-size: 12px;\\n    line-height: 18px; }\\n\\n.remove-btn {\\n  background-color: transparent;\\n  border: none;\\n  height: 13px;\\n  float: right; }\\n\\n.remove-btn .remove-icon {\\n    font-size: 11px;\\n    height: 11px;\\n    color: #505050; }\\n\\n.add-btn {\\n  background-color: transparent;\\n  border: none;\\n  float: left;\\n  padding: 6px;\\n  transition: 0.4s; }\\n\\n.add-btn :hover {\\n    background-color: gainsboro; }\\n\\n.add-btn .add-icon {\\n    float: left;\\n    color: #505050; }\\n\\n.accordion {\\n  background-color: gainsboro;\\n  color: #505050;\\n  cursor: pointer;\\n  width: 100%;\\n  padding: 8px 8px 8px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550; }\\n\\n.active, .accordion:hover {\\n  background-color: #ccc; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px 10px 0px 0px;\\n  display: none;\\n  background-color: #efefef;\\n  overflow: hidden; }\\n\"","import { Component, Output, EventEmitter, Input} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IModule } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\nimport { ModuleAware } from '@shared/decorators';\r\n\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\n\r\n@ModuleAware\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss']\r\n})\r\nexport class ToolsetComponent{\r\n\r\n    @Output() select = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    @Input() functions: IFunction[];\r\n    @Input() nodeType: string;\r\n    @Input() hasProd: boolean;\r\n    \r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor(){}\r\n    \r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes): void{\r\n        this.select.emit( { type: type, data: undefined } ); \r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData){\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => { \r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n        \r\n        this.select.emit( { type: ProcedureTypes.Function, data: fnData } ); \r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData){\r\n        fnData.args = fnData.args.map( (arg) => { \r\n            return {name: arg.name, value: arg.value};\r\n            });\r\n        this.select.emit( { type: ProcedureTypes.Imported, data: fnData } ); \r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData){\r\n        this.delete.emit(fnData); \r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event){\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            let reader = new FileReader();\r\n            reader.onload = function(){\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n                // create function\r\n                var funcs = [];\r\n                var func: IFunction = <IFunction>{\r\n                    module: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: event.target.files[0].name.split('.')[0],\r\n                };\r\n\r\n                // go through the nodes\r\n                func.argCount = fl.nodes[0].procedure.length;\r\n                func.args = fl.nodes[0].procedure.map(prod => {\r\n                    return <IArgument>{\r\n                        name: prod.args[prod.argCount-2].value.substring(1,prod.args[prod.argCount-2].value.length-1),\r\n                        default: prod.args[prod.argCount-1].default,\r\n                        value: undefined,\r\n                        min: undefined,\r\n                        max: undefined\r\n                    };\r\n                });\r\n                if (!func.argCount){\r\n                    resolve('error');\r\n                }\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (let i of fl.functions){\r\n                    funcs.push(i)\r\n                }\r\n                resolve(funcs)\r\n            }\r\n            reader.onerror = function(){\r\n                resolve('error')\r\n            }\r\n            reader.readAsText(event.target.files[0])\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = \"\";\r\n        if (fnc === 'error'){\r\n            console.warn('Error reading file')\r\n            return\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    toggleAccordion(id: string){\r\n        var acc = document.getElementById(id);\r\n        //var acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle(\"active\");\r\n        var panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.style.display === \"block\") {\r\n            panel.style.display = \"none\";\r\n        } else {\r\n            panel.style.display = \"block\";\r\n        }\r\n        \r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<h2>{{node?.name}}</h2>\\r\\n\\r\\n<div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'\\r\\n(copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\\r\\n\\r\\n\\t<div class='container__content'>\\r\\n\\t\\t<!-- toolset on the left side -->\\r\\n\\t\\t<div class=\\\"container--toolset\\\">\\r\\n\\t\\t\\t<toolset [functions]='flowchart.functions' \\r\\n\\t\\t\\t[nodeType]='node.type' \\r\\n\\t\\t\\t[hasProd]='node.procedure.length>0' \\r\\n\\t\\t\\t(delete)='deleteFunction($event)' \\r\\n\\t\\t\\t(select)='add($event)' \\r\\n\\t\\t\\t(imported)='importFunction($event)'></toolset>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- procedure editor on the right side -->\\r\\n\\t\\t<div id='procedure' class=\\\"container--procedure\\\">\\r\\n\\t\\t\\t<!-- parameter-editor only for start node -->\\r\\n\\t\\t\\t<parameter-editor *ngIf=\\\"node.type == 'start'\\\" [flowchart]='flowchart' [node]='node'></parameter-editor>\\r\\n\\r\\n\\t\\t\\t<!-- list of procedure items for all nodes -->\\r\\n\\t\\t\\t<procedure-item \\r\\n\\t\\t\\t*ngFor=\\\"let line of node?.procedure; let idx=index\\\" \\r\\n\\t\\t\\t[data]=\\\"line\\\"\\r\\n\\t\\t\\t(select)=\\\"selectProcedure($event,line)\\\"\\r\\n\\t\\t\\t(delete)=\\\"deleteChild(idx)\\\"></procedure-item>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".container--editor {\\n  display: block;\\n  height: 95%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 98%; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  width: 100%;\\n  font-size: 12px;\\n  line-height: 14px;\\n  font-weight: 600;\\n  padding-left: 15px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 95%;\\n  overflow: inherit; }\\n\\n.container--toolset {\\n  display: inline-flex;\\n  width: 20%; }\\n\\n.container--procedure {\\n  display: block;\\n  width: 76%;\\n  bottom: 10px;\\n  background-color: #fafafa;\\n  padding: none; }\\n\\nhr {\\n  border-top: 2px solid #efefef;\\n  width: 100%; }\\n\\n/*\\r\\n$header-height: 45px;\\r\\n\\r\\n.container{\\r\\n    position: relative;\\r\\n    overflow: auto;\\r\\n    margin: 10px 10px;\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n        \\r\\n    h1, h2, h3, h4, h5, h6, p{\\r\\n        margin: 0px;\\r\\n        padding: 0px;\\r\\n    }\\r\\n\\r\\n    .container__header{\\r\\n        flex: 0 1 auto;\\r\\n        min-height: $header-height;\\r\\n\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        justify-content: space-between;\\r\\n\\r\\n        padding: 0px 0px 0px 15px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n        \\r\\n        line-height: $header-height;\\r\\n        text-transform: uppercase;\\r\\n    \\r\\n        font-size: 18px;\\r\\n        font-weight: 600;\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    .container__content{\\r\\n        flex-grow: 1;\\r\\n        height: 0px;\\r\\n        border: 2px solid #3F4651;\\r\\n        overflow: auto;\\r\\n\\r\\n        split{\\r\\n            height: 100%;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .container__footer{\\r\\n        text-align: center;\\r\\n        font-size: 12px;\\r\\n        line-height: 18px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.content__panel{\\r\\n    height: 100%; \\r\\n    overflow: auto;\\r\\n\\r\\n    //padding: 10px 15px;\\r\\n}\\r\\n*/\\n\"","import { Component, Input, EventEmitter, Output} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent{\r\n    @Input() flowchart: IFlowchart; \r\n    @Input() node: INode;\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    copiedProd: IProcedure[];\r\n\r\n    private copyCheck: boolean = false;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n      NodeUtils.add_procedure(this.node, data.type, data.data);\r\n    }\r\n\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void{\r\n      this.node.procedure.splice(index, 1);\r\n      NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event, line): void{\r\n      NodeUtils.select_procedure(this.node, event.prod, event.ctrl||false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd(){\r\n      if (!this.copyCheck) return;\r\n      console.log('copying', this.node.state.procedure)\r\n      this.copiedProd = this.node.state.procedure;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd(event){\r\n      if (!this.copyCheck || document.activeElement.nodeName == \"INPUT\") return;\r\n      console.log('cutting', this.node.state.procedure)\r\n      this.copiedProd = this.node.state.procedure;\r\n      var parentArray;\r\n      for (let prod of this.copiedProd){\r\n        if (prod.parent){\r\n          parentArray = prod.parent.children;\r\n        } else parentArray = this.node.procedure;\r\n\r\n        for (let i = 0; i < parentArray.length; i++ ){\r\n          if (parentArray[i] === prod){\r\n            parentArray.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd(event){\r\n      if (this.copyCheck && document.activeElement.nodeName.toUpperCase() != \"INPUT\"){\r\n        const pastingPlace = this.node.state.procedure[0];\r\n        if (pastingPlace === undefined){\r\n          for (let i = 0; i< this.copiedProd.length; i++){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            this.node.state.procedure = []\r\n          }\r\n        } else if (pastingPlace.children){\r\n          for (let i = 0; i< this.copiedProd.length; i++){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true\r\n            this.node.state.procedure = [pastingPlace]\r\n          }\r\n\r\n        } else {\r\n          for (let i = this.copiedProd.length-1; i>=0; i --){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true\r\n            this.node.state.procedure = [pastingPlace]\r\n          }\r\n        }\r\n        //this.copiedProd = undefined;\r\n      }\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void{\r\n      this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void{\r\n      this.copyCheck = false;\r\n    }\r\n\r\n    // import a flowchart as function\r\n    importFunction(event){\r\n      for (let func of event){\r\n        this.flowchart.functions.push(func);\r\n      }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event){\r\n        for (let i = 0; i < this.flowchart.functions.length; i++){\r\n            if (this.flowchart.functions[i] == event){\r\n                this.flowchart.functions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component'; \r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { procedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { MatSliderModule, MatIconModule, MatExpansionModule, MatButtonModule, MatSelectModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    procedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ], \r\n  imports: [\r\n    CommonModule, \r\n    SharedModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","module.exports = \"<parameter-viewer [flowchart]='flowchart' [startNode]='flowchart.nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n\\r\\n<!--\\r\\n<div class='container'>\\r\\n\\t<div class='container__content'>\\r\\n\\t\\r\\n\\t\\t< !-- Side content__Panel: Split into three panes -- >\\r\\n\\t\\t<as-split direction=\\\"vertical\\\">\\r\\n\\r\\n\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t<parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t< !-- \\r\\n\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t\\t<flowchart [data]=\\\"flowchart\\\" (select)='selectNode($event)'></flowchart>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area> \\r\\n\\t\\t\\t-- >\\r\\n\\t\\t\\r\\n\\t\\t</as-split>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n-->\\r\\n<!--\\r\\n<div class='container'>\\r\\n\\r\\n\\t<div class='container__header'>\\r\\n\\t\\tMobius Viewer\\t\\r\\n\\t\\t<navigation></navigation>\\r\\n\\t\\t<execute [flowchart]='flowchart'></execute>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class='container__content'>\\r\\n\\t\\t<file-new *ngIf='!flowchart'></file-new>\\r\\n\\r\\n\\t\\t<as-split direction=\\\"horizontal\\\" *ngIf='flowchart'>\\r\\n\\t\\t\\t<as-split-area size=\\\"60\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class='content__panel' *ngIf='flowchart.meta.selected_nodes[0] !== undefined'>\\r\\n\\t\\t\\t\\t\\t<mviewer [node]='flowchart.nodes[flowchart.meta.selected_nodes[0]]'></mviewer>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<as-split-area size=\\\"40\\\">\\r\\n\\t\\r\\n\\r\\n\\t\\t\\t\\t<as-split direction=\\\"vertical\\\">\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</as-split>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t</as-split>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class='container__footer'>\\r\\n\\t\\tCopyright © 2018 Design Automation Lab, NUS. All Rights Reserved.\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n</div>\\r\\n-->\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 45px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #3F4651;\\n    color: #E7BF00;\\n    line-height: 45px;\\n    text-transform: uppercase;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: none;\\n    overflow: auto; }\\n  .container .container__content split {\\n      height: 100%; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  height: 100%;\\n  overflow: auto;\\n  padding: 10px 15px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'view-publish',\r\n  templateUrl: './view-publish.component.html',\r\n  styleUrls: ['./view-publish.component.scss']\r\n})\r\nexport class ViewPublishComponent{\r\n    @Input() flowchart: IFlowchart;\r\n\r\n    constructor(){}\r\n\r\n    selectNode(node_index: number): void{  \r\n      if( typeof(node_index) == 'number' ){\r\n          this.flowchart.meta.selected_nodes = [node_index];  \r\n      }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (let node of this.flowchart.nodes){\r\n        if (node.type == 'end') return node;\r\n      }\r\n    }\r\n    \r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewPublishRoutingModule } from './view-publish-routing.module';\r\nimport { ViewPublishComponent } from './view-publish.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewPublishComponent\r\n  ],\r\n  exports: [ \r\n    ViewPublishComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewPublishModule {\r\n    constructor () { }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}